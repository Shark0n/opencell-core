{
	"info": {
		"_postman_id": "96f7af3f-11d9-4b1f-ad27-d3f5eab8d2a9",
		"name": "Opencell",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "Accounting",
					"item": [
						{
							"name": "Account Code",
							"item": [
								{
									"name": "CreateOrUpdate Accounting Code SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca045db9-4a80-4b87-afab-c027ac1e8e49",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_AC\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Accounting Code SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db4d865b-cc56-4bf6-93ed-271e5948242c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.accountingCode.code).to.eql(pm.environment.get(\"testCode\")+\"_AC\");",
													"    pm.expect(jsonData.accountingCode.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode?accountingCode={{testCode}}_AC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode"
											],
											"query": [
												{
													"key": "accountingCode",
													"value": "{{testCode}}_AC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Accounting Code ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4cb1a92b-c6da-4e45-be6f-28424fa00e29",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"AccountingCode with code=\"+pm.environment.get(\"testCode\")+\"_AC already exists.\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_AC\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Accounting Code ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "256efd63-6539-43d1-8def-f356c042edfe",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"AccountingCode with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"chartOfAccountTypeEnum\": \"ASSETS\",\r\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Accounting Code SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46b5cd84-35c3-4b66-8a4b-498dc063fcc4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_AC\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"disabled\": false,\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\",\r\n\t\"migrated\": false\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Accounting Code SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8af49a07-214c-4b9a-ba7b-15f141941a35",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_AC\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"disabled\": false,\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\",\r\n\t\"migrated\": false\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Accounting Code SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af6f40f3-e16c-47c4-ac4d-6dd66c70c93d",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.accountingCode.code).to.eql(pm.environment.get(\"testCode\")+\"_AC\");",
													"    pm.expect(jsonData.accountingCode.description).to.eql(pm.environment.get(\"testDescription\")+ \" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode?accountingCode={{testCode}}_AC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode"
											],
											"query": [
												{
													"key": "accountingCode",
													"value": "{{testCode}}_AC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Accounting Code MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "afadff2b-213a-4d67-a503-f920cf8a8707",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: chartOfAccountTypeEnum, chartOfAccountViewTypeEnum.\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Accounting Code INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3028cdb9-e9d5-4987-b37c-262623802d62",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.billing.ChartOfAccountViewTypeEnum`\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "OCC Template",
							"item": [
								{
									"name": "CreateOrUpdate OCC Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c1ee560-bc1e-4ebc-ae39-7ffde61b1213",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_OCCT\",\r\n  \"accountingCode\": \"{{testCode}}_AC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OCC Template ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6f81ad43-512a-4ddc-b850-39301999098f",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"OCCTemplate with code=\"+pm.environment.get(\"testCode\")+\"_OCCT already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_OCCT\",\r\n  \"accountingCode\": \"{{testCode}}_AC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update OCC Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a0103fa-36c3-42d4-87c3-6208dc721b60",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"NOT_EXIST\",\r\n  \"accountingCode\": \"{{testCode}}_AC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update OCC Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2abe19d1-df93-4cc4-b7f1-b8cc54dff5e0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_OCCT\",\r\n  \"accountingCode\": \"{{testCode}}_AC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate OCC Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a771037b-ed5f-4fa1-80a0-050ba8cdb68d",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_OCCT\",\r\n  \"accountingCode\": \"{{testCode}}_AC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate OCC Template MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41016934-4f4b-48f8-bd47-90901228f2b6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: accountCode / accountingCode.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_OCCT_Missing\",\r\n  \"description\": \"{{testDescription}} missing\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate OCC Template INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9ba5170-f0ec-40fa-b6b8-bc7c5ed1595b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.payments.OperationCategoryEnum` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Clear Data",
							"item": [
								{
									"name": "Delete Accounting Code GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd80e7ad-9128-47b1-8d2a-2dbe3a8aa47b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(500);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"is still referenced from table\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/TEST_AC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"TEST_AC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete OCC Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5fbfe865-7415-4705-a49f-d6acfde71202",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate/{{testCode}}_OCCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate",
												"{{testCode}}_OCCT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete OCC Template FAIL",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0fa436bc-6143-497e-8a00-c9d219818c36",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"OCCTemplate with code=\"+pm.environment.get(\"testCode\")+\"_OCCT does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/occTemplate/{{testCode}}_OCCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"occTemplate",
												"{{testCode}}_OCCT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Accounting Code SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41ec2c1d-c240-4f45-a43c-eb98895bf09b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/{{testCode}}_AC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"{{testCode}}_AC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Accounting Code FAIL",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "240d2e84-d285-40d0-817c-fe8e3599d199",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"AccountingCode with code=\"+pm.environment.get(\"testCode\")+\"_AC does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/accountingCode/{{testCode}}_AC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"accountingCode",
												"{{testCode}}_AC"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "BillingCycle",
							"item": [
								{
									"name": "CreateOrUpdate Billing Cylcle SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca3a465a-86fd-4133-b240-d2d6a2f080a2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BTN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Cycle ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3fc11aa0-f3c7-47fa-9ce2-859288695029",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"BillingCycle with code=\"+pm.environment.get(\"testCode\")+\"_BC already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BTN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Cycle SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e49c123b-94eb-4270-9388-22cd59306629",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.billingCycle.code).to.eql(pm.environment.get(\"testCode\")+\"_BC\");",
													"    pm.expect(jsonData.billingCycle.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle?billingCycleCode={{testCode}}_BC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle"
											],
											"query": [
												{
													"key": "billingCycleCode",
													"value": "{{testCode}}_BC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65e2f021-2cac-438f-8c70-8ce0e69a3ef5",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"BillingCycle with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"NOT_EXIST\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BtN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Cycle SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b65340c4-5256-4dee-a51d-c492c4d91ef0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"billingTemplateName\": \"TEST\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Billing Cycle SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9dd16440-1e36-420d-bfdf-5da74129d339",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"billingTemplateName\": \"TEST\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Cycle SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af28b351-22f0-4b3a-a7fe-3dc50b5174ec",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.billingCycle.code).to.eql(pm.environment.get(\"testCode\")+\"_BC\");",
													"    pm.expect(jsonData.billingCycle.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle?billingCycleCode={{testCode}}_BC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle"
											],
											"query": [
												{
													"key": "billingCycleCode",
													"value": "{{testCode}}_BC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Billing Cycle MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5fe5afa2-5590-480b-afcc-9eda3cef8e8b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: invoiceDateDelay.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"MISSING\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"calendar\": \"MONTHLY\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e3c0184-6805-4422-9ed7-6fdaaacd1a6b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Calendar with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"calendar\": \"NOT_EXIST\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Seller",
							"item": [
								{
									"name": "CreateOrUpdate Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e823b3c-c4de-48a3-b34d-f7f9fc6d2082",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cbc6c3d-f48e-47a4-ab8c-8c7c9fecc79e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=\"+pm.environment.get(\"testCode\")+\"_SELLER already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bac03cbe-10d7-440a-b17c-2eead21dcb4a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.seller.code).to.eql(pm.environment.get(\"testCode\")+\"_SELLER\");",
													"    pm.expect(jsonData.seller.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{testCode}}_SELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{testCode}}_SELLER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b61a8549-4c99-4c1a-ba70-8d8db176b515",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{   \r\n    \"code\":\"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b3b4439-eb4a-49df-8f65-4921ad417cec",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf1f7f39-550c-41d9-a457-8cb3272ef2fb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67c7fe4b-87c7-4927-aa68-091c7b886512",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.seller.code).to.eql(pm.environment.get(\"testCode\")+\"_SELLER\");",
													"    pm.expect(jsonData.seller.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{testCode}}_SELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{testCode}}_SELLER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76a277ba-8765-46ac-9ce5-27d2a1d2c8cd",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\": \"NOT_EXIST\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "CustomerBrand",
							"item": [
								{
									"name": "CreateOrUpdate CustomerBrand SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6329fb80-55c6-460d-a065-615a8ee57b09",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateBrand"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CustomerBrand ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f637c349-31a1-4afb-865c-015b5394b7e2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createBrand",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createBrand"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CustomerBrand ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00f20cdb-2b3e-4d77-9ab1-09d46d293dc0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerBrand with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/updateBrand",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"updateBrand"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CustomerBrand SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b154971-c655-4aff-ac6a-90e63cc1380f",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/updateBrand",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"updateBrand"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CustomerBrand SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "edd06429-43e4-4532-b058-9b3af21c2b09",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateBrand"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CustomerBrand MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96a14710-e86f-4f95-996b-027a8c3724b2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateBrand"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Customer Category",
							"item": [
								{
									"name": "CreateOrUpdate Customer Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82c1517f-f675-44d1-8599-15d2e74224b1",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read  Customer Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2185e0a4-e546-4fe0-bde0-146d0d895e13",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customerCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_CC\");",
													"    pm.expect(jsonData.customerCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/category/{{testCode}}_CC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"category",
												"{{testCode}}_CC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer Category ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17b7b772-36a5-43ca-a21c-858c069f4798",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=\"+pm.environment.get(\"testCode\")+\"_CC already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Customer Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5928b8b-6dda-43e5-98fa-dbe0049f1726",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/updateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"updateCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Customer Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aba5538f-84e7-4fe2-99bc-bac746c0dd94",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/updateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"updateCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f560178c-826b-442c-9dec-b775453425cf",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Customer Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a91463a0-1544-4fd0-ba9e-dc955da2c8d7",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customerCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_CC\");",
													"    pm.expect(jsonData.customerCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/category/{{testCode}}_CC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"category",
												"{{testCode}}_CC"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer Category MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2bd8c3bc-ce47-4c17-b0f7-f0ae2f931365",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testCode}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b82d82fd-adb4-4b9e-8c4c-cba0d288d5d0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"AccountingCode with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\",\r\n    \"accountingCode\": \"NOT_EXIST\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer Category INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c550b6f-69d5-49d8-9812-91f934fa8bbd",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"INVALID\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdateCategory"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Customer",
							"item": [
								{
									"name": "CreateOrUpdate Customer SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb670620-dae2-4891-9444-420b71e1feb2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Customer SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "958952b6-e7cb-4043-af78-3734aabdaf18",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_C\");",
													"    pm.expect(jsonData.customer.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{testCode}}_C"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67eeaf6f-adb3-4111-9f99-3ce1eac5e33d",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_C already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d1bd54f-1a3d-43ab-9cc1-00b2c7fdb244",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Customer with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Customer SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b7ae9cb-d343-4c95-b3ee-65038145e656",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "915fe46c-0835-4bf8-99ef-414441015c79",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Customer SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc00dcba-fd9e-4c7e-ad9c-b686a96afce1",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_C\");",
													"    pm.expect(jsonData.customer.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{testCode}}_C"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a5281259-ffac-4066-9765-5624a2b56b4b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: customerCategory.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "809f5bf3-574f-4ddb-8a2c-9275ae891bdd",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateDate\": \"INVALID\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d33a9c44-0119-4179-9f09-ee705fa3f8bf",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"NOT_EXIST\",\r\n    \"mandateIdentification\": \"\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ee50f46-6c41-450e-b19c-ecbb99f21201",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"NOT_EXIST\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c568934f-e097-469e-88a0-95b7b25bfea7",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerBrand with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"NOT_EXIST\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "CustomerAccount",
							"item": [
								{
									"name": "CreateOrUpdate CustomerAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "da502f56-1849-4587-991b-536de6df1202",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read CustomerAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "902d89fd-ab80-403c-87f5-c8b589974cb6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_CA\");",
													"    pm.expect(jsonData.customerAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{testCode}}_CA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{testCode}}_CA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CustomerAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0c5759e9-a697-4cb7-9c4d-95e7d3ca2402",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerAccount with code=\"+pm.environment.get(\"testCode\")+\"_CA already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06e15261-85fd-4cae-9fef-02f51550a724",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CustomerAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c6f4790-92d0-4783-915b-ea9f726f5036",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CustomerAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9fc41722-50f1-4396-bfc0-c7091905fecb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read CustomerAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecbf0f3e-7e27-4cb8-a7d5-0381fba6cae6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_CA\");",
													"    pm.expect(jsonData.customerAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{testCode}}_CA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{testCode}}_CA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CustomerAccount MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e74b91e-f964-4b8d-8705-553183a5e970",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: currency, language.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CustomerAccount INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0747f8bd-727a-4690-bf1e-684d7c207e7e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"mandateDate\": \"INVALID\"\r\n}\r\n\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e319433-d08c-4494-bde4-1f6040b8ca82",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Customer with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"customer\": \"NOT_EXIST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "BillingAccount",
							"item": [
								{
									"name": "CreateOrUpdate BillingAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad6bcd2c-822f-4c1b-a9bc-41ac3bb6c9e9",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read BillingAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73f561fe-4493-4695-8851-c23c8ce726ee",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_BA\");",
													"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{testCode}}_BA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{testCode}}_BA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create BillingAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1688d6d-262a-4a3a-b4b4-cf027e44c0a3",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"BillingAccount with code=\"+pm.environment.get(\"testCode\")+\"_BA already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update BillingAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36e01c45-e753-4a6d-b68c-7516ab685515",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"BillingAccount with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update BillingAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02c74c5e-f98c-40fa-8c4a-ed06b3e4373b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update BillingAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5327395e-4b38-4933-a79f-0457d3246d8e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read BillingAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13beb535-880a-4600-83b5-6fbf25467d32",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_BA\");",
													"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{testCode}}_BA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{testCode}}_BA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate BillingAccount MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01d5f18f-d5ec-46e6-8d93-0ae4afe6a576",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: country, language.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"MISSING\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate BillingAccount INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fe29d521-4efe-4ef7-b4b9-0d4d938eaef0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\",\r\n    \"subscriptionDate\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate BillingAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "edde0e6e-8c06-4224-bbc6-a4f9f65d86e8",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerAccount with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserAccount",
							"item": [
								{
									"name": "CreateOrUpdate UserAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94e3a03a-d67d-420c-881c-e5f730b66aac",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\" : \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read UserAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecb01e36-74ba-428d-9261-b19c7d1105b6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_UA\");",
													"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{testCode}}_UA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{testCode}}_UA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create UserAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5f3046ab-9615-461d-8601-7abb8b3cc856",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"UserAccount with code=\"+pm.environment.get(\"testCode\")+\"_UA already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\" : \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f54cd091-5fc0-4da5-bcfc-d5dc87672de9",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"UserAccount with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update UserAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c78a8fc0-ec0b-47b8-b72a-7dd191c8587b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate UserAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c0e6c505-3fee-4458-9d87-eb71c8e74f5d",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read UserAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec73976f-34a3-4016-b60d-a9f6e5196922",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_UA\");",
													"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{testCode}}_UA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{testCode}}_UA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate UserAccount MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22efbad0-5347-4abe-966b-03841e5d0153",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: billingAccount.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n\t\"code\": \"MISSING\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate UserAccount INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0dfc3fe7-c942-4495-bdab-480280f37dfa",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.billing.AccountStatusEnum` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n\t\"code\": \"{{testCode}}_UA\", \r\n\t\"billingAccount\":\"{{testCode}}_BA\",\r\n\t\"terminationReason\":\"TR\",\r\n\t\"terminationDate\":\"2018-09-14\",\r\n\t\"status\" : \"INVALID\" \r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c92c8dc-4811-4ce9-af6f-36989179f013",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"BillingAccount with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n\t\"code\": \"{{testCode}}_UA\", \r\n\t\"billingAccount\":\"NOT_EXIST\",\r\n\t\"terminationReason\":\"TR\",\r\n\t\"terminationDate\":\"2018-09-14\",\r\n\t\"status\" : \"ACTIVE\" \r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Provider Contact",
							"item": [
								{
									"name": "CreateOrUpdate Provider Contact SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "053f055d-4e8e-408d-bb0e-b73933f88136",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Provider Contact SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "59041d19-b893-46b8-aee9-6e2328663735",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.providerContact.code).to.eql(pm.environment.get(\"testCode\")+\"_PC\");",
													"    pm.expect(jsonData.providerContact.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact?providerContactCode={{testCode}}_PC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											],
											"query": [
												{
													"key": "providerContactCode",
													"value": "{{testCode}}_PC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Provider Contact ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6091f3fb-b9a8-4a09-9c4a-6d5f834342ba",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"ProviderContact with code=\"+pm.environment.get(\"testCode\")+\"_PC already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "87782c9e-a2ce-4561-874a-c8448f5529f4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"ProviderContact with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Provider Contact SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0ac9369b-d4c5-4142-9c66-eb86575dcb76",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Provider Contact SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "07fc56c2-f92a-4df9-978a-f0f8190ee267",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Provider Contact SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6cb2868a-c3ff-4ee0-aaba-0b6c5ac0974a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.providerContact.code).to.eql(pm.environment.get(\"testCode\")+\"_PC\");",
													"    pm.expect(jsonData.providerContact.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact?providerContactCode={{testCode}}_PC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											],
											"query": [
												{
													"key": "providerContactCode",
													"value": "{{testCode}}_PC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Provider Contact MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e37e5b0-e4de-457a-bf9a-d721f90629d0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: description.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Provider Contact INTERNAL_SERVER_ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b2e03727-8729-46a2-a85a-ccee9ce88e52",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(500);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"At least 1 of the field in Contact Information tab is required [email, genericEmail, phone, mobile].\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Provider Contact INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79b81446-5ed8-474b-a269-fd8f98f618d3",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.account.AddressDto`\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Provider Contact SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adfe58a1-9db8-4a83-9b5a-a64858697548",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact/{{testCode}}_PC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact",
												"{{testCode}}_PC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e0765f1e-55d7-4b15-9567-f192c6572d5a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"ProviderContact with code=\"+pm.environment.get(\"testCode\")+\"_PC does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/providerContact/{{testCode}}_PC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"providerContact",
												"{{testCode}}_PC"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account Hierarchy",
							"item": [
								{
									"name": "CreateOrUpdate Account Hierarchy SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "724ced6c-9fef-47d8-845c-cc7a468bbf65",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Account Hierarchy SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97a00643-b230-45e6-9c10-d79884e13113",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
													"    pm.expect(jsonData.customer.name.firstName).to.eql(\"created\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{testCode}}_CH"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9f01925-1766-43d8-a08e-dc51221685e4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_CH already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "242bf771-bd78-4a1b-b5b3-126d2c4b6de9",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"Customer with code='NOT_EXIST' does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"NOT_EXIST\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Account Hierarchy SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f9ca4ae-67d8-441a-b6b7-43b58a9fcaa8",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "66e27233-8a5a-4995-99fe-491b211f249a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"SELLER_US\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Account Hierarchy SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "deb00c60-bb60-4c62-83e0-9fba18ec3e34",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
													"    pm.expect(jsonData.customer.name.firstName).to.eql(\"updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{testCode}}_CH"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy MISSING_PARAMETER 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6410304-4a6f-47a7-bf29-bdcf64fe54d7",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: customerCode, customerCategoryCode, sellerCode, currencyCode, countryCode, billingCycleCode, languageCode, email.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy MISSING_PARAMETER 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b5dca49-6e08-4bfe-afcd-974bababa2bb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: customerCategoryCode, sellerCode, currencyCode, countryCode, billingCycleCode, languageCode, email.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"customerCode\": \"{{testCode}}_CH\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ebce4232-8abc-4750-9533-72f3deeb53f4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"Currency with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"NOT_EXIST\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8e72fe5-a907-40dd-a5aa-94ce623fc1c2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"NOT_EXIST\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Hierarchy INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4ec12dbf-8a79-4db7-84db-44a460b51cf0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_BC\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\",\r\n    \"birthDate\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Account Hierarchy SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b780f8f-ff5a-4a11-a17f-decb3f274cb6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{testCode}}_CH"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c662e1cf-132b-42c3-bba9-163ee32947c5",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_CH does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{testCode}}_CH"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Clear Data",
							"item": [
								{
									"name": "Delete UserAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "72e5c404-4081-4669-a00b-4088c7c40fcd",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/{{testCode}}_UA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"{{testCode}}_UA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3cdcd3f2-3bd6-4a8d-895b-53b7cafff9b1",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"UserAccount with code=\"+pm.environment.get(\"testCode\")+\"_UA does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/{{testCode}}_UA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"{{testCode}}_UA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CustomerBrand  DELETE_REFERENCED_ENTITY_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67825847-3fcb-4719-958c-cd3f1bd5323a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"DELETE_REFERENCED_ENTITY_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB is referenced.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"removeBrand",
												"{{testCode}}_CB"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete BillingAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1a15ff0-f2cd-4c6c-a6f8-cdefac7fd22b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/{{testCode}}_BA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"{{testCode}}_BA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete BillingAccount  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96da110f-6888-4754-8715-075b43acd87c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=\"+pm.environment.get(\"testCode\")+\"_BA does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/{{testCode}}_BA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"{{testCode}}_BA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CustomerAccount SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2da18fb-98f6-4d9a-b185-eb44deeed013",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/{{testCode}}_CA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"{{testCode}}_CA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae71192a-5d99-40cf-80c7-dd80260f9751",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerAccount with code=\"+pm.environment.get(\"testCode\")+\"_CA does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/{{testCode}}_CA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"{{testCode}}_CA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Customer SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68535ba0-b918-4461-a999-c5967f2024b6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{testCode}}_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{testCode}}_C"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a90b3903-0b7d-47c0-8743-debf72b006ea",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_C does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{testCode}}_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{testCode}}_C"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Seller SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3a808b2-58b0-48b0-92f2-8d20f5e0ea51",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/{{testCode}}_SELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"{{testCode}}_SELLER"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a68091fc-bb50-4ca7-8309-cdcdc488fa30",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=\"+pm.environment.get(\"testCode\")+\"_SELLER does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/{{testCode}}_SELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"{{testCode}}_SELLER"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Billing Cycle SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c04cff0e-b169-492a-93a8-a41d66baf3ef",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/{{testCode}}_BC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"{{testCode}}_BC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc18b82-d3b5-4ff5-9fb3-a103894ef79a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"BillingCycle with code=\"+pm.environment.get(\"testCode\")+\"_BC does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/{{testCode}}_BC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"{{testCode}}_BC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CustomerBrand  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5edc55ab-ad12-4e48-8900-861648894a98",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"removeBrand",
												"{{testCode}}_CB"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CustomerBrand  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "87d3e4f3-7faf-4cf1-9eba-f4577260f0fb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"removeBrand",
												"{{testCode}}_CB"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Administration",
					"item": [
						{
							"name": "Module",
							"item": [
								{
									"name": "CreateOrUpdate Module SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "053d7640-8666-49ac-a956-70ac3239aa84",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{testCode}}_MOD\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Module SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44de0339-c140-4d34-b2bd-0822b9356f48",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.module.code).to.eql(pm.environment.get(\"testCode\")+\"_MOD\");",
													"    pm.expect(jsonData.module.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module?code={{testCode}}_MOD",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_MOD"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Module ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cc61bd0-f0c1-40ba-bb4e-c64cb552ad52",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=\"+pm.environment.get(\"testCode\")+\"_MOD already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{testCode}}_MOD\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Module ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f8e42df3-c83d-4791-a40c-4342ef52b379",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"MeveoModule with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Module SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b661146d-6a87-432a-803c-dfbcef683236",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_MOD\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"license\": \"COM\",\r\n    \"moduleItems\": [\r\n        {\r\n            \"script\": {\r\n                \"code\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"description\": \"Save Ingenico Card\",\r\n                \"script\": \"package org.meveo.service.script;\\\\r\\\\n\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.Client;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.RequestHeader;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.PaymentResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.CardPaymentMethodSpecificOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentReferences;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentStatusOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.token.TokenResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.webhooks.WebhooksEvent;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.InMemorySecretKeyStore;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.SignatureValidationException;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.Webhooks;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.WebhooksHelper;\\\\r\\\\nimport org.apache.commons.collections4.MapUtils;\\\\r\\\\nimport org.json.simple.JSONObject;\\\\r\\\\nimport org.json.simple.parser.JSONParser;\\\\r\\\\nimport org.json.simple.parser.ParseException;\\\\r\\\\nimport org.meveo.admin.exception.BusinessException;\\\\r\\\\nimport org.meveo.commons.utils.StringUtils;\\\\r\\\\nimport org.meveo.model.notification.InboundRequest;\\\\r\\\\nimport org.meveo.model.payments.CardPaymentMethod;\\\\r\\\\nimport org.meveo.model.payments.CreditCardTypeEnum;\\\\r\\\\nimport org.meveo.model.payments.CustomerAccount;\\\\r\\\\nimport org.meveo.model.payments.PaymentGateway;\\\\r\\\\nimport org.meveo.service.payments.impl.CustomerAccountService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentGatewayService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentMethodService;\\\\r\\\\nimport org.slf4j.Logger;\\\\r\\\\nimport org.slf4j.LoggerFactory;\\\\r\\\\n\\\\r\\\\nimport java.util.ArrayList;\\\\r\\\\nimport java.util.HashMap;\\\\r\\\\nimport java.util.List;\\\\r\\\\nimport java.util.Map;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n *\\\\r\\\\n * @author Mounir Bahije\\\\r\\\\n *\\\\r\\\\n *         Script executed to save card enrolled with Ingenico Hosted Checkout\\\\r\\\\n *\\\\r\\\\n */\\\\r\\\\npublic class SaveIngenicoCardScript extends Script {\\\\r\\\\n\\\\r\\\\n    private final static Logger log = LoggerFactory.getLogger(SaveIngenicoCardScript.class);\\\\r\\\\n\\\\r\\\\n    private PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface(\\\\\\\"PaymentMethodService\\\\\\\");\\\\r\\\\n    private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\\\\\\\"CustomerAccountService\\\\\\\");\\\\r\\\\n    private PaymentGatewayService paymentGatewayService = (PaymentGatewayService) getServiceInterface(\\\\\\\"PaymentGatewayService\\\\\\\");\\\\r\\\\n\\\\r\\\\n    @Override\\\\r\\\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\\\r\\\\n\\\\r\\\\n        String verification = \\\\\\\"\\\\\\\";\\\\r\\\\n        InboundRequest inReq = (InboundRequest) methodContext.get(\\\\\\\"event\\\\\\\");\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"GET\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            String body = inReq.getBody();\\\\r\\\\n            Map<String, String> headers = inReq.getHeaders();\\\\r\\\\n            for (String headerKey : headers.keySet()) {\\\\r\\\\n                if (\\\\\\\"X-GCS-Webhooks-Endpoint-Verification\\\\\\\".equalsIgnoreCase(headerKey)) {\\\\r\\\\n                    String headerValue = headers.get(headerKey);\\\\r\\\\n                    verification = headerValue;\\\\r\\\\n                    inReq.setResponseBody(verification);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"POST\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            final String reqBody = inReq.getBody();\\\\r\\\\n\\\\r\\\\n            List<RequestHeader> requestHeaders = getWebhookRequestHeaders(inReq.getHeaders());\\\\r\\\\n            String webhooksKeyId = this.getHeaderValue(requestHeaders, \\\\\\\"X-GCS-KeyId\\\\\\\");\\\\r\\\\n\\\\r\\\\n            InMemorySecretKeyStore keyStore = InMemorySecretKeyStore.INSTANCE;\\\\r\\\\n            keyStore.storeSecretKey(webhooksKeyId, getWebhookSecretKey(webhooksKeyId));\\\\r\\\\n\\\\r\\\\n            WebhooksHelper helper = Webhooks.createHelper(keyStore);\\\\r\\\\n            WebhooksEvent webhooksEvent = helper.unmarshal(reqBody, requestHeaders);\\\\r\\\\n\\\\r\\\\n            PaymentResponse payment = webhooksEvent.getPayment();\\\\r\\\\n            if (payment == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentResponse not found on webhooksEvent : [%s]\\\\\\\", webhooksEvent));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentOutput paymentOutput = payment.getPaymentOutput();\\\\r\\\\n            if (paymentOutput == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentReferences paymentReferences = paymentOutput.getReferences();\\\\r\\\\n            if (paymentReferences == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"paymentReferences not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            String merchantReference = paymentReferences.getMerchantReference();\\\\r\\\\n\\\\r\\\\n            if (merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") >= 0) {\\\\r\\\\n\\\\r\\\\n                String longIdCA = merchantReference.substring(merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") + 3);\\\\r\\\\n                CustomerAccount ca = customerAccountService.findById(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                PaymentGateway paymentGateway = paymentGatewayService.getPaymentGateway(ca, null, null);\\\\r\\\\n\\\\r\\\\n                if (paymentGateway == null) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is null\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                if (!webhooksKeyId.equals(paymentGateway.getWebhooksKeyId())) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is not the good one\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                String status = payment.getStatus();\\\\r\\\\n                if (\\\\\\\"PENDING_CAPTURE\\\\\\\".equalsIgnoreCase(status)) {\\\\r\\\\n                    PaymentStatusOutput paymentStatusOutput = payment.getStatusOutput();\\\\r\\\\n                    if (paymentStatusOutput == null) {\\\\r\\\\n                        throw new BusinessException(String.format(\\\\\\\"paymentStatusOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n                    }\\\\r\\\\n                    Boolean isAuthorized = paymentStatusOutput.getIsAuthorized();\\\\r\\\\n\\\\r\\\\n                    if (isAuthorized) {\\\\r\\\\n\\\\r\\\\n                        CardPaymentMethodSpecificOutput cardPaymentMethodSpecificOutput = paymentOutput.getCardPaymentMethodSpecificOutput();\\\\r\\\\n                        if (cardPaymentMethodSpecificOutput == null) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"cardPaymentMethodSpecificOutput not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n                        }\\\\r\\\\n                        Long paymentProductId = Long.valueOf(cardPaymentMethodSpecificOutput.getPaymentProductId());\\\\r\\\\n\\\\r\\\\n                        JSONParser jsonParser = new JSONParser();\\\\r\\\\n                        JSONObject obj = null;\\\\r\\\\n                        try {\\\\r\\\\n                            obj = (JSONObject) jsonParser.parse(reqBody);\\\\r\\\\n                        } catch (ParseException e) {\\\\r\\\\n                            e.printStackTrace();\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String tokenId = (String) ((JSONObject) ((JSONObject) ((JSONObject) obj.get(\\\\\\\"payment\\\\\\\")).get(\\\\\\\"paymentOutput\\\\\\\")).get(\\\\\\\"cardPaymentMethodSpecificOutput\\\\\\\")).get(\\\\\\\"token\\\\\\\");\\\\r\\\\n                        if (StringUtils.isBlank(tokenId)) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"tokenId not found on webhooksEvent.payment.paymentOutput.cardPaymentMethodSpecificOutput : [%s]\\\\\\\", cardPaymentMethodSpecificOutput));\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String merchantId = webhooksEvent.getMerchantId();\\\\r\\\\n\\\\r\\\\n                        try {\\\\r\\\\n\\\\r\\\\n                            CreditCardTypeEnum cardType = fromId(Long.valueOf(paymentProductId).intValue());\\\\r\\\\n\\\\r\\\\n                            Client client = (Client) paymentMethodService.getClient(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                            TokenResponse response = client.merchant(merchantId).tokens().get(tokenId);\\\\r\\\\n\\\\r\\\\n                            String cardNumber = response.getCard().getData().getCardWithoutCvv().getCardNumber();\\\\r\\\\n                            String expiryDate = response.getCard().getData().getCardWithoutCvv().getExpiryDate();\\\\r\\\\n                            String ownerName = response.getCard().getData().getCardWithoutCvv().getCardholderName();\\\\r\\\\n                            CardPaymentMethod paymentMethod = new CardPaymentMethod();\\\\r\\\\n                            paymentMethod.setCardNumber(cardNumber);\\\\r\\\\n                            paymentMethod.setCardType(cardType);\\\\r\\\\n                            paymentMethod.setCustomerAccount(ca);\\\\r\\\\n                            paymentMethod.setPreferred(true);\\\\r\\\\n                            paymentMethod.setMonthExpiration(new Integer(expiryDate.substring(0, 2)));\\\\r\\\\n                            paymentMethod.setYearExpiration(new Integer(expiryDate.substring(2, 4)));\\\\r\\\\n                            paymentMethod.setOwner(ownerName);\\\\r\\\\n                            paymentMethod.setTokenId(tokenId);\\\\r\\\\n                            paymentMethod.setHiddenCardNumber(CardPaymentMethod.hideCardNumber(cardNumber));\\\\r\\\\n                            if (!paymentMethodService.cardTokenExist(paymentMethod)) {\\\\r\\\\n                                paymentMethodService.create(paymentMethod);\\\\r\\\\n                            }\\\\r\\\\n                        } catch (Exception e) {\\\\r\\\\n                            throw new BusinessException(\\\\\\\"Error on SaveIngenicoCardScript : \\\\\\\" + e.getMessage());\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private CreditCardTypeEnum fromId(Integer id) {\\\\r\\\\n        for (CreditCardTypeEnum es : CreditCardTypeEnum.values()) {\\\\r\\\\n            if (es.getId().equals(id)) {\\\\r\\\\n                return es;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        throw new IllegalArgumentException();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private List<RequestHeader> getWebhookRequestHeaders(Map<String, String> headers) {\\\\r\\\\n        List<RequestHeader> webhookHeaders = new ArrayList<>();\\\\r\\\\n        if (MapUtils.isNotEmpty(headers)) {\\\\r\\\\n            headers.forEach((key, value) -> webhookHeaders.add(new RequestHeader(key, value)) );\\\\r\\\\n        }\\\\r\\\\n        return webhookHeaders;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getHeaderValue(List<RequestHeader> requestHeaders, String headerName) {\\\\r\\\\n        String value = null;\\\\r\\\\n        for (RequestHeader header : requestHeaders) {\\\\r\\\\n            if (headerName.equalsIgnoreCase(header.getName())) {\\\\r\\\\n                if (value == null) {\\\\r\\\\n                    value = header.getValue();\\\\r\\\\n                } else {\\\\r\\\\n                    throw new SignatureValidationException(\\\\\\\"enocuntered multiple occurrences of header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        if (value == null) {\\\\r\\\\n            throw new SignatureValidationException(\\\\\\\"could not find header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n        return value;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getWebhookSecretKey(String webhooksKeyId) throws BusinessException {\\\\r\\\\n        try {\\\\r\\\\n            String query = \\\\\\\"select pg.webhooksSecretKey from PaymentGateway pg where pg.webhooksKeyId=:webhooksKeyId\\\\\\\";\\\\r\\\\n            Map<String, Object> queryParams = new HashMap<>();\\\\r\\\\n            queryParams.put(\\\\\\\"webhooksKeyId\\\\\\\", webhooksKeyId);\\\\r\\\\n            Object result = paymentGatewayService.executeSelectQuery(query, queryParams);\\\\r\\\\n            return ((List<String>)result).get(0);\\\\r\\\\n        } catch (Exception e) {\\\\r\\\\n            throw new BusinessException(String.format(\\\\\\\"Error on getWebhookSecretKey for webhooksKeyId = [%s]\\\\\\\", webhooksKeyId));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\",\r\n                \"type\": \"JAVA\"\r\n            }\r\n        },\r\n        {\r\n            \"notification\": {\r\n                \"updatedCode\": null,\r\n                \"code\": \"SaveIngenicoCardInbound\",\r\n                \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\r\n                \"eventTypeFilter\": \"INBOUND_REQ\",\r\n                \"elFilter\": \"#{event.pathInfo.endsWith(\\\\\\\"/ingenico/saveCard\\\\\\\")}\",\r\n                \"scriptInstanceCode\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"scriptParams\": {\r\n                    \"event\": \"#{event}\"\r\n                },\r\n                \"counterTemplate\": null\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Module SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9d70160-6245-4ecf-a6fe-e02543b9ee45",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_MOD\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"license\": \"COM\",\r\n    \"moduleItems\": [\r\n        {\r\n            \"script\": {\r\n                \"code\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"description\": \"Save Ingenico Card\",\r\n                \"script\": \"package org.meveo.service.script;\\\\r\\\\n\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.Client;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.RequestHeader;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.PaymentResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.CardPaymentMethodSpecificOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentReferences;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentStatusOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.token.TokenResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.webhooks.WebhooksEvent;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.InMemorySecretKeyStore;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.SignatureValidationException;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.Webhooks;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.WebhooksHelper;\\\\r\\\\nimport org.apache.commons.collections4.MapUtils;\\\\r\\\\nimport org.json.simple.JSONObject;\\\\r\\\\nimport org.json.simple.parser.JSONParser;\\\\r\\\\nimport org.json.simple.parser.ParseException;\\\\r\\\\nimport org.meveo.admin.exception.BusinessException;\\\\r\\\\nimport org.meveo.commons.utils.StringUtils;\\\\r\\\\nimport org.meveo.model.notification.InboundRequest;\\\\r\\\\nimport org.meveo.model.payments.CardPaymentMethod;\\\\r\\\\nimport org.meveo.model.payments.CreditCardTypeEnum;\\\\r\\\\nimport org.meveo.model.payments.CustomerAccount;\\\\r\\\\nimport org.meveo.model.payments.PaymentGateway;\\\\r\\\\nimport org.meveo.service.payments.impl.CustomerAccountService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentGatewayService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentMethodService;\\\\r\\\\nimport org.slf4j.Logger;\\\\r\\\\nimport org.slf4j.LoggerFactory;\\\\r\\\\n\\\\r\\\\nimport java.util.ArrayList;\\\\r\\\\nimport java.util.HashMap;\\\\r\\\\nimport java.util.List;\\\\r\\\\nimport java.util.Map;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n *\\\\r\\\\n * @author Mounir Bahije\\\\r\\\\n *\\\\r\\\\n *         Script executed to save card enrolled with Ingenico Hosted Checkout\\\\r\\\\n *\\\\r\\\\n */\\\\r\\\\npublic class SaveIngenicoCardScript extends Script {\\\\r\\\\n\\\\r\\\\n    private final static Logger log = LoggerFactory.getLogger(SaveIngenicoCardScript.class);\\\\r\\\\n\\\\r\\\\n    private PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface(\\\\\\\"PaymentMethodService\\\\\\\");\\\\r\\\\n    private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\\\\\\\"CustomerAccountService\\\\\\\");\\\\r\\\\n    private PaymentGatewayService paymentGatewayService = (PaymentGatewayService) getServiceInterface(\\\\\\\"PaymentGatewayService\\\\\\\");\\\\r\\\\n\\\\r\\\\n    @Override\\\\r\\\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\\\r\\\\n\\\\r\\\\n        String verification = \\\\\\\"\\\\\\\";\\\\r\\\\n        InboundRequest inReq = (InboundRequest) methodContext.get(\\\\\\\"event\\\\\\\");\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"GET\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            String body = inReq.getBody();\\\\r\\\\n            Map<String, String> headers = inReq.getHeaders();\\\\r\\\\n            for (String headerKey : headers.keySet()) {\\\\r\\\\n                if (\\\\\\\"X-GCS-Webhooks-Endpoint-Verification\\\\\\\".equalsIgnoreCase(headerKey)) {\\\\r\\\\n                    String headerValue = headers.get(headerKey);\\\\r\\\\n                    verification = headerValue;\\\\r\\\\n                    inReq.setResponseBody(verification);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"POST\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            final String reqBody = inReq.getBody();\\\\r\\\\n\\\\r\\\\n            List<RequestHeader> requestHeaders = getWebhookRequestHeaders(inReq.getHeaders());\\\\r\\\\n            String webhooksKeyId = this.getHeaderValue(requestHeaders, \\\\\\\"X-GCS-KeyId\\\\\\\");\\\\r\\\\n\\\\r\\\\n            InMemorySecretKeyStore keyStore = InMemorySecretKeyStore.INSTANCE;\\\\r\\\\n            keyStore.storeSecretKey(webhooksKeyId, getWebhookSecretKey(webhooksKeyId));\\\\r\\\\n\\\\r\\\\n            WebhooksHelper helper = Webhooks.createHelper(keyStore);\\\\r\\\\n            WebhooksEvent webhooksEvent = helper.unmarshal(reqBody, requestHeaders);\\\\r\\\\n\\\\r\\\\n            PaymentResponse payment = webhooksEvent.getPayment();\\\\r\\\\n            if (payment == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentResponse not found on webhooksEvent : [%s]\\\\\\\", webhooksEvent));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentOutput paymentOutput = payment.getPaymentOutput();\\\\r\\\\n            if (paymentOutput == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentReferences paymentReferences = paymentOutput.getReferences();\\\\r\\\\n            if (paymentReferences == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"paymentReferences not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            String merchantReference = paymentReferences.getMerchantReference();\\\\r\\\\n\\\\r\\\\n            if (merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") >= 0) {\\\\r\\\\n\\\\r\\\\n                String longIdCA = merchantReference.substring(merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") + 3);\\\\r\\\\n                CustomerAccount ca = customerAccountService.findById(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                PaymentGateway paymentGateway = paymentGatewayService.getPaymentGateway(ca, null, null);\\\\r\\\\n\\\\r\\\\n                if (paymentGateway == null) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is null\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                if (!webhooksKeyId.equals(paymentGateway.getWebhooksKeyId())) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is not the good one\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                String status = payment.getStatus();\\\\r\\\\n                if (\\\\\\\"PENDING_CAPTURE\\\\\\\".equalsIgnoreCase(status)) {\\\\r\\\\n                    PaymentStatusOutput paymentStatusOutput = payment.getStatusOutput();\\\\r\\\\n                    if (paymentStatusOutput == null) {\\\\r\\\\n                        throw new BusinessException(String.format(\\\\\\\"paymentStatusOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n                    }\\\\r\\\\n                    Boolean isAuthorized = paymentStatusOutput.getIsAuthorized();\\\\r\\\\n\\\\r\\\\n                    if (isAuthorized) {\\\\r\\\\n\\\\r\\\\n                        CardPaymentMethodSpecificOutput cardPaymentMethodSpecificOutput = paymentOutput.getCardPaymentMethodSpecificOutput();\\\\r\\\\n                        if (cardPaymentMethodSpecificOutput == null) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"cardPaymentMethodSpecificOutput not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n                        }\\\\r\\\\n                        Long paymentProductId = Long.valueOf(cardPaymentMethodSpecificOutput.getPaymentProductId());\\\\r\\\\n\\\\r\\\\n                        JSONParser jsonParser = new JSONParser();\\\\r\\\\n                        JSONObject obj = null;\\\\r\\\\n                        try {\\\\r\\\\n                            obj = (JSONObject) jsonParser.parse(reqBody);\\\\r\\\\n                        } catch (ParseException e) {\\\\r\\\\n                            e.printStackTrace();\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String tokenId = (String) ((JSONObject) ((JSONObject) ((JSONObject) obj.get(\\\\\\\"payment\\\\\\\")).get(\\\\\\\"paymentOutput\\\\\\\")).get(\\\\\\\"cardPaymentMethodSpecificOutput\\\\\\\")).get(\\\\\\\"token\\\\\\\");\\\\r\\\\n                        if (StringUtils.isBlank(tokenId)) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"tokenId not found on webhooksEvent.payment.paymentOutput.cardPaymentMethodSpecificOutput : [%s]\\\\\\\", cardPaymentMethodSpecificOutput));\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String merchantId = webhooksEvent.getMerchantId();\\\\r\\\\n\\\\r\\\\n                        try {\\\\r\\\\n\\\\r\\\\n                            CreditCardTypeEnum cardType = fromId(Long.valueOf(paymentProductId).intValue());\\\\r\\\\n\\\\r\\\\n                            Client client = (Client) paymentMethodService.getClient(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                            TokenResponse response = client.merchant(merchantId).tokens().get(tokenId);\\\\r\\\\n\\\\r\\\\n                            String cardNumber = response.getCard().getData().getCardWithoutCvv().getCardNumber();\\\\r\\\\n                            String expiryDate = response.getCard().getData().getCardWithoutCvv().getExpiryDate();\\\\r\\\\n                            String ownerName = response.getCard().getData().getCardWithoutCvv().getCardholderName();\\\\r\\\\n                            CardPaymentMethod paymentMethod = new CardPaymentMethod();\\\\r\\\\n                            paymentMethod.setCardNumber(cardNumber);\\\\r\\\\n                            paymentMethod.setCardType(cardType);\\\\r\\\\n                            paymentMethod.setCustomerAccount(ca);\\\\r\\\\n                            paymentMethod.setPreferred(true);\\\\r\\\\n                            paymentMethod.setMonthExpiration(new Integer(expiryDate.substring(0, 2)));\\\\r\\\\n                            paymentMethod.setYearExpiration(new Integer(expiryDate.substring(2, 4)));\\\\r\\\\n                            paymentMethod.setOwner(ownerName);\\\\r\\\\n                            paymentMethod.setTokenId(tokenId);\\\\r\\\\n                            paymentMethod.setHiddenCardNumber(CardPaymentMethod.hideCardNumber(cardNumber));\\\\r\\\\n                            if (!paymentMethodService.cardTokenExist(paymentMethod)) {\\\\r\\\\n                                paymentMethodService.create(paymentMethod);\\\\r\\\\n                            }\\\\r\\\\n                        } catch (Exception e) {\\\\r\\\\n                            throw new BusinessException(\\\\\\\"Error on SaveIngenicoCardScript : \\\\\\\" + e.getMessage());\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private CreditCardTypeEnum fromId(Integer id) {\\\\r\\\\n        for (CreditCardTypeEnum es : CreditCardTypeEnum.values()) {\\\\r\\\\n            if (es.getId().equals(id)) {\\\\r\\\\n                return es;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        throw new IllegalArgumentException();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private List<RequestHeader> getWebhookRequestHeaders(Map<String, String> headers) {\\\\r\\\\n        List<RequestHeader> webhookHeaders = new ArrayList<>();\\\\r\\\\n        if (MapUtils.isNotEmpty(headers)) {\\\\r\\\\n            headers.forEach((key, value) -> webhookHeaders.add(new RequestHeader(key, value)) );\\\\r\\\\n        }\\\\r\\\\n        return webhookHeaders;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getHeaderValue(List<RequestHeader> requestHeaders, String headerName) {\\\\r\\\\n        String value = null;\\\\r\\\\n        for (RequestHeader header : requestHeaders) {\\\\r\\\\n            if (headerName.equalsIgnoreCase(header.getName())) {\\\\r\\\\n                if (value == null) {\\\\r\\\\n                    value = header.getValue();\\\\r\\\\n                } else {\\\\r\\\\n                    throw new SignatureValidationException(\\\\\\\"enocuntered multiple occurrences of header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        if (value == null) {\\\\r\\\\n            throw new SignatureValidationException(\\\\\\\"could not find header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n        return value;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getWebhookSecretKey(String webhooksKeyId) throws BusinessException {\\\\r\\\\n        try {\\\\r\\\\n            String query = \\\\\\\"select pg.webhooksSecretKey from PaymentGateway pg where pg.webhooksKeyId=:webhooksKeyId\\\\\\\";\\\\r\\\\n            Map<String, Object> queryParams = new HashMap<>();\\\\r\\\\n            queryParams.put(\\\\\\\"webhooksKeyId\\\\\\\", webhooksKeyId);\\\\r\\\\n            Object result = paymentGatewayService.executeSelectQuery(query, queryParams);\\\\r\\\\n            return ((List<String>)result).get(0);\\\\r\\\\n        } catch (Exception e) {\\\\r\\\\n            throw new BusinessException(String.format(\\\\\\\"Error on getWebhookSecretKey for webhooksKeyId = [%s]\\\\\\\", webhooksKeyId));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\",\r\n                \"type\": \"JAVA\"\r\n            }\r\n        },\r\n        {\r\n            \"notification\": {\r\n                \"updatedCode\": null,\r\n                \"code\": \"SaveIngenicoCardInbound\",\r\n                \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\r\n                \"eventTypeFilter\": \"INBOUND_REQ\",\r\n                \"elFilter\": \"#{event.pathInfo.endsWith(\\\\\\\"/ingenico/saveCard\\\\\\\")}\",\r\n                \"scriptInstanceCode\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"scriptParams\": {\r\n                    \"event\": \"#{event}\"\r\n                },\r\n                \"counterTemplate\": null\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Module SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "033bbb8d-0e68-4db0-bf79-8a883f5983a1",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.module.code).to.eql(pm.environment.get(\"testCode\")+\"_MOD\");",
													"    pm.expect(jsonData.module.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module?code={{testCode}}_MOD",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_MOD"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Module SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e145554-7f83-48aa-83e6-573c1bcc366c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module/{{testCode}}_MOD",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module",
												"{{testCode}}_MOD"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Module ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "421ddfc0-e3b7-410c-b3d8-8c139d0469e4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"MeveoModule with code=\"+pm.environment.get(\"testCode\")+\"_MOD does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/module/{{testCode}}_MOD",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"module",
												"{{testCode}}_MOD"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Job Instance",
							"item": [
								{
									"name": "CreateOrUpdate Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "64f2be93-9f7d-45c9-bacc-dffb56c6e160",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ef8f4ce4-614a-405a-9d76-b53062427a68",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.jobInstanceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_JI\");",
													"    pm.expect(jsonData.jobInstanceDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance?jobInstanceCode={{testCode}}_JI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance"
											],
											"query": [
												{
													"key": "jobInstanceCode",
													"value": "{{testCode}}_JI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Job Instance ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4eeac200-c53f-4fd4-a2e7-38715ef0a186",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"JobInstance with code=\"+pm.environment.get(\"testCode\")+\"_JI already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/create",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Job Instance ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7597cbee-a0c0-49e7-9a23-b5b48b92177b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"JobInstance with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/update",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d3296f2a-e9a9-4dea-804e-1882fb1244c0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/update",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d6ec12a-32ad-46f4-9206-28eb24d16ef6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "187bbe22-0f56-4279-81c6-4028c811cdde",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.jobInstanceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_JI\");",
													"    pm.expect(jsonData.jobInstanceDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance?jobInstanceCode={{testCode}}_JI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance"
											],
											"query": [
												{
													"key": "jobInstanceCode",
													"value": "{{testCode}}_JI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Job Instance MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed01122b-2622-49a4-af36-1fd92abc79f2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: SepaJob_ddRequestBuilder.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testDescription}}_JI\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Job Instance ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b346af5-a956-4673-bc51-e410aaedc6a4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"JobTemplate with code 'NOT_EXIST' doesn't exist.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"NOT_EXIST\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "966cc5df-f313-4517-b2fd-b20e723ffa30",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/{{testCode}}_JI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"{{testCode}}_JI"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Job Instance SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea1be620-44ca-48fe-a433-3af314bf2e42",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"JobInstance with code=\"+pm.environment.get(\"testCode\")+\"_JI does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/{{testCode}}_JI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"{{testCode}}_JI"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Discount Plan",
							"item": [
								{
									"name": "CreateOrUpdate Discount Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97aa3786-03f7-4888-b621-fdd1358d9f3a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Discount Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ace05fef-973f-4ba4-8436-ef936ad1685b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.discountPlanDto.code).to.eql(pm.environment.get(\"testCode\")+\"_DP\");",
													"    pm.expect(jsonData.discountPlanDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											],
											"query": [
												{
													"key": "discountPlanCode",
													"value": "{{testCode}}_DP"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Discount Plan ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6293619a-377d-4806-8034-3de55ad68e0f",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"DiscountPlan with code=\"+pm.environment.get(\"testCode\")+\"_DP already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Discount Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "85211c4f-0fae-44c5-a968-c0f2745f00dc",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"TEST\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Discount Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e2568784-6b71-4957-950c-a0506fdb50cd",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Discount Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abfcb736-c04a-4fbf-8234-a460b40ca48b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Discount Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2530d19f-a181-4b70-b293-847a53ea48e2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.discountPlanDto.code).to.eql(pm.environment.get(\"testCode\")+\"_DP\");",
													"    pm.expect(jsonData.discountPlanDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											],
											"query": [
												{
													"key": "discountPlanCode",
													"value": "{{testCode}}_DP"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Discount Plan INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5d703347-abed-4f46-9185-79626c85699b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"INVALID\",\r\n    \"endDate\": \"INVALID\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Discount Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec9b12b0-7bdd-4950-bb7f-9da70823998e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											],
											"query": [
												{
													"key": "discountPlanCode",
													"value": "{{testCode}}_DP"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Discount Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf0f4d38-d9a5-4c80-95d4-1fa93bb08e89",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"DiscountPlan with code=\"+pm.environment.get(\"testCode\")+\"_DP does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"discountPlan"
											],
											"query": [
												{
													"key": "discountPlanCode",
													"value": "{{testCode}}_DP"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Billing",
					"item": [
						{
							"name": "Invoice Category",
							"item": [
								{
									"name": "CreateOrUpdate Invoice Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0c731024-edfd-402e-ad75-b169137d5751",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e6241c7-cb2d-4324-b6ad-407c4d1d836a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.invoiceCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_IC\");",
													"    pm.expect(jsonData.invoiceCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory?invoiceCategoryCode={{testCode}}_IC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory"
											],
											"query": [
												{
													"key": "invoiceCategoryCode",
													"value": "{{testCode}}_IC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Invoice Category  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "357f5831-5497-450b-ac75-60f07c15d5c0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceCategory with code=\"+pm.environment.get(\"testCode\")+\"_IC already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice Category  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bfba2374-e960-4863-8089-d9ae148a774a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f684760-7fe8-4cff-842a-b5a9488e6254",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9de825cb-c625-4fad-892b-0bbefb9a083e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3280781b-ddf6-4088-8a82-398eb2e5351d",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.invoiceCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_IC\");",
													"    pm.expect(jsonData.invoiceCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory?invoiceCategoryCode={{testCode}}_IC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory"
											],
											"query": [
												{
													"key": "invoiceCategoryCode",
													"value": "{{testCode}}_IC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Category  MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e466f090-d65b-44e0-ad05-e1f6a2a06959",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Category INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f632c235-2f12-4cbe-a970-39acd77c76d0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.CustomFieldsDto`\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Invoice SubCategory",
							"item": [
								{
									"name": "CreateOrUpdate Invoice SubCategory  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "20e1417c-d9b2-4046-9d54-7becb3ee7002",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_ISC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice SubCategory  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb0984b1-2cff-4c12-87d3-3dce593bdb1e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.invoiceSubCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_ISC\");",
													"    pm.expect(jsonData.invoiceSubCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory?invoiceSubCategoryCode={{testCode}}_ISC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory"
											],
											"query": [
												{
													"key": "invoiceSubCategoryCode",
													"value": "{{testCode}}_ISC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Invoice SubCategory  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e44988be-95ad-4822-8fd1-9a43581fb607",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceSubCategory with code=\"+pm.environment.get(\"testCode\")+\"_ISC already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_ISC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice SubCategory  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3996a056-d987-4e60-9acb-b37fca105788",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceSubCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice SubCategory  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26b7c11b-323c-435c-926a-4ddde438e4be",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice SubCategory  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f04f493-e950-4f01-960e-318af1d78d87",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "814e0a64-d10a-4bad-bea1-bb25eb0212b3",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.invoiceSubCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_ISC\");",
													"    pm.expect(jsonData.invoiceSubCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory?invoiceSubCategoryCode={{testCode}}_ISC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory"
											],
											"query": [
												{
													"key": "invoiceSubCategoryCode",
													"value": "{{testCode}}_ISC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice SubCategory  MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76b71f73-2363-492f-b31d-b6bc3e45e5c8",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceCategory.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice SubCategory INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "25318422-0798-4597-b844-22d863e1e8f7",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.CustomFieldsDto`\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice SubCategory ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd0255cd-bcc4-4e90-828c-ef6e206613ab",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceCategory\": \"NOT_EXIST\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Invoice Sequence",
							"item": [
								{
									"name": "CreateOrUpdate Invoice Sequence SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3a3024f8-6b5d-487b-87aa-91256d6b29da",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Sequence SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "597a09bd-13b3-4ad0-9b8c-d0fdaae67f46",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql(\"\");",
													"    pm.expect(jsonData.invoiceSequenceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_IS\");",
													"    pm.expect(jsonData.invoiceSequenceDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence?invoiceSequenceCode={{testCode}}_IS",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence"
											],
											"query": [
												{
													"key": "invoiceSequenceCode",
													"value": "{{testCode}}_IS"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Invoice Sequence ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc831b2c-2819-495b-8124-1d04bb5cad83",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceSequence with code=\"+pm.environment.get(\"testCode\")+\"_IS already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice Sequence ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ba27541-dfea-4b1d-bca4-56632981746c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceSequence with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice Sequence SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be721826-d53f-4ed7-893b-85078c0a3de0",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Sequence SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9ac59af-e255-4d9e-9198-88f6c97e5a1f",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Sequence SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b934816-e3b7-4d57-98dd-c6cfaa7c416e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql(\"\");",
													"    pm.expect(jsonData.invoiceSequenceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_IS\");",
													"    pm.expect(jsonData.invoiceSequenceDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence?invoiceSequenceCode={{testCode}}_IS",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence"
											],
											"query": [
												{
													"key": "invoiceSequenceCode",
													"value": "{{testCode}}_IS"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Sequence MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ac7af889-8dc1-4329-bc9b-99eefdbebd94",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Sequence INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "34c9ee39-4db9-4b70-9e83-18ba83c9795e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"sequenceSize\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSequence",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Clear Data",
							"item": [
								{
									"name": "Delete Invoice Category GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cf479294-7edc-4a01-9401-e5cf91954213",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(500);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"{{testCode}}_IC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Invoice SubCategory SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7ce2150-f416-4d2f-94bb-403c11f1ac4c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/{{testCode}}_ISC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"{{testCode}}_ISC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Invoice SubCategory ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6d972562-19ff-46f0-92d1-be74b5e7c7d6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceSubCategory with code=\"+pm.environment.get(\"testCode\")+\"_ISC does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceSubCategory/{{testCode}}_ISC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceSubCategory",
												"{{testCode}}_ISC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Invoice Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "92fcb47d-0639-4822-8c31-173ddcc1ec03",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"{{testCode}}_IC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Invoice Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb75b8fc-0393-438b-862b-66299dc0f77c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"InvoiceCategory with code=\"+pm.environment.get(\"testCode\")+\"_IC does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceCategory",
												"{{testCode}}_IC"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Wallet Operation",
							"item": [
								{
									"name": "Create Wallet Operation SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6f3331d4-bcc0-470c-b318-908ee71a9470",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"chargeInstance\": \"CH_CLASSIC_REC_FLAT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/wallet/operation",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"wallet",
												"operation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Wallet Operation ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b31250f8-e614-440e-a644-a6bf704dfbda",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"WalletOperation with code=\"+pm.environment.get(\"testCode\")+\"_WLT already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"chargeInstance\": \"CH_CLASSIC_REC_FLAT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/wallet/operation",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"wallet",
												"operation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Wallet Operation MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f94b4314-a6d6-41a1-8dde-08034bb3dafb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: userAccount or subscription, chargeInstance or chargeInstanceId, currency, taxCode or taxPercent.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"MISSING\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/wallet/operation",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"wallet",
												"operation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Wallet Operation INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2daa3085-94ed-4777-9d62-543319457480",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"subscriptionDate\": \"INVALID\",\r\n    \"chargeInstance\": \"PR_CLASSIC_DEFAULT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/wallet/operation",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"wallet",
												"operation"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Offers",
					"item": [
						{
							"name": "Offer Template",
							"item": [
								{
									"name": "CreateOrUpdate  Offer Template  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6cd8b7a9-9aef-4801-a1a9-c4c27397f601",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read  Offer Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4e0e37d-a471-4512-a304-73a2bf2d92cb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.offerTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_OT\");",
													"    pm.expect(jsonData.offerTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{testCode}}_OT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{testCode}}_OT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer Template  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f7f488a-b0ad-4d34-9109-e85b7cab6bd7",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"Offer template with code=\" + pm.environment.get(\"testCode\") + \"_OT already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Offer Template  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17ecb237-35e5-420e-80c0-db0c8d82a5d4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"OfferTemplate with code=NOT_EXIST /  /  does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Offer Template  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5afb680-6f87-4d6d-9713-a3ef321e8e30",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Offer Template  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbb3107-568f-464a-b6d2-1c22265e85c3",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Offer Template  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8533b4b9-2f73-473c-aeae-5b215eae4a76",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.offerTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_OT\");",
													"    pm.expect(jsonData.offerTemplate.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{testCode}}_OT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{testCode}}_OT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Offer Template INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "04a8ae4f-0e49-4af3-a9e7-98e5e639930f",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.catalog.LifeCycleStatusEnum` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"INVALID\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"5_SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Offer Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0f1efdb-272b-4dca-af56-623d6544a0fc",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{testCode}}_OT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{testCode}}_OT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Offer Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ef82191-cfde-4687-8fc8-c6a9182c4316",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"OfferTemplate with code=\" + pm.environment.get(\"testCode\") + \"_OT /  /  does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{testCode}}_OT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{testCode}}_OT"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Tax Class",
							"item": [
								{
									"name": "CreateOrUpdate  Tax Class  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa5d0e6b-a7a0-4c1d-9d9a-5c7a8a7ee6d1",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read  Tax Class SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16079983-28d7-4ca0-907d-7bbbfdceaee3",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.dto.code).to.eql(pm.environment.get(\"testCode\") + \"_TC\");",
													"    pm.expect(jsonData.dto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass?code={{testCode}}_TC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_TC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Tax Class  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f9947af2-3076-4249-abd1-4d4390254050",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=\" + pm.environment.get(\"testCode\") + \"_TC already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Tax Class  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "159bfeef-f32a-4e3d-adfe-77ea28d3dd48",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"TaxClass with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testCode}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Tax Class  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05cafc22-b8ae-40d3-b59f-75d03a929737",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax Class  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "012a1f46-5b6d-4f15-81d9-96fa907eb22c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Tax Class  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c9303bf8-a523-4ab2-992a-431ee3951e9d",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.dto.code).to.eql(pm.environment.get(\"testCode\") + \"_TC\");",
													"    pm.expect(jsonData.dto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass?code={{testCode}}_TC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_TC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax Class INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c497bd87-fdb4-4d82-839f-95b0844e2eb4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"INVALID\",\r\n    \"descriptionI18n\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "132424d5-3166-4b1f-ae00-54ca703a139b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "edfc1436-0c3a-471e-852f-c08544fbf22b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Recurring Charge",
							"item": [
								{
									"name": "CreateOrUpdate  Recurring Charge SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d6a5b88e-94d7-487c-bbd6-cfee8fd7cad6",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read  Recurring Charge SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "403af7a1-6130-416c-96de-4c6fbdecc1e5",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.recurringChargeTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_RCT\");",
													"    pm.expect(jsonData.recurringChargeTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate?recurringChargeTemplateCode={{testCode}}_RCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate"
											],
											"query": [
												{
													"key": "recurringChargeTemplateCode",
													"value": "{{testCode}}_RCT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Recurring Charge  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56800577-40ab-41ba-ade5-1c3764d7af82",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=\" + pm.environment.get(\"testCode\") + \"_RCT already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Recurring Charge ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a61d180-13f6-4458-a2f8-327ea79335a2",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"RecurringChargeTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testCode}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Recurring Charge  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f87ef565-9e05-4ad3-aea9-bd2526a4f670",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Recurring Charge SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9b61ae0-0a0d-40bf-ad35-75648a95e324",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Recurring Charge SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "84d490da-9ed1-4df1-ad2d-4d56073bbbd9",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.recurringChargeTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_RCT\");",
													"    pm.expect(jsonData.recurringChargeTemplate.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate?recurringChargeTemplateCode={{testCode}}_RCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate"
											],
											"query": [
												{
													"key": "recurringChargeTemplateCode",
													"value": "{{testCode}}_RCT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Recurring Charge MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3df2aceb-0d3e-442b-b2d5-89d623009514",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.eql(\"The following parameters are required or contain invalid values: invoiceSubCategory, calendar, taxClassCode.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"MISSING\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Recurring Charge INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7551d24e-1d73-4727-bc5b-d95fb5cf1aa8",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_REC\",\r\n    \"disabled\": \"INVAID\",\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"calendar\": \"CAL_MONTHLY_1ST\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bd331a17-a24a-416b-a2af-d516c4147d54",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f7909749-6036-45d6-abc1-138ee9608435",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Price Plan",
							"item": [
								{
									"name": "CreateOrUpdate  Price Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "494f11ca-69f4-4d57-be37-155d16a2af6c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read  Price Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3608767e-4eaf-4e02-8ff8-7e9c32c2a3af",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.pricePlan.code).to.eql(pm.environment.get(\"testCode\") + \"_PP\");",
													"    pm.expect(jsonData.pricePlan.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan?pricePlanCode={{testCode}}_PP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan"
											],
											"query": [
												{
													"key": "pricePlanCode",
													"value": "{{testCode}}_PP"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ad7b0fe-3035-4ca9-bcd4-35375828e1e4",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"PricePlanMatrix with code=\" + pm.environment.get(\"testCode\") + \"_PP already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Price Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a66f4e4-60ef-4b57-9bfb-7ebacdf53217",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"PricePlanMatrix with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Price Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d83ddec8-164c-4129-93b2-1d7d20a2e09e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Price Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3619318a-b1fa-419c-98fd-226e2cd32559",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Price Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd2c74be-b5b1-4eee-8b48-349e3a7a7472",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.pricePlan.code).to.eql(pm.environment.get(\"testCode\") + \"_PP\");",
													"    pm.expect(jsonData.pricePlan.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan?pricePlanCode={{testCode}}_PP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan"
											],
											"query": [
												{
													"key": "pricePlanCode",
													"value": "{{testCode}}_PP"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Price Plan MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "442fb6c6-9450-4d20-81f9-54857483b71a",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: eventCode, amountWithoutTax.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"MISSING\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Price Plan INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed8d97bc-2e35-4d8a-a65b-bcf6974ea208",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RcT\",\r\n    \"amountWithoutTax\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Price Plan SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "914f8983-d54b-476e-bde7-350bbd8fb5da",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/{{testCode}}_PP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"{{testCode}}_PP"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Price Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94cdb6c2-8bc5-4391-9b49-0c33b4fa4900",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"PricePlanMatrix with code=\" + pm.environment.get(\"testCode\") + \"_PP does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/{{testCode}}_PP",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"{{testCode}}_PP"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4a5a5d08-1927-457b-8e55-2a9333248802",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9084d8cb-b80e-4dd5-8648-3ef0689129b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Service Template",
							"item": [
								{
									"name": "CreateOrUpdate  Service Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0303a61a-1b25-4d0d-9138-86594cc0be0b",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read  Service Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5955cd0f-cf81-418b-8042-7640b2ba9842",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.serviceTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_ST\");",
													"    pm.expect(jsonData.serviceTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate?serviceTemplateCode={{testCode}}_ST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate"
											],
											"query": [
												{
													"key": "serviceTemplateCode",
													"value": "{{testCode}}_ST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Service Template  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49116b4c-43d5-48dc-a041-16aa75893726",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(403);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"ServiceTemplateService with code=\" + pm.environment.get(\"testCode\") + \"_ST already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Service Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2acab805-2079-42bc-88af-1aab3f40496c",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"ServiceTemplateService with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Service Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08c6cec9-3521-46a6-bb1f-7415253b9424",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Service Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e0b0d51-9063-41c5-bf20-4ff05c4a5227",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Service Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7dd4b5a9-9700-4a92-857a-2cd51e5ce46e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"    pm.expect(jsonData.serviceTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_ST\");",
													"    pm.expect(jsonData.serviceTemplate.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate?serviceTemplateCode={{testCode}}_ST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate"
											],
											"query": [
												{
													"key": "serviceTemplateCode",
													"value": "{{testCode}}_ST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Service Template MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9196234-2894-4c9b-9780-4471768e17fb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Service Template INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0e62e76-443c-4c7c-8e9e-954b8edfd280",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": \"INVALID\",\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ae661c18-97f1-4617-9787-445d231cec2b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "579c2e45-6f6b-451d-be05-0407502b57a8",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Clear Data",
							"item": [
								{
									"name": "Delete Tax Class GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c04a6177-982a-457c-b54e-1ab15e6578f1",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(500);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table \\\"billing_tax_class\\\" violates foreign key constraint\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"{{testCode}}_TC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Recurring Charge GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fdc69f51-6ead-40d8-9d00-e01e34f669fd",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(500);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"{{testCode}}_RCT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Service Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b654a26-4e57-4377-b4f3-d736fb534dac",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/{{testCode}}_ST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"{{testCode}}_ST"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Service Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "12a8f6a8-44e8-4436-a4a9-56235e126ddb",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"ServiceTemplate with code=\" + pm.environment.get(\"testCode\") + \"_ST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/{{testCode}}_ST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"{{testCode}}_ST"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Recurring Charge SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b03899c-304b-41da-ad9d-93f51506e0d7",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"{{testCode}}_RCT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Recurring Charge ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42d28992-d07b-45c8-89a7-f6e9e40b4831",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"RecurringChargeTemplate with code=\" + pm.environment.get(\"testCode\") + \"_RCT does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"{{testCode}}_RCT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Tax Class SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b4ab8df2-c3fc-4b7b-ae9d-e41c41bd777e",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(200);",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"{{testCode}}_TC"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Tax Class ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8aa89dcd-27f3-4196-852c-ff75da545c30",
												"exec": [
													"pm.test(\"Check response of \"+ request.name, function(){",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(404);",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"    pm.expect(jsonData.message).to.eql(\"TaxClass with code=\" + pm.environment.get(\"testCode\") + \"_TC does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"{{testCode}}_TC"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Subscription",
					"item": [
						{
							"name": "Subscription",
							"item": [
								{
									"name": "CreateOrUpdate Subscription SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d3b92c4a-a17f-4be1-ab1d-683da9a96c3f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\t\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Subscription SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e999154f-bd36-40c5-b8a9-fa9db7b55114",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"testCode\")+\"_SUB\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{testCode}}_SUB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{testCode}}_SUB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Subscription ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "93ba7063-34a3-431b-b37a-37b170bc9f2c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Subscription with code=\"+pm.environment.get(\"testCode\")+\"_SUB already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Subscription ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5da7e357-f7dd-4699-a879-108f34a6fcbf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Subscription with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"userAccount\": \"ben.ohara\",\r\n\t\"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n\t\"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Subscription SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "207baf89-0406-4307-920c-e6ab1a99a9dc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Subscription SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3580501b-8603-461d-8253-f74ebd7c1d08",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Subscription SUCCESS Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "189cee0a-7359-4d62-a2f9-1a8619b1790a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"testCode\")+\"_SUB\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{testCode}}_SUB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{testCode}}_SUB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Subscription ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2522be55-4900-4dad-ae30-8c2aef0978b3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"NOT_EXIST\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Subscription MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aaf2e2ff-b3f8-4391-bd78-244f2f291597",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: subscriptionDate.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"ben.ohara\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Subscription INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd40fc58-b449-4cfa-a7e9-cc8b95897d55",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca08f6f1-a90b-4af0-aea5-770ab7b55763",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{testCode}}_SUB\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-01-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription RESILIATED",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e450a932-0cdd-48b8-b603-c9fc34840f07",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Subscription is already RESILIATED.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{testCode}}_SUB\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-01-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subscribe and Activate Subscription SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a04d0d68-71b5-4281-b5af-65d8d3ce425e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"SUB_TEST_1\",\r\n    \"userAccount\": \"DEMO.CLASSIC\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"subscribeAndActivateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subscribe and Activate Subscription ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de9efcd3-54b5-4f7f-bbe3-40b9e27ea3a2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Subscription with code=SUB_TEST_1 already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"SUB_TEST_1\",\r\n    \"userAccount\": \"DEMO.CLASSIC\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"subscribeAndActivateServices"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Title",
							"item": [
								{
									"name": "CreateOrUpdate Title SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a1b0af7-169f-47d9-8694-f0474841b27b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Title SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8226f14-83fd-4ef6-9bd8-81f8de16e6b4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.titleDto.code).to.eql(pm.environment.get(\"testCode\")+\"_TITLE\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.titleDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title?titleCode={{testCode}}_TITLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title"
											],
											"query": [
												{
													"key": "titleCode",
													"value": "{{testCode}}_TITLE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Title ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62ec05b7-6cd7-43fd-a2f5-f97b5db773b7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Title with code=\"+pm.environment.get(\"testCode\")+\"_TITLE already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Title ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c2926d06-35f0-402d-997f-6d48e8da3ed5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Title with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Title SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fffcf1de-5b15-491c-bd8e-622dec9a2e5a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Account Operation SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d1bae8c8-a663-4663-a477-92ded5f030d6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Title SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "93b8c807-5c29-416d-9ed7-d82352075f92",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.titleDto.code).to.eql(pm.environment.get(\"testCode\")+\"_TITLE\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.titleDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title?titleCode={{testCode}}_TITLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title"
											],
											"query": [
												{
													"key": "titleCode",
													"value": "{{testCode}}_TITLE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Title MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9130a4f0-64f8-44fc-9f85-a01dd4ff1a1b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: titleCode.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Title INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5a36610-eeeb-41ab-b3c0-826cb096858d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"Test\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Title SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d404af27-b9cf-4729-b327-abb690f7cbf5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title/{{testCode}}_TITLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title",
												"{{testCode}}_TITLE"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Title ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b2d5f9e7-8d08-4ad9-822d-68e548600a0d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Title with code=\"+pm.environment.get(\"testCode\")+\"_TITLE does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/title/{{testCode}}_TITLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"title",
												"{{testCode}}_TITLE"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Calendar",
							"item": [
								{
									"name": "CreateOrUpdate Calendar SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0872af50-3056-4611-80fa-1d1fddd2d680",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Calendar SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f41a7af3-3148-46b1-a6a2-1d26d59f7469",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.calendar.code).to.eql(pm.environment.get(\"testCode\")+\"_CAL\");",
													"});",
													"",
													"pm.test(\"Description is equal Monthly (1st of the month)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.calendar.description).to.eql(\"Monthly (1st of the month)\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/?calendarCode={{testCode}}_CAL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												""
											],
											"query": [
												{
													"key": "calendarCode",
													"value": "{{testCode}}_CAL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Calendar ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9c39961-bb85-4d46-b95b-0f651fee308a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Calendar with code=\"+pm.environment.get(\"testCode\")+\"_CAL already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Calendar ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e35b2bb1-0e7d-4c52-9599-4307d24982f8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Calendar SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6194647-b910-4e1b-b3b3-3be4d561f3bf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month) updated\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Calendar SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "35b51655-dad4-4e6d-8731-1cb91ac53ec2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month) updated\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Calendar SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3c32c52-d51b-4ee4-b068-b078adcb057f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.calendar.code).to.eql(pm.environment.get(\"testCode\")+\"_CAL\");",
													"});",
													"",
													"pm.test(\"Description is equal Monthly (1st of the month)\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.calendar.description).to.eql(\"Monthly (1st of the month) updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/?calendarCode={{testCode}}_CAL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												""
											],
											"query": [
												{
													"key": "calendarCode",
													"value": "{{testCode}}_CAL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Calendar MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "135eed01-509a-4e17-bf20-9f2bbed680f3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: calendarType.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Calendar GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4ca1b401-52c5-4f6f-990f-3ac47c1b26ad",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"query did not return a unique result\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Calendar INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0d1e71f-8f42-419f-b67e-0eb0ca63f5eb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.api.dto.CalendarTypeEnum` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"INVALID\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Calendar SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a397dfcc-ce97-4a96-8e9e-daee0a11e664",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/{{testCode}}_CAL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"{{testCode}}_CAL"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Calendar ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70120598-327c-4577-b32c-94cee0cdae50",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Calendar with code=\"+pm.environment.get(\"testCode\")+\"_CAL does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/calendar/{{testCode}}_CAL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"calendar",
												"{{testCode}}_CAL"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Channel",
							"item": [
								{
									"name": "CreateOrUpdate Channel SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a85974b1-35b4-4e6f-87cf-23df442ae9ae",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Channel SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "57e51bd5-c5c4-4c39-8252-e3a32f007b98",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.channel.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.channel.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											],
											"query": [
												{
													"key": "channelCode",
													"value": "{{testCode}}_CH"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Channel ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7860a84b-61ef-4e7b-b51c-3cb6fbd47dfc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Channel with code=\"+pm.environment.get(\"testCode\")+\"_CH already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Channel ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "30210d12-2195-47ac-bc75-490670512b70",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Channel with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Channel SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3b381fcd-2205-4277-946e-239fcc57caa6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Channel SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4c542416-1123-4f02-b721-4aa57501fabc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Channel SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "432e3c92-3aac-4d4e-886b-adfde024fb53",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.channel.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.channel.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											],
											"query": [
												{
													"key": "channelCode",
													"value": "{{testCode}}_CH"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Channel MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ea8a56b-f65a-4098-87b5-fa198bb3c4f0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Channel INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1005fd0-2400-40f0-8406-8358a2c07cb7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Channel SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "525f346d-191a-4d4d-a53c-f4ee17276cbd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											],
											"query": [
												{
													"key": "channelCode",
													"value": "{{testCode}}_CH"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Channel ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9bae181-781b-4e0d-8bc1-c02e0439191f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Channel with code=\"+pm.environment.get(\"testCode\")+\"_CH does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel"
											],
											"query": [
												{
													"key": "channelCode",
													"value": "{{testCode}}_CH"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "CountryIso",
							"item": [
								{
									"name": "CreateOrUpdate CountryIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76b40c1a-914d-4c08-bd6e-c2f62c2a1009",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read CountryIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "348251d8-19d5-4257-bfdc-1af716017da0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal TS\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.country.countryCode).to.eql(\"TS\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.country.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso?countryCode=TS",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso"
											],
											"query": [
												{
													"key": "countryCode",
													"value": "TS"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CountryIso  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89e2a090-85fa-47df-86f1-c4361cd98933",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Country with code=TS already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5c36964-763a-40ac-b8be-a3b21f3b1e21",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Country with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CountryIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26b17d5c-fa9e-47a3-9566-6f32bc55a734",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CountryIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94ef7f88-9414-4acc-b2f7-e3f46ca38828",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read CountryIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ffbd849-24a5-4102-a020-dd85fec3e127",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal TS\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.country.countryCode).to.eql(\"TS\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.country.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso?countryCode=TS",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso"
											],
											"query": [
												{
													"key": "countryCode",
													"value": "TS"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CountryIso  MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "617d0002-5f5f-48ba-b9f1-f7b5ed0f924c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: currencyCode.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"MISSING\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CountryIso INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "674044ca-6940-4aa3-afa2-0911c98e0f6a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"INVALID\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"languageDescriptions\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CountryIso INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e62f4297-16e2-4f1d-8181-5cc62368e7f8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"countryCode size must be between 0 and 10\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"TOO_LONG_NAME\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6565520-9790-4119-bcfb-7c592b848671",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Language with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"NOT_EXIST\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CountryIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f76fcfd1-f40b-4ed4-929d-87b5b554b502",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/TS",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"TS"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9426cd4e-f671-42f9-a9e2-e504c573fa1f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Country with code=TS does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/countryIso/TS",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"countryIso",
												"TS"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "CurrencyIso",
							"item": [
								{
									"name": "CreateOrUpdate CurrencyIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "10e6e977-e390-4fc5-a4b1-d46171f92dd0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read CurrencyIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c84ce94c-2d2c-40b7-9e41-3218b479c74a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal TST\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.currency.code).to.eql(\"TST\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.currency.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso?currencyCode=TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso"
											],
											"query": [
												{
													"key": "currencyCode",
													"value": "TST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CurrencyIso ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94a91884-f54d-45fa-8935-19f537157064",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Currency with code=TST already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CurrencyIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b7c5c76-bb42-4431-9baf-fa5e442e2662",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Currency with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CurrencyIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "459d7e58-87cb-4d2e-aa9c-387b9bb4605b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CurrencyIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3eb5717e-fec8-47f1-a844-5e315abdcceb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read CurrencyIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2004b0fa-87a9-4525-a0ba-306e646bac3c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal TST\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.currency.code).to.eql(\"TST\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.currency.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso?currencyCode=TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso"
											],
											"query": [
												{
													"key": "currencyCode",
													"value": "TST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CurrencyIso INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "077640fa-be00-41be-a7ad-8a965bab96e4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"currencyCode size must be between 0 and 3\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TEST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CurrencyIso  MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b129ffef-44b4-46bc-a79c-b5ccce8be3a9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate CurrencyIso  GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8381e0c3-8624-4b47-b9f6-380c6f60b4fc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"ERROR: null value in column\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CurrencyIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "edc12c98-550c-4494-b930-28c7b92c86ae",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"TST"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CurrencyIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "316f431c-fdff-4a09-8002-b6e03aa37456",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Currency with code=TST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/currencyIso/TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"currencyIso",
												"TST"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "LanguageIso",
							"item": [
								{
									"name": "CreateOrUpdate LanguageIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "036ac026-6419-4612-8464-7ee1f45f15ee",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n  \"code\": \"TST\",\r\n  \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read LanguageIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "35c0fc7d-06d0-4499-a147-3af1353b476d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal TST\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.language.code).to.eql(\"TST\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.language.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso?languageCode=TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso"
											],
											"query": [
												{
													"key": "languageCode",
													"value": "TST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create LanguageIso  ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd319915-c0b7-471f-aad8-886634840171",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Language with code=TST already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update LanguageIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70463250-12b5-4990-ab2e-f6e12f77dd59",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Language with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update LanguageIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bbb34626-47e9-4e25-a1e6-b62a8c7d2519",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate LanguageIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9be4a52b-453b-43f5-81d1-2f56f00ef078",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read LanguageIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "846c8f4e-f2e8-4e06-a65e-adad6f34e1ce",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal TST\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.language.code).to.eql(\"TST\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.language.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso?languageCode=TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso"
											],
											"query": [
												{
													"key": "languageCode",
													"value": "TST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate LanguageIso INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e539c3a2-4d18-4db9-8687-b0cb114c3c3f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"languageCode size must be between 0 and 3\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TEST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate LanguageIso MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea40820d-bb85-40bd-8df9-c25469de2d59",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate LanguageIso GENERIC_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e99c18a9-71f8-41a2-b670-c61bd8edaba1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"ERROR: null value in column\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TST\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete LanguageIso SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "658f96a4-53c3-4522-bde1-b5d75a1e6112",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"TST"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete LanguageIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d3a5729-e201-413c-9bfa-59839bda5f49",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Language with code=TST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/languageIso/TST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"languageIso",
												"TST"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Provider",
							"item": [
								{
									"name": "Create Provider BUSINESS_API_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b76e317e-74d9-410d-909e-c4938df9a892",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"There should already be a provider setup\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Provider SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab220959-70ce-4e78-8a6e-7c8633092f54",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Provider SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09911eb1-1e93-4187-9cb6-2ccd85d768c8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.provider.code).to.eql(pm.environment.get(\"testCode\")+\"_PROVIDER\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.provider.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Provider SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b88ea55-06f8-4952-a0e8-9eb1ec6683d6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Provider SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a70faa3-6523-44de-a685-34a3dbe43b6c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.provider.code).to.eql(pm.environment.get(\"testCode\")+\"_PROVIDER\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.provider.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Provider INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00164dbf-e78d-4827-80cb-83e37c625645",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_PROVIDER\",\r\n  \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"INVALID\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n      \"displaySubscriptions\": \"true\",\r\n      \"displayServices\": \"true\",\r\n      \"displayOffers\": \"true\",\r\n      \"displayEdrs\": \"true\",\r\n      \"displayProvider\": \"true\",\r\n      \"displayCfAsXML\": \"true\",\r\n      \"displayPricePlans\": \"true\",\r\n      \"displayDetail\": \"true\",\r\n      \"displayChargesPeriods\": \"true\",\r\n      \"displayFreeTransacInInvoice\": \"false\",\r\n      \"displayBillingCycle\": \"true\",\r\n      \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Provider INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48e61c5b-80cd-4dc1-a677-54fe5a630789",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"{{testCode}}_PROVIDER\",\r\n  \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"INVALID\",\r\n    \"invoiceConfiguration\": {\r\n      \"displaySubscriptions\": \"true\",\r\n      \"displayServices\": \"true\",\r\n      \"displayOffers\": \"true\",\r\n      \"displayEdrs\": \"true\",\r\n      \"displayProvider\": \"true\",\r\n      \"displayCfAsXML\": \"true\",\r\n      \"displayPricePlans\": \"true\",\r\n      \"displayDetail\": \"true\",\r\n      \"displayChargesPeriods\": \"true\",\r\n      \"displayFreeTransacInInvoice\": \"false\",\r\n      \"displayBillingCycle\": \"true\",\r\n      \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3be6ea88-8a3d-40a0-aeda-f6147eabb32b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8b15bc05-fcb2-4dbf-b615-89716cb3bd03",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Role",
							"item": [
								{
									"name": "CreateOrUpdate Role SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b1197d9-998b-4b96-adf3-65a8ee8787b6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Role SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c34f9322-355d-4867-914f-01e5d77a6e3e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal\"+pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.roleDto.name).to.eql(pm.environment.get(\"testCode\") + \"_ROLE\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.roleDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role?roleName={{testCode}}_ROLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role"
											],
											"query": [
												{
													"key": "roleName",
													"value": "{{testCode}}_ROLE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Role ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5315eee-5a3f-436b-88d7-200c023399d1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Role with role name=\"+pm.environment.get(\"testCode\")+\"_ROLE already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "824804f2-53d9-4bcd-8634-70ed5bdc679d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Role with name=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89a89bde-82ba-47fc-82db-1b1da43168f8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Role  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "47f6d9bf-2e87-476f-8926-98e5da56eb05",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Role  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c6bec8b-8384-44bf-bca7-df117ad2a68e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.roleDto.name).to.eql(pm.environment.get(\"testCode\") + \"_ROLE\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.roleDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role?roleName={{testCode}}_ROLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role"
											],
											"query": [
												{
													"key": "roleName",
													"value": "{{testCode}}_ROLE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Role INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0359475a-bf71-4ceb-8f40-bc01b64a0a8f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Role MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7ef4ee4-acfc-4835-afac-6ecb91b74fa9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: name.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \r\n\t\"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7384f3ca-c048-4674-8fa8-81e03404019d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Permission with name=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"NOT_EXIST\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Role  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6fc421f5-8799-4e8d-a7b6-40de682fd59c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/{{testCode}}_ROLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"{{testCode}}_ROLE"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8451bbe-26d6-4ef5-91d7-714a1898c9eb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Role with name=\"+pm.environment.get(\"testCode\")+\"_ROLE does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role/{{testCode}}_ROLE",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role",
												"{{testCode}}_ROLE"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Tax",
							"item": [
								{
									"name": "CreateOrUpdate Tax SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c867638-fa74-4d17-8202-7b8f4da89f0b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Tax SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b358d3e4-fb36-4bd8-8912-7d7c64e56638",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.tax.code).to.eql(pm.environment.get(\"testCode\") + \"_TAX\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.tax.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax?taxCode={{testCode}}_TAX",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax"
											],
											"query": [
												{
													"key": "taxCode",
													"value": "{{testCode}}_TAX"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Tax ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f69eb0b7-2e5c-4d61-9868-0509ee8fc658",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Tax with code=\" + pm.environment.get(\"testCode\") + \"_TAX already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Tax  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42e49559-b2fa-4b4c-b952-401267114f84",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Tax with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Tax SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0aff474e-9edc-4717-9902-a98b04b49e18",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"percent\": \"30\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 30%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 30%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb897a81-0638-4f63-8e3c-aed3fe664b0c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"percent\": \"30\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 30%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 30%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Tax   SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "93ed0ea4-08e0-46ff-a580-62a66810db1d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.tax.code).to.eql(pm.environment.get(\"testCode\") + \"_TAX\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.tax.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax?taxCode={{testCode}}_TAX",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax"
											],
											"query": [
												{
													"key": "taxCode",
													"value": "{{testCode}}_TAX"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "274b18c9-9e5f-4f2f-9d85-33d0f72f5dc0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "394eed7f-7106-47f7-b00a-5732750b2d2b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Language INVALID is not supported by the provider.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"INVALID\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4fba1258-d46d-4ccf-905b-c8df546b2217",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: percent.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Tax ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8a86fe5-7da6-4243-9297-a7298b40b56d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"TVA 20%\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": \"NOT_EXIST\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Tax SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22b28d99-699f-4eb4-afdb-7151d54bc91a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/{{testCode}}_TAX",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"{{testCode}}_TAX"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Tax  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d3f80eb8-bac1-466c-afd9-eb8e7879e3fe",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Tax with code=\"+pm.environment.get(\"testCode\")+\"_TAX does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/tax/{{testCode}}_TAX",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"tax",
												"{{testCode}}_TAX"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Invoice Type",
							"item": [
								{
									"name": "CreateOrUpdate Invoice Type SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "297f0515-0f4f-4381-afd9-224aa984d134",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Type SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6ab099db-98c1-41b2-b2a4-7ec26710513b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.invoiceTypeDto.code).to.eql(pm.environment.get(\"testCode\") + \"_IT\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.invoiceTypeDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType?invoiceTypeCode={{testCode}}_IT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType"
											],
											"query": [
												{
													"key": "invoiceTypeCode",
													"value": "{{testCode}}_IT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Invoice Type ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a74cf115-4bfa-419a-bf9f-c4e30a3414a0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=\" + pm.environment.get(\"testCode\") + \"_IT already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4a6f692-18a6-4643-b4d8-febeb3717705",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Invoice Type SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8d3b613-8a1a-4e7e-9240-c7e59031ae29",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1c6237f-50f4-46ae-bf4d-19dabe919552",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Invoice Type SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "188f8de9-11c3-48d1-b9c9-ab5e8a5d6109",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.invoiceTypeDto.code).to.eql(pm.environment.get(\"testCode\") + \"_IT\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.invoiceTypeDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType?invoiceTypeCode={{testCode}}_IT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType"
											],
											"query": [
												{
													"key": "invoiceTypeCode",
													"value": "{{testCode}}_IT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00bf16e3-6fdf-4338-bd91-af9d2448df86",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": \"INVALID\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "694674ee-1a8a-4de5-a3c9-501e1710cf9a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82170031-48fc-4a93-b033-1ffc73971721",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"EmailTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"manual\",\r\n    \"emailTemplateCode\": \"NOT_EXIST\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0fe9000e-50bd-4eee-843c-0c5310a8eff6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"XX\",\r\n        \"invoiceSequenceCode\": \"NOT_EXIST\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"XX\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb411688-f5d3-4479-b1ff-d0b453d81055",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"NOT_EXIST\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"manual\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "528e74fe-60dc-4c41-8678-5dd5b37aa2c0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"NOT_EXIST\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"XX\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"XX\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Invoice Type SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7dac7d2e-196e-4c19-8511-9db1ee4f0bb6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/{{testCode}}_IT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"{{testCode}}_IT"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3f0cdf37-fc94-4cff-8079-5b676cd35762",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=\"+pm.environment.get(\"testCode\")+\"_IT does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/{{testCode}}_IT",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"{{testCode}}_IT"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Credit Category",
							"item": [
								{
									"name": "CreateOrUpdate Credit Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d3011bc-31d1-477b-bd80-27db8f4981c5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Credit Category  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c71bb40b-ed63-4e0c-8e48-1febb4ef7023",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.creditCategory.code).to.eql(pm.environment.get(\"testCode\") + \"_CrCat\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.creditCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory?creditCategoryCode={{testCode}}_CrCat",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory"
											],
											"query": [
												{
													"key": "creditCategoryCode",
													"value": "{{testCode}}_CrCat"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Credit Category ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f3c8122-3307-4a73-8569-e0d256c4084b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=\" + pm.environment.get(\"testCode\") + \"_CrCat already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Credit Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "57ae5f0c-662e-4dcc-9b82-0a5ec86b9481",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Credit Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94e306f6-2bef-4b3c-b456-c1bcb686eb76",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Credit Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f8513a1d-a702-46dc-bbdc-e4a11add5500",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Credit Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f53c24ac-1f89-43a5-9854-e8666dfdd064",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.creditCategory.code).to.eql(pm.environment.get(\"testCode\") + \"_CrCat\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.creditCategory.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory?creditCategoryCode={{testCode}}_CrCat",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory"
											],
											"query": [
												{
													"key": "creditCategoryCode",
													"value": "{{testCode}}_CrCat"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Credit Category SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2131cb69-2067-4876-aa74-2276e0bc3ca6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory/{{testCode}}_CrCat",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory",
												"{{testCode}}_CrCat"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Credit Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f05ac24-83ee-4aca-b9ae-eefdc6a340d1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=\" + pm.environment.get(\"testCode\") + \"_CrCat does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/creditCategory/{{testCode}}_CrCat",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"creditCategory",
												"{{testCode}}_CrCat"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "30de6f09-6845-4a22-a10c-97c9f6cf2aa8",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2a05ef95-6de0-4779-bd4a-dee393e0b1d4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Payment Gateway",
							"item": [
								{
									"name": "CreateOrUpdate Payment Gateway SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8479755-9e97-4560-aa37-d0baef249ca5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Payment Gateway  SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c51ea8a7-eba3-4aac-8f37-c8f06d353c89",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentGateway.code).to.eql(pm.environment.get(\"testCode\") + \"_PG\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentGateway.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_PG"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Payment Gateway ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6144d8f1-70e6-460d-847e-d381d9370ea7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=\" + pm.environment.get(\"testCode\") + \"_PG already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Payment Gateway ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b371f08a-c61f-4424-9c8f-f6bb4370eab6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Payment Gateway SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c5feebe-8d0e-4a05-82ca-b4269e362b1d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Gateway SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00f9d30f-95ed-4e6b-801b-f35199c25f44",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Payment Gateway SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36849e23-dee5-4580-ae5b-187bd72148e4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentGateway.code).to.eql(pm.environment.get(\"testCode\") + \"_PG\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentGateway.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_PG"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Gateway MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89bfd145-efd8-4114-b207-474995b948ff",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code, type, paymentMethodType.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Gateway INVALID_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d7ca614-ad01-4f88-a70a-c79ed27aae6a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.payments.PaymentGatewayTypeEnum` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"INVALID\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Payment Gateway SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82512d3f-0baa-447c-a1d7-d3b6d655d04e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_PG"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Payment Gateway ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa2be614-e999-465e-b593-c6260bcfe539",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=\" + pm.environment.get(\"testCode\") + \"_PG does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentGateway"
											],
											"query": [
												{
													"key": "code",
													"value": "{{testCode}}_PG"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1e449687-c247-4137-9d57-a0241af52b60",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f204bfe9-a166-4284-91cb-a86291ba7a60",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Payment Schedule Template",
							"item": [
								{
									"name": "CreateOrUpdate Payment Schedule Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7401657d-31ca-4a5a-919a-7bc297f18922",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"1\");",
													"    pm.globals.set(\"id_PST\", jsonData.message);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Payment Schedule Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8653320-675d-4c11-a9c4-b667836de907",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentScheduleTemplateDto.code).to.eql(pm.environment.get(\"testCode\") + \"_PST\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentScheduleTemplateDto.description).to.eql(pm.environment.get(\"testDescription\"));",
													"});",
													"pm.test(\"Id is equal \"+pm.globals.get(\"id_PST\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentScheduleTemplateDto.id+\"\").to.eql(pm.globals.get(\"id_PST\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											],
											"query": [
												{
													"key": "paymentScheduleTemplateCode",
													"value": "{{testCode}}_PST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Payment Schedule Template ENTITY_ALREADY_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5cbbf864-fad7-4cec-962e-aad9bc19e63a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=\" + pm.environment.get(\"testCode\") + \"_PST already exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Payment Schedule Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6aed73b5-f732-4662-ae66-cba0a165a33d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Payment Schedule Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b3538437-c882-4486-ad1f-2837a99ed498",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "342d721c-f6a9-4264-bb29-0e1dd4923d16",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Payment Schedule Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "74460cdf-4bc6-44bb-a1b1-53f4f832d01f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentScheduleTemplateDto.code).to.eql(pm.environment.get(\"testCode\") + \"_PST\");",
													"});",
													"",
													"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentScheduleTemplateDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
													"});",
													"pm.test(\"Id is equal \"+pm.globals.get(\"id_PST\"), function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.paymentScheduleTemplateDto.id+\"\").to.eql(pm.globals.get(\"id_PST\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											],
											"query": [
												{
													"key": "paymentScheduleTemplateCode",
													"value": "{{testCode}}_PST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template MISSING_PARAMETER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b61561a8-937a-4dfe-a085-4dd4595ee338",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code, calendarCode, serviceTemplateCode, paymentDayInMonth, amount, paymentLabel, advancePaymentInvoiceTypeCode, advancePaymentInvoiceSubCategoryCode, generateAdvancePaymentInvoice, doPayment.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "72bff1e8-e358-43db-95fe-cf233392e2cb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"INVALID\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_doPayment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "60c06eaa-750f-44f0-91cc-e33a64ec23ab",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"INVALID\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_generateAdvancePaymentInvoice",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0a2451e5-6871-4d56-ba03-9f7186eca942",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"INVALID\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_paymentDateInMonth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3dd8ce9f-86ee-4d01-bc12-e2b4c47d835b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"INVALID\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_advPaymentInvSubCat",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a69234d-6749-4a7e-89eb-71cb49a9562c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"NOT_EXIST\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_advPaymentInvType",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7627dd2e-c8e1-420d-964d-187dacb05f4c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"NOT_EXIST\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_calendarCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cfa24ad3-4b58-43cf-b992-3c8341ba3fac",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"NOT_EXIST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_serviceTemplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78195385-cbb5-4db7-915c-b8dee86c493c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"ServiceTemplate with code=NOT_EXIST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"NOT_EXIST\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Payment Schedule Template SUCCESS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8882ffef-43a4-4737-bd2a-56d28962c188",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											],
											"query": [
												{
													"key": "paymentScheduleTemplateCode",
													"value": "{{testCode}}_PST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Payment Schedule Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5709b7b6-7d44-454e-bcf1-b38f7640183d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=\" + pm.environment.get(\"testCode\") + \"_PST does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"payment",
												"paymentScheduleTemplate"
											],
											"query": [
												{
													"key": "paymentScheduleTemplateCode",
													"value": "{{testCode}}_PST"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b5011bf7-737a-49da-aa32-b01ecbbe8dbb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "14b5ba81-f60e-43c3-ad2b-5d4516bd3d90",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Custom",
					"item": [
						{
							"name": "Entity Customization",
							"item": [],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Custom Table",
							"item": [],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# Portal APIs\r\n\r\nHere are all portal APIs. Are tested the CRUD processes when available as well as exceptions that might occure, to assure that everything works as intended.\r\n\r\n### Typical execution\r\n\r\nThe typical test consists of:\r\n1. A successful createOrUpdate (POST) - remplace with create when createOrUpdate is unavailable\r\n2. A successful read (GET) - check if entity created in point 1 is retreived\r\n3. A failed Create (POST) - due to entity already created\r\n4. A failed update (PUT) - due to a non existant entity\r\n5. A succesfull update (PUT) - update entity created in point 1\r\n6. A succesfull createOrUpdate (POST) - update entity created in point 1 - skip this if createOrUpdate is unavailable\r\n7. A successful read (GET) - check if updated entity from point 5 and 6 have been correctly updated\r\n8. Any extra failed tests such as MISSING_PARAMETER or INVALID_PARAMETER\r\n\r\nPlease ensure that tests are correctly asserted in the Tests tab.\r\n\r\n## Table of portal entities\r\n\r\n| Entity                    | Create | Read | Update | Delete | Other           | Exception Handling |\r\n|---------------------------|--------|------|--------|--------|-----------------|--------------------|\r\n| Access                    |        |      |        |        |                 |                    |\r\n| Account Hierarchy         | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Account Operation         | TODO   | TODO | TODO   | TODO   |                 | TODO               |\r\n| Accouting Code            | OK     | OK   | OK     | OK     |                 |                    |\r\n| Addressbook               |        |      |        |        |                 |                    |\r\n| Audit                     |        |      |        |        |                 |                    |\r\n| Billing Account           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Billing Run               | OK     | NA   | NA     | NA     | Validate/Cancel | OK                 |\r\n| Billing Cycle             | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Business Account          |        |      |        |        |                 |                    |\r\n| Business Offer Model      |        |      |        |        |                 |                    |\r\n| Business Product Model    |        |      |        |        |                 |                    |\r\n| Business Service Model    |        |      |        |        |                 |                    |\r\n| Calendar                  | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Catalog                   |        |      |        |        |                 |                    |\r\n| Channel                   | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Channel and Segments      |        |      |        |        |                 |                    |\r\n| Charge Template           |        |      |        |        |                 |                    |\r\n| Chart                     |        |      |        |        |                 |                    |\r\n| Communication             |        |      |        |        |                 |                    |\r\n| Configuration             |        |      |        |        |                 |                    |\r\n| Contact                   |        |      |        |        |                 |                    |\r\n| Counter Template          |        |      |        |        |                 |                    |\r\n| CountryIso                | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Country                   |        |      |        |        |                 |                    |\r\n| Credit Category           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Currency                  |        |      |        |        |                 |                    |\r\n| CurrencyIso               | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Custom Entity Instance    | NOK    | NOK  | TODO   | NOK    |                 | NOK                |\r\n| Custom Field Template     |        |      |        |        |                 |                    |\r\n| Custom Table              | NOK    | NOK  | TODO   | NOK    |                 | NOK                |\r\n| Customer                  | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Customer Account          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Customer Brand            | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Customer Category         | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| DD Request Lot OP         |        |      |        |        |                 |                    |\r\n| Discount Plan             | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Discount Plan Item        |        |      |        |        |                 |                    |\r\n| Document Sign             |        |      |        |        |                 |                    |\r\n| Dunning Document          |        |      |        |        |                 |                    |\r\n| Email Notification        |        |      |        |        |                 |                    |\r\n| Email Template            |        |      |        |        |                 |                    |\r\n| Entity Customization      | NOK    | NOK  | TODO   | NOK    |                 | NOK                |\r\n| File Format               |        |      |        |        |                 |                    |\r\n| File Format               |        |      |        |        |                 |                    |\r\n| Filter                    |        |      |        |        |                 |                    |\r\n| Generic Workflow          |        |      |        |        |                 |                    |\r\n| Iban                      |        |      |        |        |                 |                    |\r\n| Import Export             |        |      |        |        |                 |                    |\r\n| Invoice                   | OK     | OK   | NA     | NA     | Generate        |                    |\r\n| Invoice Category          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Invoice Sequence          | OK     | OK   | OK     | NA     |                 | OK                 |\r\n| Invoice SubCategory       | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Invoice Type              | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Invoicing                 |        |      |        |        |                 |                    |\r\n| Job Instance              | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Job Trigger               |        |      |        |        |                 |                    |\r\n| LanguageIso               | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Language                  |        |      |        |        |                 |                    |\r\n| Measurable Quantity       |        |      |        |        |                 |                    |\r\n| Mediation                 |        |      |        |        |                 |                    |\r\n| Metric Configuration      |        |      |        |        |                 |                    |\r\n| Meveo Instance            |        |      |        |        |                 |                    |\r\n| Module                    | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Notification              |        |      |        |        |                 |                    |\r\n| OccTemplate               | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Offer Template            | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Offer Template Category   |        |      |        |        |                 |                    |\r\n| One Shot Charge Template  |        |      |        |        |                 |                    |\r\n| Order                     |        |      |        |        |                 |                    |\r\n| Payment Gateway           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Payment Method            | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Payment Schedule          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Payment                   |        |      |        |        |                 |                    |\r\n| PDF Document              |        |      |        |        |                 |                    |\r\n| PdfInvoice                |        |      |        |        |                 |                    |\r\n| Price Plan                | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Provider                  | OK     | OK   | OK     | NA     |                 | OK                 |\r\n| Provider Contact          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Query                     |        |      |        |        |                 |                    |\r\n| Quote                     |        |      |        |        |                 |                    |\r\n| Rated Transation          |        |      |        |        |                 |                    |\r\n| Tax                       | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Recurring Charge Template | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Refund                    |        |      |        |        |                 |                    |\r\n| Report Extract            |        |      |        |        |                 |                    |\r\n| Revenue Recognition Rules |        |      |        |        |                 |                    |\r\n| Role                      | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Rum Sequence              |        |      |        |        |                 |                    |\r\n| Script Instance           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Seller                    | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Service Template          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| SMS Notification          |        |      |        |        |                 |                    |\r\n| Subscription              | OK     | OK   | OK     | OK     | Activate        | OK                 |\r\n| Tax Category              |        |      |        |        |                 |                    |\r\n| Tax Class                 | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Tax Mapping               |        |      |        |        |                 |                    |\r\n| Terminate Reason          | OK     | TODO | TODO   | TODO   |                 | TODO               |\r\n| Timer Entity              |        |      |        |        |                 |                    |\r\n| Title                     | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Triggered Edr             |        |      |        |        |                 |                    |\r\n| Unit of Measure           |        |      |        |        |                 |                    |\r\n| Unitary Custom Table      |        |      |        |        |                 |                    |\r\n| Usage                     |        |      |        |        |                 |                    |\r\n| Usage Charge Template     |        |      |        |        |                 |                    |\r\n| User                      |        |      |        |        |                 |                    |\r\n| User Account              | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| User Hierarchy            |        |      |        |        |                 |                    |\r\n| Wallet                    | OK     | OK   | TODO   | NA     |                 | OK                 |\r\n| WebHook Notification      |        |      |        |        |                 |                    |\r\n| Workflow                  |        |      |        |        |                 |                    |",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "556c76e5-d28a-4cad-bcd8-48faa704d392",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "039be07a-f09a-4675-a862-f2c7390dd031",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Url",
			"item": [
				{
					"name": "Index",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81800f65-63aa-45af-9c37-976fe360e039",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/index.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"index.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/providers/providerSelfDetail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df14651b-7e3b-4290-ad5b-98e9985aa724",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/providers/providerSelfDetail.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"providers",
								"providerSelfDetail.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/providerContacts/providerContacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c2bf9f6-5a0b-4d70-875e-1c631fdda8f3",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/providerContacts/providerContacts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"providerContacts",
								"providerContacts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/meveoUsers/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7206f4ca-bff7-4936-ad58-9aa9200e80a6",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/meveoUsers/users.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"meveoUsers",
								"users.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/userRoles/userRoles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88cbd831-7c51-4b3a-865d-8780ca48993e",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/userRoles/userRoles.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"userRoles",
								"userRoles.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/userGroupHierarchy/userGroupHierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "008fe6bc-5c7a-43af-b13f-4c60f907c7ca",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/userGroupHierarchy/userGroupHierarchy.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"userGroupHierarchy",
								"userGroupHierarchy.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/sellers/sellers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "deeecc58-c88c-4403-acf3-5725dee0e344",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/sellers/sellers.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"sellers",
								"sellers.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/title/titles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93a7b5a3-9787-4f77-b96a-86c807074c88",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/title/titles.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"title",
								"titles.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/customerBrands/customerBrands",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e19ae8b9-c2be-4602-a64a-d3c89387a66a",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/customerBrands/customerBrands.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"customerBrands",
								"customerBrands.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/customerCategories/customerCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58961967-3321-42ce-ba12-32853f755c30",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/customerCategories/customerCategories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"customerCategories",
								"customerCategories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/creditCategories/creditCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "094fcf6e-5600-46ab-ba14-e984e1eb64f5",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/creditCategories/creditCategories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"creditCategories",
								"creditCategories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/occTemplates/occTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f346f359-c047-4d6e-a380-25dd913d0834",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/occTemplates/occTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"occTemplates",
								"occTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/tradingLanguages/tradingLanguages",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0a684c3-9ed1-446d-a22c-bed477e2c590",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/tradingLanguages/tradingLanguages.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"tradingLanguages",
								"tradingLanguages.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/tradingCurrencies/tradingCurrencies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3285380-38d5-4b1f-a24c-d5a03cb33073",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/tradingCurrencies/tradingCurrencies.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"tradingCurrencies",
								"tradingCurrencies.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/tradingCountries/tradingCountries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67c62b5a-2d66-4fd7-b9fb-08fc045f7b5e",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/tradingCountries/tradingCountries.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"tradingCountries",
								"tradingCountries.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/multiLanguageField/multiLanguageFields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173b438f-0e0a-4a03-a720-2ccb030ff4db",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/multiLanguageField/multiLanguageFields.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"multiLanguageField",
								"multiLanguageFields.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/communication/emailTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e9ff655-7875-41d0-abcd-b62f6c612c9e",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/communication/emailTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"communication",
								"emailTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/calendars/calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c03347e1-060f-41b4-b00a-547216c8c300",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/calendars/calendars.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"calendars",
								"calendars.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/billingCycles/billingCycles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb472c73-f6c3-4852-b977-8ab0d2762a8c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/billingCycles/billingCycles.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"billingCycles",
								"billingCycles.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/taxes/taxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9745ae06-303d-478b-83d7-4c2d50acc5d1",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/taxes/taxes.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"taxes",
								"taxes.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/invoiceCategories/invoiceCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2da1a505-8e67-4abc-8708-adc723706e1c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/invoiceCategories/invoiceCategories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"invoiceCategories",
								"invoiceCategories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/invoiceSubCategories/invoiceSubCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cae4990c-21a3-4e03-9e53-4c66a17d4528",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/invoiceSubCategories/invoiceSubCategories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"invoiceSubCategories",
								"invoiceSubCategories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoiceTypes/invoiceTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dfba0be-7c77-45eb-b750-d1e349c30d39",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoiceTypes/invoiceTypes.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoiceTypes",
								"invoiceTypes.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoiceSequences/invoiceSequences",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f749b80-ab29-4b23-8c47-5fa2001b5fa0",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoiceSequences/invoiceSequences.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoiceSequences",
								"invoiceSequences.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/terminationReason/terminationReasons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fefc53ab-fdcb-4abe-b162-95918f211ee4",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/terminationReason/terminationReasons.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"terminationReason",
								"terminationReasons.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/channels/channels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1eccdc22-72e2-4aff-8b07-1504c942e609",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/channels/channels.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"channels",
								"channels.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/offerTemplates/offerTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6bb5cf3-3649-48a2-a3b4-abe81b9d9490",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/offerTemplates/offerTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"offerTemplates",
								"offerTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/offerTemplateCategories/offerTemplateCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de3e0347-1e0b-403b-aa93-108629fffc60",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/offerTemplateCategories/offerTemplateCategories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"offerTemplateCategories",
								"offerTemplateCategories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/serviceTemplates/serviceTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4546078c-933c-4081-95de-ef3d3cf6740f",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/serviceTemplates/serviceTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"serviceTemplates",
								"serviceTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/chargeTemplates/chargeTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e57ef64e-c9e5-44b2-a204-a06786fcb533",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/chargeTemplates/chargeTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"chargeTemplates",
								"chargeTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/recurringChargeTemplates/recurringChargeTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85859026-a79c-462b-993e-67886a808b71",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/recurringChargeTemplates/recurringChargeTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"recurringChargeTemplates",
								"recurringChargeTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/usageChargeTemplates/usageChargeTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4e77e2d-16be-4948-b5f9-f6c1a053f4e4",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/usageChargeTemplates/usageChargeTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"usageChargeTemplates",
								"usageChargeTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/oneShotChargeTemplates/oneShotChargeTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0513bef8-d32e-4d90-9ead-b466d20ba0ea",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/oneShotChargeTemplates/oneShotChargeTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"oneShotChargeTemplates",
								"oneShotChargeTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/counterTemplates/counterTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90943736-46cc-49e4-acff-d22f5ed6083d",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/counterTemplates/counterTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"counterTemplates",
								"counterTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/productTemplates/productTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84197c99-5994-4776-81bf-71fb75494739",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/productTemplates/productTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"productTemplates",
								"productTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/productChargeTemplates/productChargeTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3dd64bc3-5d49-43f9-abdc-fd017b7b0f5a",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/productChargeTemplates/productChargeTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"productChargeTemplates",
								"productChargeTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/bundleTemplates/bundleTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b885ea5-e195-475d-a9e7-eb85d780b25c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/bundleTemplates/bundleTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"bundleTemplates",
								"bundleTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/triggeredEdrTemplates/triggeredEdrTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23149358-68b1-46b9-b646-372fd4c0efdd",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/triggeredEdrTemplates/triggeredEdrTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"triggeredEdrTemplates",
								"triggeredEdrTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/walletTemplates/walletTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b45fb8d-2d2f-4146-9769-aa5debf66a84",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/walletTemplates/walletTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"walletTemplates",
								"walletTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/businessOfferModels/businessOfferModels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70949580-ab3b-4f4f-9f9d-508e56ad88e7",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/businessOfferModels/businessOfferModels.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"businessOfferModels",
								"businessOfferModels.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/businessServiceModels/businessServiceModels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "903a9207-04ed-4cf0-9a15-a13c512968c3",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/businessServiceModels/businessServiceModels.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"businessServiceModels",
								"businessServiceModels.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/businessProductModels/businessProductModels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e09be89-bf47-41d0-81f7-1536a1c59496",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/businessProductModels/businessProductModels.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"businessProductModels",
								"businessProductModels.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/pricePlanMatrixes/pricePlanMatrixes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3741f3a4-afbb-4cb1-af50-621413842dcb",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/pricePlanMatrixes/pricePlanMatrixes.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"pricePlanMatrixes",
								"pricePlanMatrixes.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog/discountPlans/discountPlans",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f36ee1d7-1de6-42df-9033-375a9af55b63",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/catalog/discountPlans/discountPlans.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"catalog",
								"discountPlans",
								"discountPlans.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/customers/customerSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60cafff-c7a6-454b-a803-018aa91d1277",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/customers/customerSearch.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"customers",
								"customerSearch.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/customers/customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf53621d-f003-4e55-9200-0482a36ed85c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/customers/customers.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"customers",
								"customers.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/customerAccounts/customerAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db91d07b-a841-4a73-94f1-e353dcad105c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/customerAccounts/customerAccounts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"customerAccounts",
								"customerAccounts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/billingAccounts/billingAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "373a6887-8521-423b-9b89-ac85f94390df",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/billingAccounts/billingAccounts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"billingAccounts",
								"billingAccounts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/userAccounts/userAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69872138-f56a-41d4-b2ec-9f7ba523f678",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/userAccounts/userAccounts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"userAccounts",
								"userAccounts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/crmAccounts/crmAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb2e7078-bb70-4237-928d-677ac01d0e8b",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/crmAccounts/crmAccounts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"crmAccounts",
								"crmAccounts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/subscriptions/subscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "010294d5-5cac-46f9-bb99-a629c28b6853",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/subscriptions/subscriptions.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"subscriptions",
								"subscriptions.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "medina/access/access",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1a4371e-d9a3-4940-b945-5213b9388b61",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/medina/access/access.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"medina",
								"access",
								"access.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "crm/businessAccountModels/businessAccountModels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b80f643-9745-4058-a58c-676e6fabda0a",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/crm/businessAccountModels/businessAccountModels.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"crm",
								"businessAccountModels",
								"businessAccountModels.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "quote/quotes/quotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f72618ee-7915-42b4-a356-bf37af6fbc05",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/quote/quotes/quotes.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"quote",
								"quotes",
								"quotes.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "order/orders/orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "492e8b45-dd29-407e-b3b5-41227c7adb88",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/order/orders/orders.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"order",
								"orders",
								"orders.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "rating/edr/edrList",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec85e86f-b9c3-4f45-814b-76d8e70e48a5",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/rating/edr/edrList.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"rating",
								"edr",
								"edrList.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "medina/importedFile/importedFiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90d91d63-df98-4c1e-ab4b-e14719c6cbac",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/medina/importedFile/importedFiles.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"medina",
								"importedFile",
								"importedFiles.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/walletOperations/walletOperations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "341d4ebb-467f-4e0d-8e2d-7953f8f9fd74",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/walletOperations/walletOperations.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"walletOperations",
								"walletOperations.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/ratedTransactions/ratedTransactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cf6fd15-14a5-4da3-934a-4485d525c610",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/ratedTransactions/ratedTransactions.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"ratedTransactions",
								"ratedTransactions.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoicing/billingRuns",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cc079c8-fe52-42fa-bb25-9eeee7d6e61c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoicing/billingRuns.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoicing",
								"billingRuns.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoicing/recurringInvoicing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28c4393d-7d23-40bb-9f74-bcf088cf2e3f",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoicing/recurringInvoicing.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoicing",
								"recurringInvoicing.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoicing/exceptionelInvoicing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cde7cc4-884c-4bda-abab-63dfc3c67f2b",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoicing/exceptionelInvoicing.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoicing",
								"exceptionelInvoicing.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoices/invoices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a16deae7-3ed2-40f4-b776-7f2e5d8768c1",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoices/invoices.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoices",
								"invoices.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/invoices/createInvoiceDetail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ae61105-64ab-4472-9be4-5feb125768c8",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/invoices/createInvoiceDetail.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"invoices",
								"createInvoiceDetail.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/dDRequestBuilders/dDRequestBuilders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3178195-0bc3-4241-af1c-61eda4003329",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/dDRequestBuilders/dDRequestBuilders.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"dDRequestBuilders",
								"dDRequestBuilders.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/dDRequestBuilders/dDRequestBuilders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5756de98-9890-4dd4-8ee0-4580c2f5200e",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/dDRequestBuilders/dDRequestBuilders.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"dDRequestBuilders",
								"dDRequestBuilders.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/ddrequestLotOp/ddrequestLotOps",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9660450-2786-4c5e-8c93-422e854ea8a5",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/ddrequestLotOp/ddrequestLotOps.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"ddrequestLotOp",
								"ddrequestLotOps.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/ddrequestLot/ddrequestLots",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd39622b-17df-45ff-9a1b-dd3ff010fd4b",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/ddrequestLot/ddrequestLots.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"ddrequestLot",
								"ddrequestLots.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/paymentGateways/paymentGateways",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4141a47-fd3a-4e0d-b047-1954ef3c6251",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/paymentGateways/paymentGateways.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"paymentGateways",
								"paymentGateways.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "payments/paymentScheduleTemplates/paymentScheduleTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bfbdfa4-9604-4a4a-960a-5841dc8ddefe",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/payments/paymentScheduleTemplates/paymentScheduleTemplates.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"payments",
								"paymentScheduleTemplates",
								"paymentScheduleTemplates.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/workflow/genericWorkflows",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50e93357-c036-4d9a-a8b6-af4829b297d0",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/workflow/genericWorkflows.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"workflow",
								"genericWorkflows.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/workflow/workflowInstanceHistories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54dbe72d-a173-4b7d-bf4a-a9dc11353e9d",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/workflow/workflowInstanceHistories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"workflow",
								"workflowInstanceHistories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/accountingCodes/accountingCodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2a68c11-1474-4f2c-9997-91585373ab8b",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/accountingCodes/accountingCodes.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"accountingCodes",
								"accountingCodes.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "billing/generalLedgers/generalLedgers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09be360a-abae-4740-94d6-06d694038f74",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/billing/generalLedgers/generalLedgers.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"billing",
								"generalLedgers",
								"generalLedgers.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "finance/revenueRecognitionRules/revenueRecognitionRules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60d0ab6c-4b0c-4832-b8cb-5975ba9f35a7",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/finance/revenueRecognitionRules/revenueRecognitionRules.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"finance",
								"revenueRecognitionRules",
								"revenueRecognitionRules.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "finance/revenueSchedules/revenueSchedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf10922d-8548-4d3b-9a15-ed3f7199760c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/finance/revenueSchedules/revenueSchedules.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"finance",
								"revenueSchedules",
								"revenueSchedules.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "finance/reportExtracts/reportExtracts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a97b0025-49ee-4865-bc6c-9304b5eaa37b",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/finance/reportExtracts/reportExtracts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"finance",
								"reportExtracts",
								"reportExtracts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "finance/reportExtractHistories/reportExtractHistories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "796a159c-674d-4e9a-a254-859f5131d764",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/finance/reportExtractHistories/reportExtractHistories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"finance",
								"reportExtractHistories",
								"reportExtractHistories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "finance/accountingWriting/accountingWritings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cc06e72-fd18-40f9-9c76-626714dc2d0f",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/finance/accountingWriting/accountingWritings.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"finance",
								"accountingWriting",
								"accountingWritings.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "reporting/dwh/measurableQuantities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e5bd85-72fb-4d1d-a1f9-47d874810a03",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/reporting/dwh/measurableQuantities.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"reporting",
								"dwh",
								"measurableQuantities.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "reporting/dwh/measuredValueDetail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b213988-2bb2-4e6c-90c1-f33d32cb3d57",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/reporting/dwh/measuredValueDetail.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"reporting",
								"dwh",
								"measuredValueDetail.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "reporting/dwh/charts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e69e9c30-f4b5-4cb2-b469-535175bcaf3c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/reporting/dwh/charts.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"reporting",
								"dwh",
								"charts.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/job/jobInstances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "722964ff-fd43-4e2c-91e7-19e157463f09",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/job/jobInstances.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"job",
								"jobInstances.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/job/timerEntities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7107247-99a0-4118-8972-6224a8f0d5f9",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/job/timerEntities.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"job",
								"timerEntities.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/meveoInstance/meveoInstances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50883487-ae12-4123-93f0-a84aa691936c",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/meveoInstance/meveoInstances.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"meveoInstance",
								"meveoInstances.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/module/modules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff6e543f-34c3-42f3-9080-415d0116e616",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/module/modules.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"module",
								"modules.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/customEntities/customizedEntities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc939d3-15a0-4689-add4-730a8aab05c4",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/customEntities/customizedEntities.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"customEntities",
								"customizedEntities.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/scriptInstanceCategories/scriptInstanceCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad7ad0f8-a22b-42d7-a581-1250e5b28a62",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/scriptInstanceCategories/scriptInstanceCategories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"scriptInstanceCategories",
								"scriptInstanceCategories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/scriptInstances/scriptInstances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d01fc12-df7f-4f8f-83ab-1198815fd85f",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/scriptInstances/scriptInstances.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"scriptInstances",
								"scriptInstances.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/filters/filters/filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d89ae5f3-0ebb-457c-8a90-bb5dd763e0e1",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/filters/filters/filters.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"filters",
								"filters",
								"filters.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification/notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d2be2cc-bb50-4abd-88aa-d23ac2aeb8cc",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/notification/notifications.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"notification",
								"notifications.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification/webHooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8c8d2aa-c760-4ae0-872c-a0ca31a20f3a",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/notification/webHooks.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"notification",
								"webHooks.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification/emailNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d57960c3-7828-4b32-9549-f40a9c0fd6aa",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/notification/emailNotifications.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"notification",
								"emailNotifications.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification/jobTriggers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94b19659-38db-410c-a453-f89cd62fd88b",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/notification/jobTriggers.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"notification",
								"jobTriggers.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification/notificationHistories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3df8c66e-cef7-4e5d-8d13-0ccfd1ac98e3",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/notification/notificationHistories.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"notification",
								"notificationHistories.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification/inboundRequests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "121f50c5-f6cb-41a0-8c6c-d39e432ef8e2",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/notification/inboundRequests.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"notification",
								"inboundRequests.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/export/import",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "397b7f44-0267-4a02-9da5-798302fca9cb",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/export/import.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"export",
								"import.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/export/export",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd490646-4300-4169-a94f-d2b225ca13b0",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/export/export.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"export",
								"export.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/auditLogs/auditConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd2196fb-457d-490b-9783-bfb5834b1537",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/auditLogs/auditConfiguration.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"auditLogs",
								"auditConfiguration.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin/auditLogs/auditLogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcc912d5-52a8-46c2-9248-07fcd603baff",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/admin/auditLogs/auditLogs.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"admin",
								"auditLogs",
								"auditLogs.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "reporting/cache/caches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51c6f7b7-f69c-4bcc-aa03-292a0b256eaa",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/reporting/cache/caches.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"reporting",
								"cache",
								"caches.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "index/fullTextSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53b8e24f-6db5-4cf4-80ca-98bc3b1d8509",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/index/fullTextSearch.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"index",
								"fullTextSearch.jsf"
							]
						}
					},
					"response": []
				},
				{
					"name": "index/index",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdb2bd41-c5c2-408f-8707-5f012bd0bb5e",
								"exec": [
									"pm.test(\"Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.base}}/pages/index/index.jsf",
							"host": [
								"{{opencell.base}}"
							],
							"path": [
								"pages",
								"index",
								"index.jsf"
							]
						}
					},
					"response": []
				}
			],
			"description": "This will run a GET on the admin pages and check if a proper status 200 is returned. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0ad93185-2071-4180-9f3f-3680c38c87bf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d422b0ca-ab13-47b7-8a31-0713cffbea2f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Scenarios",
			"item": [
				{
					"name": "Setup Base Data",
					"item": [
						{
							"name": "Cleanup data - clear customizations",
							"item": [
								{
									"name": "Clear Seller Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "556e079c-7eb8-4151-a1ab-593694a30ce5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.admin.Seller\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Customer Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "466355ab-d842-43d1-ba08-cde3661394e4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.crm.Customer\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Customer Account Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46f2109f-0cf7-4a8e-b9f9-45e7263bb4f2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.payments.CustomerAccount\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Billing Account Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58902913-bf5c-4c56-ba36-7db111ed4887",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.BillingAccount\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear User Account Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8c146ea7-1453-47cd-96da-83bd4b51a623",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.UserAccount\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Subscription Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a99a189c-ffe0-4359-a41b-d2fc18940cca",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Subscription\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Access Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96b454cf-56bc-4d61-bd1c-482ecbfedbbc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.mediation.Access\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Provider Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8115d75f-b8c6-4003-871f-c33f3ea27c69",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.crm.Provider\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Product Template Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1980ef31-8449-4575-ae9a-7022f277b719",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ProductTemplate\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Product Instance Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0aa7329e-8616-4ce6-a809-f9d450b6a909",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.ProductInstance\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Service Template Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2afedcfd-ed4a-4892-aef8-990f0d5a8112",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ServiceTemplate\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Offer Template  Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5b38d00-ed9b-4daf-8126-caec2aa80f0e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.OfferTemplate\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Charge Template  Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbab5279-1a8b-4685-bbcf-aa327443af24",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ChargeTemplate\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Price Plan Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "15ae00ae-496c-48a1-9231-065693558d3d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.PricePlanMatrix\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Invoice Category Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "469d6941-3a7c-4a75-a32d-c16c18595781",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.InvoiceCategory\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Invoice SubCategory Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "84131315-019e-4f02-9eab-1eed764ac35f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.payments.AccountOperation\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Account Operation Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9391fc2f-6edf-4617-9458-7a1740d7cd9b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.InvoiceSubCategory\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Invoice Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62c7a43a-223f-4dac-94ca-7d7128ae3658",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Invoice\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Tax Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b83b8244-3fda-4422-82b0-d178dbf4a232",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Tax\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Billing Cycle Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df83349b-91f8-476c-a312-fbc8d663d2a8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.BillingCycle\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clear Purge Job Customization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "683f5726-50bc-4f61-a29f-50194472e183",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"classname\": \"org.meveo.admin.job.PurgeJob\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/customize",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"customize"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Clean up data - restore provider and configuration",
							"item": [
								{
									"name": "Update provider",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3408f9ee-1610-4322-9e87-352691121d64",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"demo\",\r\n    \"currency\": \"AFA\",\r\n    \"country\": \"AD\",\r\n    \"language\": \"DEU\",\r\n    \"multiCurrency\": \"true\",\r\n    \"multiCountry\": \"true\",\r\n    \"multiLanguage\": \"true\",\r\n    \"enterprise\": \"true\",\r\n    \"levelDuplication\": \"false\",\r\n    \"rounding\": \"8\",\r\n    \"invoiceRounding\": \"2\",\r\n    \"prepaidReservationExpirationDelayinMillisec\": \"60000\",\r\n    \"bankCoordinates\": {\r\n        \"bankCode\": \"SGMB\",\r\n        \"branchCode\": \"12345\",\r\n        \"accountNumber\": \"33333333333\",\r\n        \"key\": \"11\",\r\n        \"iban\": \"11\",\r\n        \"bic\": \"11\",\r\n        \"accountOwner\": \"owner\",\r\n        \"bankName\": \"SGMB\",\r\n        \"bankId\": \"11\",\r\n        \"issuerNumber\": \"1111\",\r\n        \"issuerName\": \"DEMO\"\r\n    },\r\n    \"recognizeRevenue\": \"false\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"false\",\r\n        \"displayProvider\": \"false\",\r\n        \"displayCfAsXML\": \"false\",\r\n        \"displayPricePlans\": \"false\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayBillingCycle\": \"false\",\r\n        \"displayFreeTransacInInvoice\": \"true\",\r\n        \"displayOrders\": \"false\",\r\n        \"displayWalletOperations\": \"false\"\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/provider",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"provider"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set securedEntities=false - AUTHORIZATION_SUPERADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "99ce7fbd-ed1a-4d54-a4d0-a49d256d59e5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"property\": \"secured.entities.enabled\",\r\n\t\"value\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/configurations/setProperty",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"configurations",
												"setProperty"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set service.allowMultiInstantiation=false - AUTHORIZATION_SUPERADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f8c1e4b-4264-446f-b6a3-a0eb599771bf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/configurations/setProperty",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"configurations",
												"setProperty"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Clean up data - user and ES",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b4fd466a-7e11-4f06-ac18-ad7b6ec6c3f6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"{{opencell.username}}\",\r\n    \"password\": \"{{opencell.password}}\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\"administrateur\"],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clean and reindex Full text - AUTHORIZATION_SUPERADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7ab3bc2-9b38-46d8-a180-b4ddf7f9cb9c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.superpassword}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.superusername}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuc3VwZXJhZG1pbjpvcGVuY2VsbC5zdXBlcmFkbWlu"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/filteredList/reindex",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"filteredList",
												"reindex"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Setup Configuration: InvType, BC and Seller",
							"item": [
								{
									"name": "Create InvoiceType",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c627f335-04d1-4da1-869d-d5d31fb44e90",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_TEST-Type\",\r\n\t\"description\": \"Invoice Test Type\",\r\n\t\"occTemplateCode\": \"INV_STD\",\r\n\t\"sequenceDto\": {\r\n\t\t\"prefixEL\": \"Fact_\",\r\n\t\t\"sequenceSize\": \"9\"\r\n\t},\r\n\t\"matchingAuto\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create BillingCycle",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1274980b-c46c-4bd0-83a0-efed7763dc41",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"CYC_INV_MT_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"2\",\r\n\t\"invoiceDateDelay\": \"4\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"invoiceTypeCode\": \"{{baseEntityPrefix}}_TEST-Type\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create BillingCycle 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af903bce-87ee-4007-86d6-1b1a22e3b6dc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"CYC_INV_MT_3\",\r\n\t\"description\": \"Monthly Invoice Cycle 3\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"2\",\r\n\t\"invoiceDateDelay\": \"4\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"dueDateDelayEL\": \"#{ba.id + invoice.billingAccount.id}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "04cb760e-267f-4736-b0a9-4fac098d1c98",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n    \t\"code\": \"SELLER_FR\",\r\n    \t\"description\": \"France Seller\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\",\r\n    \t\"parentSeller\": \"MAIN_SELLER\",\r\n    \t\"invoiceTypeSequences\": {\r\n    \t\t\"{{baseEntityPrefix}}_TEST-Type\": {\r\n    \t\t\t\"prefixEL\": \"SellFact_\",\r\n    \t\t\t\"sequenceSize\": 9,\r\n    \t\t\t\"currentInvoiceNb\": 9\r\n    \t\t}\r\n    \t}\r\n    }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update InvoiceType COM Sequence",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6982d79e-f881-47cf-830b-b2ac1041f6e5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"COM\",\n    \"occTemplateCode\": \"INV_STD\",\n    \"sequenceDto\": {\n        \"prefixEL\": \"COM_\",\n        \"sequenceSize\": \"9\"\n    },\n    \"matchingAuto\": \"false\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Setup Catalog: Charges, Services, Offer, PP, Counters, Wallets",
							"item": [
								{
									"name": "Create Tax Class 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "742736ab-bb3e-4614-aaa6-9d1bf2a7f0b2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_taxClass\",\r\n    \"description\": \"Tax class for {{baseEntityPrefix}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Tax Class 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "160438a3-c4c2-47a0-9e48-0464b22530fc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_taxClass2\",\r\n    \"description\": \"Tax class for {{baseEntityPrefix}} 2\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxClass/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxClass",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Tax Mapping",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "98328bc4-8d0f-48a3-94e7-98d094acff29",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"accountTaxCategoryCode\": \"Tax category\",\r\n    \"chargeTaxClassCode\": \"{{baseEntityPrefix}}_taxClass\",\r\n    \"taxCode\": \"TAX_18\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxMapping/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxMapping",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Tax Category 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "415d00d9-92c8-4561-a805-75adde54688b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\":\"{{baseEntityPrefix}}_taxCategory2\",\r\n\t\"description\":\"Tax category 2\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"taxCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create PrepaidWallet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e09208b2-1e89-4981-948a-87f0970ced72",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PPW1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PrepaidPWallet_Description\",\r\n\t\"walletType\": \"PREPAID\",\r\n\t\"consumptionAlertSet\": \"false\",\r\n\t\"fastRatingLevel\": \"1\",\r\n\t\"lowBalanceLevel\": \"2\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/wallet/template/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"wallet",
												"template",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Counter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1af71a8-c6cd-424e-99f8-1ae59224d808",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CT1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CounterTemplate_Description\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"unity\": \"Quantity\",\r\n\t\"type\": \"USAGE\",\r\n\t\"ceiling\": \"1\",\r\n\t\"disabled\": \"false\",\r\n\t\"counterLevel\": \"BA\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"counterTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TriggeredEDR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06782e3e-472c-4253-bbf6-450938b2f6d3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_EDR1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_Triggered_EDR_DESC\",\r\n\t\"quantityEl\": \"#{op.amountWithoutTax}\",\r\n\t\"param1El\": \"#{edr.parameter1}\",\r\n\t\"param2El\": \"#{edr.parameter2}\",\r\n\t\"param3El\": \"#{edr.parameter3}\",\r\n\t\"param4El\": \"#{edr.parameter4}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/triggeredEdr/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"triggeredEdr",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Recurring",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4f4ef28-25a2-4a86-a5b1-32b4a430c2da",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n\t\"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OneShot - Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4820676-0ea0-4a0b-acf8-d08c55bfde48",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n\t\"immediateInvoicing\": \"false\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"oneShotChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OneShot - Termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02290a84-0ea2-4015-b652-c38b5e216aab",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Termination Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"oneShotChargeTemplateType\": \"TERMINATION\",\r\n\t\"immediateInvoicing\": \"false\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"oneShotChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OneShot - Other",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee0c019f-f0e1-4c4e-8871-316d5d8ccce2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"true\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}s-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"OTHER\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"oneShotChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Usage 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94b655d1-91d1-4624-8b6d-1b643c81e477",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE\",\r\n\t\"priority\": \"1\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"filterExpression\": \"#{ci.chargeTemplate.code.equals('{{baseEntityPrefix}}_USAGE1')}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"usageChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Service 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a705f1c1-3caa-434f-a698-6881167f1d70",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_REC1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateSubscriptions\": {\r\n\t\t\"serviceChargeTemplateSubscription\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OS1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateTerminations\": {\r\n\t\t\"serviceChargeTemplateTermination\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OST1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Service 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6052ea4f-914f-4cf3-9848-5ee82eba317c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n    \"description\": \"{{baseEntityPrefix}}_SERVICE2\",\n    \"invoicingCalendar\": \"MONTHLY\",\n    \"serviceChargeTemplateRecurrings\": {\n        \"serviceChargeTemplateRecurring\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_REC1\"\n            }\n        ]\n    },\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_USAGE1\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Product Charge 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8489c9c2-d7f4-42a9-97b7-dc02ce04d904",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalogManagement",
												"productChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Product Charge 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "736a2df6-be2d-429a-9e9f-15a86e5e0810",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC2\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC2\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit 2 Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalogManagement",
												"productChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Product 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff44330c-c365-4dc1-a39a-2b0f869b6e01",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PRODUCT1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PRODUCT1 DESC\",\r\n\t\"name\": \"{{baseEntityPrefix}}_PRODUCT1 NAME\",\r\n\t\"productChargeTemplate\": [\r\n\t\t{\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\t\t\"disabled\": \"false\"\r\n\t\t}\r\n\t]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalogManagement",
												"productTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Product 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "91a8980b-ec06-407f-8b29-afe231a9577e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PRODUCT2 DESC\",\r\n\t\"name\": \"{{baseEntityPrefix}}_PRODUCT1 NAME\",\r\n\t\"productChargeTemplate\": [\r\n        {\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_PC2\",\r\n\t\t\t\"disabled\": \"false\"\r\n\t\t}\r\n\t]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalogManagement",
												"productTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c7d94fe-7217-4ae5-a6f3-af784a7ce726",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\"\r\n            }\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\"\r\n            }\r\n        }\r\n    ],\r\n    \"offerProductTemplate\": [\r\n        {\r\n            \"productTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_PRODUCT1\"\r\n            }\r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ScriptInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e281d939-ca60-4091-86a2-966085bebe56",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"org.meveo.service.script.rating.RatingScript\",\n    \"description\": \"rating script\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script.rating;\\r\\n\\r\\nimport java.math.BigDecimal;\\r\\nimport java.util.Map;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.meveo.model.admin.User;\\r\\nimport org.meveo.model.billing.WalletOperation;\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.slf4j.Logger;\\r\\nimport org.slf4j.LoggerFactory;\\r\\n\\r\\npublic class RatingScript extends Script {\\r\\n\\r\\n    private static final Logger log = LoggerFactory.getLogger(RatingScript.class);\\r\\n\\r\\n    public void execute(Map<String, Object> context) throws BusinessException {\\r\\n        log.debug(\\\"Rating script creation script...\\\");\\r\\n        // DO not change any amount, as it is untestable\\r\\n        //WalletOperation op = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\\r\\n        //op.setAmountWithoutTax(op.getAmountTax().add(BigDecimal.ONE));\\r\\n    }\\r\\n}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan  Recurring",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4bbe0652-2b78-406a-8e49-3a1ca3d3dd05",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"amountWithoutTax\": \"10\",\r\n\t\"amountWithTax\": \"12\",\r\n\t\"scriptInstance\": \"org.meveo.service.script.rating.RatingScript\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan OneShot - Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e999f90c-33b5-4df1-ba71-3d526486618b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan OneShot - Termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "109b8667-d06f-421f-8a13-2f1b05a752bf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"amountWithoutTax\": \"21\",\r\n\t\"amountWithTax\": \"25\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan OneShot - Other",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d828d86-bec4-4c96-b0f1-457901378b55",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\",\r\n\t\"woDescriptionEL\": \"#{\\\"Special \\\".concat(op.description)}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan Usage 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48801cdd-b67d-449c-9016-f53118f563b7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"amountWithoutTax\": \"9\",\r\n\t\"amountWithTax\": \"14\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan Product 1 in Offer 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "31f5126d-a915-4e24-8887-dcdc06c4b9d7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC1_PP2\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\"amountWithoutTax\": \"0.5\",\r\n\t\"amountWithTax\": \"0.6\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan Product 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "495a0604-765c-4131-af9e-e4542d32a1b3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC1_PP\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"2\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan Product 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cf3f41c-cb16-4fcb-aadf-2046f39caadc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC2_PP\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC2\",\r\n\t\"amountWithoutTax\": \"5\",\r\n\t\"amountWithTax\": \"6\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Reccuring 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbb70a24-2d50-4492-b6d3-8c855a4e73da",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC2\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Recurring 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4ab1a16-9921-4095-a1c1-83e5006d2fa2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OneShot 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d2ba33d-6a2f-45f0-9d33-9a617fbfaab5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS2\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS2\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"oneShotChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OneShot 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d09b8c7e-f0cd-496a-9771-b7e40ed8b1b1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS3\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS3\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"oneShotChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Usage 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc7317a8-0ddc-47f9-88b7-f3636831714f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE\",\r\n\t\"priority\": \"1\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n} ",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"usageChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Usage 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42c32e44-00df-482f-a335-345b73daf703",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE3\",\r\n\t\"priority\": \"2\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"filterExpression\": \"#{ci.chargeTemplate.code.equals('NO_MATCH')}\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"usageChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Service 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ef017ad-6d27-4d3f-82ca-a8f43624eb93",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_REC3\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateSubscriptions\": {\r\n\t\t\"serviceChargeTemplateSubscription\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OS3\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Service 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0109d613-5f30-4df8-9c1a-4fa1dc0c979b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e621926-ae94-4968-a0c4-08cd159156a0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\"\r\n            }\r\n        \r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f01e14e-7f7e-4a78-b8e0-74198795acc6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\"\r\n            }\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE4\"\r\n            }\r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan Usage 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77e36229-54d2-47c1-bdfd-68ca6cf79a44",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan  Usage 1 in Offer 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "38b93e8f-e44a-461a-a993-516a1dce70dd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1_OF2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n\t\"amountWithoutTax\": \"0\",\r\n\t\"amountWithTax\": \"0\",\r\n\t\"priority\": \"0\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan OneShot OS3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a4383d5-45ff-4fd7-b9e7-1ffd5e77c820",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan Recurring 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "85a13afc-7ab0-4ea9-90a8-50c49cffebc9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"amountWithoutTax\": \"10\",\r\n\t\"amountWithTax\": \"12\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Price Plan usage 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0ec3b264-7736-4b55-8815-e038cdddc4d8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE3_OF2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE3_OF2\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"1\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Bundle 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a51e6287-fe75-42a0-bc7c-3990c0c7621a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BUNDLE1\",\r\n    \"description\": \"Bundle 1\",\r\n    \"productChargeTemplates\": {\r\n        \"productChargeTemplate\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_PC2\"\r\n            }\r\n        ]\r\n    },\r\n    \"bundleProducts\": {\r\n        \"bundleProduct\": {\r\n            \"productTemplate\": [\r\n                {\r\n                    \"code\": \"{{baseEntityPrefix}}_PRODUCT1\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/bundleTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"bundleTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create channel - WEB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b04410d-e698-41b3-8f88-3aa884b95ea5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CHANNEL_WEB\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CHANNEL_WEB\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create channel - SOCIAL_MEDIA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "840ea662-511b-4eef-aa03-4fd1b965212d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CHANNEL_WEB\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CHANNEL_WEB\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"channel",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer Category - SOFTWARE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ed34080-5536-40a3-994a-6155341e50fa",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"description\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"name\": \"{{baseEntityPrefix}}_DISK_SPACE\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplateCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer Category - DISK_SPACE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f32b8b34-31aa-461b-a286-1fdf82a1c1a1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"description\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"name\": \"{{baseEntityPrefix}}_DISK_SPACE\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplateCategory",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Setup Customer accounts, subscription, access",
							"item": [
								{
									"name": "Create Customer 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b97d977-4aa3-45be-a81f-f31138fa8f6d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "91da2688-779f-4ae0-8fc6-0345a4b2693a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c520ec48-0696-414d-a3d1-8623a017728d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer Account 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cf8f4474-d7b5-41c0-a303-636f17fe57f9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer Account 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "93d5c075-b573-4694-b596-552060ec4ac6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer Account 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "691b2f12-b6f8-408b-86aa-c1fb9bb98bbe",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Account 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "017203ae-1f59-4ad2-af7b-79237ef20345",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Account 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52a8163d-067e-4756-96b4-661faa439a45",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Billing Account 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "128189a1-7787-4a6e-95cf-bc3b80e8bb1e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"billingCycle\": \"CYC_INV_MT_3\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User Account 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8a80772-f246-4e92-b324-05aa0875e650",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User Account 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff9b3e13-eea2-4990-b544-6d3b366a8867",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User Account 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea09a94b-3c15-4858-a815-d025538ae3cc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "715916c1-5d5b-45af-8325-ae6e4df049c1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"description\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Access",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6b7b340-ca41-46f8-a63f-11e10f386cab",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_ACCP\",\r\n    \"subscription\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"startDate\": \"2016-06-01\",\r\n    \"endDate\": \"2016-06-30\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/access/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"access",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Setup Administration: Measurable Qtt,Charts, Notifications, etc..",
							"item": [
								{
									"name": "create MeasurableQuantities",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "947d2113-6205-4361-acfe-c61dc16c710f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_MQ1\",\r\n    \"description\": \"{{baseEntityPrefix}}_MQ1-DESC\",\r\n    \"dimension1\": \"1\",\r\n    \"dimension2\": \"2\",\r\n    \"dimension3\": \"3\",\r\n    \"dimension4\": \"4\",\r\n    \"editable\": \"false\",\r\n    \"additive\": \"true\",\r\n    \"sqlQuery\": \"select count(*) from billing_subscription where status='CREATED' and date(created)='#{date}'\",\r\n    \"measurementPeriod\": \"MONTHLY\",\r\n    \"lastMeasureDate\": \"2016-03-16\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/measurableQuantity",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"measurableQuantity"
											]
										}
									},
									"response": []
								},
								{
									"name": "create BarChart",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad252949-662e-4701-8b33-e70c7edfe428",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_BarCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"100\",\r\n    \"height\": \"100\",\r\n    \"style\": \"test1\",\r\n    \"styleClass\": \"test1\",\r\n    \"extender\": \"test1\",\r\n    \"visible\": \"true\",\r\n    \"legendPosition\": \"n\",\r\n    \"barPadding\": \"100\",\r\n    \"barMargin\": \"100\",\r\n    \"orientation\": \"vertical\",\r\n    \"stacked\": \"true\",\r\n    \"min\": \"100\",\r\n    \"max\": \"100\",\r\n    \"breakOnNull\": \"false\",\r\n    \"xaxisLabel\": \"test\",\r\n    \"yaxisLabel\": \"test\",\r\n    \"xaxisAngle\": \"10\",\r\n    \"yaxisAngle\": \"10\",\r\n    \"legendCols\": \"20\",\r\n    \"legendRows\": \"20\",\r\n    \"zoom\": \"true\",\r\n    \"animate\": \"true\",\r\n    \"showDataTip\": \"true\",\r\n    \"datatipFormat\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/chart/bar",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"chart",
												"bar"
											]
										}
									},
									"response": []
								},
								{
									"name": "create PieChart",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0b051e-676b-4cca-9ac8-f9df60187f96",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_PieCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"123\",\r\n    \"height\": \"123\",\r\n    \"style\": \"style1\",\r\n    \"styleClass\": \"style_class1\",\r\n    \"extender\": \"extender1\",\r\n    \"visible\": \"true\",\r\n    \"filled\": \"false\",\r\n    \"legendPosition\": \"n\",\r\n    \"diameter\": \"120\",\r\n    \"sliceMargin\": \"10\",\r\n    \"shadow\": \"true\",\r\n    \"showDataLabels\": \"false\",\r\n    \"legendCols\": \"23\",\r\n    \"legendRows\": \"23\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/chart/pie",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"chart",
												"pie"
											]
										}
									},
									"response": []
								},
								{
									"name": "create LineChart",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02b9fb69-0338-47fd-9acf-2c3f42167ecc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_LC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_LineCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"200\",\r\n    \"height\": \"200\",\r\n    \"style\": \"style1\",\r\n    \"styleClass\": \"styleClass2\",\r\n    \"extender\": \"extender3\",\r\n    \"visible\": \"true\",\r\n    \"filled\": \"false\",\r\n    \"legendPosition\": \"w\",\r\n    \"shadow\": \"true\",\r\n    \"minX\": \"45\",\r\n    \"maxX\": \"45\",\r\n    \"minY\": \"45\",\r\n    \"maxY\": \"45\",\r\n    \"breakOnNull\": \"true\",\r\n    \"xaxisLabel\": \"label 1\",\r\n    \"yaxisLabel\": \"label 2\",\r\n    \"xaxisAngle\": \"12\",\r\n    \"yaxisAngle\": \"12\",\r\n    \"stacked\": \"true\",\r\n    \"zoom\": \"true\",\r\n    \"animate\": \"false\",\r\n    \"showDataTip\": \"false\",\r\n    \"datatipFormat\": \"false\",\r\n    \"legendCols\": \"56\",\r\n    \"legendRows\": \"56\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/chart/line",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"chart",
												"line"
											]
										}
									},
									"response": []
								},
								{
									"name": "create ScriptInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3aac6b8a-b150-4916-a530-44dafe6c1b59",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\n    \"description\": \"{{baseEntityPrefix}}_Script_Instance\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;           \\r\\n            import java.util.Map;\\r\\n            import java.math.BigDecimal;\\r\\n            import org.meveo.admin.exception.BusinessException;\\r\\n            import org.meveo.model.admin.User;\\r\\n            import org.meveo.model.crm.Provider;\\r\\n            import org.slf4j.Logger;\\r\\n            import org.slf4j.LoggerFactory;         \\r\\n            public class {{baseEntityPrefix}}_Script extends Script {             \\r\\n                private static final Logger log = LoggerFactory.getLogger({{baseEntityPrefix}}_Script.class);\\r\\n                public void execute(Map<String,Object> context) throws BusinessException{\\r\\n                    log.debug(\\\\\\\"{{baseEntityPrefix}}_Script creation script...\\\\\\\");\\r\\n                    log.debug(\\\\\\\"{{baseEntityPrefix}}_Script creation script.\\\\\\\");\\r\\n                }\\r\\n            }\",\n    \"executionRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ],\n    \"sourcingRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create Notifications",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b95581b8-7cf4-4dd7-8bea-80550f5aaada",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Notification1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create Webhook",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ea58fae-ef13-4855-93af-6b93a8480aea",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_WebHook1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\r\n    \"host\": \"localhost\",\r\n    \"port\": \"8080\",\r\n    \"page\": \"meveo/api/rest/\",\r\n    \"httpMethod\": \"HTTP_GET\",\r\n    \"username\": \"test.username\",\r\n    \"password\": \"test.password\",\r\n    \"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/webhook/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"webhook",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create EmailNotifications",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "27d36d98-86e6-4c2b-a92f-4ca8a013f44a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_EmailNotif1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\r\n    \"emailFrom\": \"OpenCell\",\r\n    \"emailToEl\": \"edward.legaspi@opencellsoft.com\",\r\n    \"subject\": \"Test Meveo Application\",\r\n    \"body\": \"Test Body\",\r\n    \"htmlBody\": \"HTML Body\",\r\n    \"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/email/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"email",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create Timer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06fe3e39-0939-4a64-b1e0-9c2f8749fcb5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Timer1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Timer_DESCP\",\r\n    \"hour\": \"1\",\r\n    \"minute\": \"10\",\r\n    \"second\": \"45\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"timerEntity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create JobInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "81703d4d-99df-4e4b-a4d8-f2119ae7501a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"jobTemplate\": \"ExportSubscriptionsJob\",\r\n    \"code\": \"{{baseEntityPrefix}}_ImpExp-Job1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Import-Export\",\r\n    \"timerCode\": \"{{baseEntityPrefix}}_Timer1\",\r\n    \"jobCategory\": \"IMPORT/EXPORT\",\r\n    \"followingJob\": \"ACCO_JOB\",\r\n    \"parameter\": \"param1\",\r\n    \"active\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create Filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "55f0aeaa-9fd7-4508-91f3-d5907b5dc429",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Filter1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Filter1_DESCP\",\r\n    \"shared\": \"false\",\r\n    \"inputXml\": \"<filter>\\n  <disabled>false</disabled>\\n  <appendGeneratedCode>false</appendGeneratedCode>\\n  <filterCondition class=\\\"andCompositeFilterCondition\\\">\\n    <filterConditionType>COMPOSITE_AND</filterConditionType>\\n    <filterConditions>\\n      <primitiveFilterCondition>\\n        <filterConditionType>PRIMITIVE</filterConditionType>\\n        <fieldName>startRatingDate</fieldName>\\n        <operator>>=</operator>\\n        <operand>date:01/09/2015</operand>\\n      </primitiveFilterCondition>\\n    </filterConditions>\\n  </filterCondition>\\n  <primarySelector>\\n    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\\n    <alias>p</alias>\\n    <displayFields>\\n      <field>code</field>\\n      <field>eventCode</field>\\n    </displayFields>\\n    <exportFields/>\\n    <ignoreIfNotFoundForeignKeys/>\\n  </primarySelector>\\n  <secondarySelectors/>\\n</filter>\"\r\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/filter/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"filter",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create Timer Hourly",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d064b69f-ec6f-4d40-bf1c-b7bdbf193a3e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"Hourly\",\r\n    \"description\": \"Hourly\",\r\n    \"hour\": \"*\",\r\n    \"minute\": \"0\",\r\n    \"second\": \"0\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"timerEntity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create GDPR JobInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0ff76664-f461-417e-a47e-4dfaabc876cd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"jobTemplate\": \"GDPRJob\",\n    \"code\": \"GDPR_Job\",\n    \"description\": \"GDPR_Job\",\n    \"jobCategory\": \"DWH\",\n    \"active\": \"false\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create Timer Daily - Midnight",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51b55cd2-ae98-4c73-a4c4-1b2834d5ac19",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"Daily-midnight\",\r\n    \"description\": \"Daily-midnight\",\r\n    \"hour\": \"23\",\r\n    \"minute\": \"59\",\r\n    \"second\": \"59\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"timerEntity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "create PaymentSchedule Job",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "056f8ab5-6689-436b-9f95-f9bd9962859f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"jobTemplate\": \"PaymentScheduleProcessingJob\",\r\n    \"code\": \"PaymentSchedule_Job\",\r\n    \"description\": \"PaymentSchedule_Job\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"active\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Setup TerminationReason",
							"item": [
								{
									"name": "update TERM_REASON_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e97c42ba-11b1-44f5-9f65-a1ca5041ff36",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TERM_REASON_1\",\r\n    \"description\": \"Agreement Reimbursement Charge\",\r\n    \"applyAgreement\": \"true\",\r\n    \"applyReimbursment\": \"true\",\r\n    \"applyTerminationCharges\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/terminationReason",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"terminationReason"
											]
										}
									},
									"response": []
								},
								{
									"name": "update TERM_REASON_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9e709b6-355a-4e06-8a87-437e3ce992ac",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TERM_REASON_2\",\r\n    \"description\": \"Reimbursement\",\r\n    \"applyAgreement\": \"false\",\r\n    \"applyReimbursment\": \"true\",\r\n    \"applyTerminationCharges\": \"false\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/terminationReason",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"terminationReason"
											]
										}
									},
									"response": []
								},
								{
									"name": "update TERM_REASON_3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b102c7c7-068e-49e2-9e0f-e8ac68104f7f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"TERM_REASON_3\",\r\n    \"description\": \"Charge\",\r\n    \"applyAgreement\": \"false\",\r\n    \"applyReimbursment\": \"false\",\r\n    \"applyTerminationCharges\": \"true\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/terminationReason",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"terminationReason"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Service workflow",
					"item": [
						{
							"name": "Service workflow - service multi activation",
							"item": [
								{
									"name": "SET_VARIABLES",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "364a1911-f06b-43b0-8c4c-c3505f474ed1",
												"exec": [
													"pm.globals.set(\"index\", 240);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c5c422d-2530-4d75-85ee-244dc24fa1d2",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "OPTIONS",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "https://postman-echo.com/",
											"protocol": "https",
											"host": [
												"postman-echo",
												"com"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Set service.allowMultiInstantiation=true - AUTHORIZATION_SUPERADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0137d7c-737a-48c0-91cb-e91a709d715a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.superpassword}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.superusername}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuc3VwZXJhZG1pbjpvcGVuY2VsbC5zdXBlcmFkbWlu"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"true\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/configurations/setProperty",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"configurations",
												"setProperty"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "538455ac-f4eb-45a9-826f-699324b2c481",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"subscriptionDate\": \"2016-12-01\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82151dcc-bf12-421f-92f6-562daad29b0a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service again - fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5cd12b57-d935-46e4-99bf-734129c47f4c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c95241b7-69ff-4a88-9d53-b91bc82c2dc1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
													"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_UA\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"INACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(3);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1481414400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1]).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services 1 and 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88e10989-38c7-4e11-8191-0a5ec9321732",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\t\"quantity\": \"1\",\r\n\t\t\t\t\"subscriptionDate\": \"2016-12-02\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n\t\t\t\t\"quantity\": \"2\",\r\n\t\t\t\t\"subscriptionDate\": \"2017-01-01\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription A1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "933096f8-16dc-4da2-bd5d-a9d9d9dfb6a7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
													"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_UA\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find service instance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "38369353-d92b-4e3b-96d3-69ab6d876603",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.serviceInstance.quantity).to.eql(1);",
													"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"serviceInstance"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												},
												{
													"key": "serviceInstanceCode",
													"value": "{{baseEntityPrefix}}_SERVICE1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Service1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b83ecff-a87f-4142-9d0e-f494d75c9580",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE1\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service 1 again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfa0c9fa-32ed-47e8-9fea-4b03b1b7237a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate service 1 again - change quantity and subscription date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22a5a70c-d601-4c07-8912-cbf700a4ba8f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"5\",\r\n                \"subscriptionDate\": \"2016-12-08\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription A2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3985108c-c8ba-4d7b-8d6e-080bab228eba",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationReason).to.eql(\"TERM_REASON_1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].quantity).to.eql(5);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].subscriptionDate).to.eql(1481155200000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Service1 A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "25686106-43d1-4c35-8e00-f92a8cb15df0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE1\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service 1 again 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e716b9f-b948-4b5f-8dd0-db5be505b95a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"11\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate service 1 again - no changes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e58ad9c9-2e65-487f-925c-44eeebf97a78",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription A3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb6ef1b0-8233-43f9-955d-f3aff28fd9f9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.globals.set(\"siid1\", jsonData.subscription.services.serviceInstance[0].id);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationReason).to.eql(\"TERM_REASON_1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.globals.set(\"siid2\", jsonData.subscription.services.serviceInstance[1].id);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.globals.set(\"siid3\", jsonData.subscription.services.serviceInstance[2].id);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].quantity).to.eql(5);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].subscriptionDate).to.eql(1481155200000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].terminationDate).to.eql(1481155200000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[2].terminationReason).to.eql(\"TERM_REASON_1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[3].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.globals.set(\"siid4\", jsonData.subscription.services.serviceInstance[3].id);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[3].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[3].quantity).to.eql(11);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[3].subscriptionDate).to.eql(1481414400000);",
													"});",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find service instance - fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4aa376d1-a298-4dd7-afc1-011c3a31bc9e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"More than one service instance with status [] was found. Please use ID to refer to service instance.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"serviceInstance"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												},
												{
													"key": "serviceInstanceCode",
													"value": "{{baseEntityPrefix}}_SERVICE1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find service instance by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9061464-dbb6-4306-9cb6-9d1563b42b44",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.serviceInstance.status).to.eql(\"TERMINATED\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceId={{siid1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"serviceInstance"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												},
												{
													"key": "serviceInstanceId",
													"value": "{{siid1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Service by id1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de698ef7-d9c0-44d4-afd1-b39a8cdef77e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"serviceIds\": [{{siid4}}],\r\n\t\"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"terminationReason\": \"TERM_REASON_1\",\r\n\t\"terminationDate\": \"2016-12-31\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription T1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "587eea81-f02e-4102-8244-a94265a8ab71",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[3].id).to.eql(pm.globals.get(\"siid4\"));",
													"    pm.expect(jsonData.subscription.services.serviceInstance[3].status).to.eql(\"TERMINATED\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Service2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26bef041-eb04-4177-b184-bcd9d02b0c5d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE2\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription T2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae8fe133-7c7b-445c-b2b4-eb99bc71c379",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Service workflow - service single activation",
							"item": [
								{
									"name": "Set service.allowMultiInstantiation=false - AUTHORIZATION_SUPERADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e154dbad-5866-4cea-93b9-b1cd7380606f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"false\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/configurations/setProperty",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"configurations",
												"setProperty"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16b1a50f-9b27-471a-b319-1358b0a25fb4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"code\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"subscriptionDate\": \"2016-12-01\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "800186e8-8b53-4ff5-9f37-f68942d6d05b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2016-12-01\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service again - fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c86b91f-d5d2-434b-8510-7cb7d885683b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"3\",\n                \"subscriptionDate\": \"2016-12-11\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription I",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "975ae581-d904-4d10-870e-8d2b3e6c155a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"INACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480550400000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services 1 and 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3f2123c-2b6f-48c2-b2e7-f05ffa4568dd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\t\"quantity\": \"1\",\r\n\t\t\t\t\"subscriptionDate\": \"2016-12-02\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n\t\t\t\t\"quantity\": \"2\",\r\n\t\t\t\t\"subscriptionDate\": \"2017-01-01\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription A1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d28d54fc-a6f8-497e-8294-afd976ca294f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.globals.set(\"siid1\", jsonData.subscription.services.serviceInstance[0].id);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
													"    pm.globals.set(\"siid2\", jsonData.subscription.services.serviceInstance[1].id);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find service instance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e056167e-11c8-43b9-9215-3d9ca948bccd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"serviceInstance"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
												},
												{
													"key": "serviceInstanceCode",
													"value": "{{baseEntityPrefix}}_SERVICE1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Instantiate Service 1 again - fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "da2f5743-92c1-4a47-a3f2-b22b68a40c3d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate service 1 again - fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b5d02a9-21d1-4390-9abb-7c93c5c8136b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of START_OBJECT token\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": {\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\"quantity\": \"5\",\r\n\t\t\t\"subscriptionDate\": \"2016-12-08\"\r\n\t\t}\r\n\t}\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find service instance by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "20be4b2b-0b79-471b-97ae-434660f855f4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL&serviceInstanceId={{siid1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"serviceInstance"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
												},
												{
													"key": "serviceInstanceId",
													"value": "{{siid1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Service by id1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e60362f6-fcf4-4293-96ad-98936e7cdc90",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceIds\": [\n        \"{{siid1}}\"\n    ],\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2016-12-31\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription T1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e04e7c94-a61e-4c4f-99b2-ab29d00398c1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Service 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1423041c-025f-4964-9add-fe2df54d96fc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE2\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n    \"terminationReason\": \"TERM_REASON_3\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription T2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1474b2cf-371c-415a-9481-49011eeb712d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Subscription workflow",
					"item": [
						{
							"name": "Terminate Subscription",
							"item": [
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "beb6be49-2b6f-4438-b0a8-c9b65f44f9c2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2016-03-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f8040fa-8117-4c13-87d9-d564b3ab8e87",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-02\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2015-04-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ade758a-c341-4f99-971e-68acdcde1c95",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SUB_WFL\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1456790400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1422835200000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1427846400000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SUB_WFL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SUB_WFL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aef0b5b2-1e00-4caf-b173-1d03dd77b528",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-04-30\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d1003011-6d44-4740-9507-a41b9f7d9371",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SUB_WFL\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1456790400000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1422835200000);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1427846400000);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SUB_WFL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_SUB_WFL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription - future termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8201d9b-a39b-48a9-b4ff-e9ea824802f6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\"\r\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services - future termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0bae7d6-1401-461f-b789-7831ffcba4c1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{today}}\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - future termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "60e08174-59d2-4ae3-8949-9bf30fd31644",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
													"    pm.expect(jsonData.subscription.renewalRule.initialTermType).to.eql(\"RECURRING\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription - future termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d44ffad9-0e0f-45c5-8fc4-bb815ac541df",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{terminationDate}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - future termination 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "30815f1b-8b74-48e9-b63e-ffd3d198ecb6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
													"    pm.expect(jsonData.subscription.subscribedTillDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
													"    pm.expect(jsonData.subscription.renewalRule.endOfTermAction).to.eql(\"TERMINATE\");",
													"    pm.expect(jsonData.subscription.renewalRule.terminationReasonCode).to.eql(\"TERM_REASON_1\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription - in-between-days termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "442a8bf6-4c22-44e4-97a2-6e9cd842ea53",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{10daysBefore}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services - in-between-days termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2cc7976e-6883-4c2e-a116-070049fa746d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"{{5daysBefore}}\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"{{2daysBefore}}\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - in-between-days termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7ce1635-ff72-410b-aefd-8296bfb670e4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_TERMINATION\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription - in-between-days termination - before Subscription's subscription date -KO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c3352c5-93fa-479f-b859-ac9468bc2e7b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Termination date can not be before the subscription date\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{20daysBefore}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription - in-between-days termination - on Subscription's subscription date - OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bd5e7c90-3563-4883-9d1a-55e58292c0c7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{10daysBefore}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - in-between-days termination 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b268e5b1-ed41-4326-a1fa-ac8254b6d3d9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_TERMINATION\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].terminationDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription - in-between-days 2 termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f13adfbb-fa97-44e3-85ac-035ac97d5cc6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{10daysBefore}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services - in-between-days 2 termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e089bf0-e03a-4d89-a3f8-21b0a3922dfd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{5daysBefore}}\"\n            },\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{2daysBefore}}\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - in-between-days 2 termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "193203bc-186d-43c8-b1a1-6c744668e1f2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_2_TERMINATION\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Subscription - in-between-days 2 termination - inbetween service's subscription date - OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e512c85-e363-488a-84b5-109b5c512e9c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{3daysBefore}}\"\r\n}\r\n\t",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - in-between-days 2 termination 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e912e159-93f2-4ae3-ae18-2fa2c4a1e465",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_2_TERMINATION\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"3daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(new Date(pm.globals.get(\"3daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].terminationDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription - future termination 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba0625a1-4710-4d08-909d-b192d5ed8aec",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\",\r\n    \"terminationDate\": \"{{terminationDate}}\",\r\n    \"terminationReason\": \"TERM_REASON_1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - future termination 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d70e921e-d4b1-48a0-9ae3-a532168867f9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION_3\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
													"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription - future termination 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a597674e-3092-453c-886c-14681dd92f49",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services - future termination 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "38d4bcb0-dcbe-4450-be6a-5e6ee72b45c3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{today}}\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update subscription - future termination 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb3a370c-1c08-4acf-be4c-fa9bb938e8ae",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\",\r\n    \"terminationDate\": \"{{terminationDate}}\",\r\n    \"terminationReason\": \"TERM_REASON_1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - future termination 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d2f45d9-891c-4a7d-8ebe-738626fc54c3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION_4\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
													"    pm.expect(jsonData.subscription.subscribedTillDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
													"    pm.expect(jsonData.subscription.renewalRule.initialTermType).to.eql(\"FIXED\");",
													"    pm.expect(jsonData.subscription.renewalRule.autoRenew).to.eql(false);",
													"    pm.expect(jsonData.subscription.renewalRule.endOfTermAction).to.eql(\"TERMINATE\");",
													"    pm.expect(jsonData.subscription.renewalRule.terminationReasonCode).to.eql(\"TERM_REASON_1\");",
													"    pm.expect(jsonData.subscription.renewalRule.extendAgreementPeriodToSubscribedTillDate).to.eql(false);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "ApplyOneShotChargeInstance",
							"item": [
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "55708168-9d44-4ff9-96e3-54d6321649aa",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2016-03-01\"\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f8334719-2385-4ee1-ae4a-0b98e084b272",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-02\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2015-04-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "applyOneShotChargeInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4df063bc-d3ed-46b1-97a4-678116acfd8a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"oneShotCharge\": \"{{baseEntityPrefix}}_OS1\",\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\n    \"createWallet\": false,\n    \"operationDate\": \"2016-04-06\",\n    \"quantity\": \"1\",\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description\",\n    \"amountWithoutTax\": \"11\",\n    \"amountWithTax\": \"13\",\n    \"criteria1\": \"criteria1\",\n    \"criteria2\": \"criteria2\",\n    \"criteria3\": \"criteria3\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/applyOneShotChargeInstance",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"applyOneShotChargeInstance"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription instantiate/activate service NOT in Offer and modify offer in subscription",
							"item": [
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be55dbda-f2aa-4663-97c5-efede498cff3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create service with min req Vals",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05aeed0f-7452-43d7-9012-9cc0e85ed161",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n    \"invoicingCalendar\": \"Multi period\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services with service not in Offer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78e4a47e-ed30-4c27-9e85-dc661eaf5418",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Service \"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SERVICE is not associated with Offer\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instanticate services with service not in Offer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b22951b9-04bc-4a12-811c-e2a188593d65",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"No offerServiceTemplate corresponds to \"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SERVICE\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2016-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update subscription with another offer - ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e48e921-33a4-4f2b-a219-e0213005e3f1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instanticate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b61a1ba4-113e-41c7-94cc-89a8b8c5c101",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2016-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update subscription with another offer - fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a59612f-f74f-4261-86b3-9961ee48a5ec",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Cannot change the offer of subscription once the services are instantiated\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Apply Product",
							"item": [
								{
									"name": "Create CFT Product 100",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "281f8df1-f828-49f3-9918-43d156c8a849",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ProductInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT Product 101",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "827461bb-2422-405a-935c-b96b731f47d5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ProductInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Product charge100",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e39da07e-fd85-4de1-af61-43a6900a7fec",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": false,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit 100 Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\":\"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalogManagement",
												"productChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Product 100",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51d713c3-2103-4b54-9315-fc533a3071e9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"description\": \"{{baseEntityPrefix}}_PRODUCT2 DESC\",\r\n    \"name\": \"{{baseEntityPrefix}}_PRODUCT100 NAME\",\r\n    \"productChargeTemplate\": [\r\n        {\r\n            \"code\": \"{{baseEntityPrefix}}_PC100\",\r\n            \"invoiceSubCategory\": \"SUB_DATA\",\r\n            \"disabled\": false\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalogManagement",
												"productTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create priceplan product 100",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ef2acbb1-70f0-470b-9291-fc732e06adf8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC100_PP\",\r\n    \"description\": \"price plan product 100\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"amountWithoutTax\": \"5\",\r\n    \"amountWithTax\": \"6\",\r\n    \"priority\": \"1\",\r\n    \"amountWithoutTaxEL\": \"#{mv:getInheritedCFValue(productInstance,'{{entityPrefix}}_{{index}}_CF_PROD_PRICE100')}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4150bb54-f43c-4d85-a7c9-af89d7ed5d31",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Apply product 2 to UA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdf15919-38dc-41cf-b587-61d4e03991c6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/applyProduct",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"applyProduct"
											]
										}
									},
									"response": []
								},
								{
									"name": "Apply product 2 to UA_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "356ff14c-0161-4b3d-9b5b-c858e95f03fc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/applyProduct",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"applyProduct"
											]
										}
									},
									"response": []
								},
								{
									"name": "Apply product 2 to SUB_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f64f00c9-7547-4476-bbec-15c049763eb3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_SUB\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/applyProduct",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"applyProduct"
											]
										}
									},
									"response": []
								},
								{
									"name": "Apply product 100 to UA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd3c510-647a-457c-bcb2-4aed1c80232e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"101.1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/applyProduct",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"applyProduct"
											]
										}
									},
									"response": []
								},
								{
									"name": "Apply product 100 to SUB_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22d11231-e460-4b4d-a77a-05426f09e6cf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_SUB\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"101.2\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/applyProduct",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"applyProduct"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT Product 100",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b93d8950-4929-4143-a9e5-742f0dbeeb81",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_PROD_PRICE100/ProductInstance",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customFieldTemplate",
												"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100",
												"ProductInstance"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT Product 101",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "23c685ea-12d9-4a48-863c-803a25b42338",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_PROD_PRICE101/ProductInstance",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customFieldTemplate",
												"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101",
												"ProductInstance"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1ddecee-0085-485d-8ac7-ead461ae0a5e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var body = ",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_PROD\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
													"    pm.expect(jsonData.subscription.productInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_PRODUCT2\");",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_PROD",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_PROD"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Update service instance",
							"item": [
								{
									"name": "Create CFT ServiceInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "04c6fa6c-d64c-4f1f-baa8-84fc5fd54244",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ServiceInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "95fd0f3a-6533-4ee6-89e1-84c50c46ca84",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2017-03-15\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f41e0ad3-f13b-45a5-8771-a16f9e056e12",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0b6f29b-ee46-4c2f-9719-f1260d10cd68",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_UPD_SERV_100\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a290d4a-3752-43f6-9a27-17733117600b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"endAgreementDate\": \"2017-03-29\",\n            \"customFields\": {\n                \"customField\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                        \"doubleValue\": \"201\"\n                    }\n                ]\n            }\n        },\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n            \"endAgreementDate\": \"2017-03-30\",\n            \"customFields\": {\n                \"customField\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                        \"doubleValue\": \"202\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/updateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"updateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription-Updated",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "054fbfd1-bda8-4f94-87aa-b04d10adde7f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_UPD_SERV_100\");",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(jsonBody.services.serviceInstance[0].quantity);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(jsonBody.services.serviceInstance[1].quantity);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
													"    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"services\": {\n        \"serviceInstance\": [\n            {\n                \"quantity\": 1,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 201\n                        }\n                    ]\n                }\n            },\n            {\n                \"quantity\": 2,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 202\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update services - change quantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3a32f6de-3706-4483-9513-308a9cfbf11d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"quantity\": \"5\"\n        },\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n            \"quantity\": \"7\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/updateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"updateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription - Updated quantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e2f877-88e1-4998-b0fd-24d804758fab",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.subscription.code).to.eql(jsonBody.code);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(jsonBody.services.serviceInstance[0].quantity);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(jsonBody.services.serviceInstance[1].quantity);",
													"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
													"    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"services\": {\n        \"serviceInstance\": [\n            {\n                \"quantity\": 5,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 201\n                        }\n                    ]\n                }\n            },\n            {\n                \"quantity\": 7,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 202\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CFT ServiceInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "60320e7e-2d00-4faf-8553-9c7d6c822852",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_SERV_UPD_100/ServiceInstance",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customFieldTemplate",
												"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100",
												"ServiceInstance"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update services - future termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7520a081-caac-4b0f-9945-af3d7c1b5605",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1c3e7c57-cfef-448d-bfb5-f98d153754b4",
												"exec": [
													"var today = new Date();\r",
													"var terminationDate = new Date();\r",
													"terminationDate.setMonth(today.getMonth() + 5);\r",
													"\r",
													"\r",
													"pm.globals.set(\"testCase.terminationDate\", terminationDate.toISOString().slice(0, 10));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"terminationDate\": \"{{testCase.terminationDate}}\",\n            \"terminationReason\": \"TERM_REASON_1\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/updateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"updateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find service instance - future termination",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37244a65-e144-45a7-bc24-ada5dd9e05ad",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.serviceInstances[0].code).to.eql(jsonBody.serviceInstances[0].code);",
													"    pm.expect(jsonData.serviceInstances[0].quantity).to.eql(jsonBody.serviceInstances[0].quantity);",
													"    pm.expect(jsonData.serviceInstances[0].subscriptionDate).to.eql(jsonBody.serviceInstances[0].subscriptionDate);",
													"    pm.expect(jsonData.serviceInstances[0].terminationDate).to.eql(new Date(pm.globals.get(\"testCase.terminationDate\")).getTime());",
													"    pm.expect(jsonData.serviceInstances[0].serviceRenewal).to.eql(jsonBody.serviceInstances[0].serviceRenewal);",
													"    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"actionStatus\": {\n        \"status\": \"SUCCESS\"\n    },\n    \"serviceInstances\": [\n        {\n            \"id\": 30,\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"description\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"subscriptionDate\": 1489536000000,\n            \"quantity\": 5,\n            \"serviceRenewal\": {\n                \"initialTermType\": \"FIXED\",\n                \"renewalTermType\": null,\n                \"initialyActiveFor\": null,\n                \"initialyActiveForUnit\": null,\n                \"calendarInitialyActiveFor\": null,\n                \"autoRenew\": false,\n                \"daysNotifyRenewal\": null,\n                \"endOfTermAction\": \"TERMINATE\",\n                \"terminationReasonCode\": \"TERM_REASON_1\",\n                \"renewFor\": null,\n                \"calendarRenewFor\": null,\n                \"renewForUnit\": null,\n                \"extendAgreementPeriodToSubscribedTillDate\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/serviceInstances?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"serviceInstances"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
												},
												{
													"key": "serviceInstanceCode",
													"value": "{{baseEntityPrefix}}_SERVICE1"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscribe to disable offer",
							"item": [
								{
									"name": "Disable Offer3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36fc7092-15d2-4210-abcb-abad45f80753",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{baseEntityPrefix}}_OFFER3/disable",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{baseEntityPrefix}}_OFFER3",
												"disable"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fd8b5e68-64e2-4b70-91c3-f1e3cabe4957",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Cannot subscribe to disabled offer\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Offer3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e1f566d8-6e5f-44d3-9b4e-2af62962fdb8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{baseEntityPrefix}}_OFFER3/enable",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{baseEntityPrefix}}_OFFER3",
												"enable"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Due date delay",
							"item": [
								{
									"name": "Find due date delay - bc",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e70847df-c3ca-4b33-8372-2bc5f367f9c8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData).to.deep.equal(jsonBody);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"actionStatus\": {\r\n        \"status\": \"SUCCESS\"\r\n    },\r\n    \"dueDateDelay\": {\r\n        \"delayOrigin\": \"BC\",\r\n        \"computedDelay\": 2,\r\n        \"delayEL\": null\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/dueDateDelay?subscriptionCode={{baseEntityPrefix}}_SUB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"dueDateDelay"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{baseEntityPrefix}}_SUB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42024194-9cdb-435f-9b93-ec9a0242dfdd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"CA_DELAY_{{index}}\",\r\n    \"description\": \"CA_DELAY_{{index}}\",\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"currency\": \"USD\",\r\n    \"language\": \"ENG\",\r\n    \"creditCategory\": \"PRO\",\r\n    \"dueDateDelayEL\": \"#{ba.customerAccount.auditable.created.date}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create BA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41a6008d-89ec-4b80-b093-4ad382b7d14a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"BA_DELAY_{{index}}\",\r\n    \"description\": \"BA_DELAY_{{index}}\",\r\n    \"customerAccount\": \"CA_DELAY_{{index}}\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"US\",\r\n    \"language\": \"ENG\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create UA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "748c87b6-4e2c-4676-9d98-0bc4edb569bd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"UA_DELAY_{{index}}\",\r\n    \"description\": \"UA_DELAY_{{index}}\",\r\n    \"billingAccount\": \"BA_DELAY_{{index}}\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ee147da-691b-4925-9365-38b2925a5215",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"DELAY_SUB_{{index}}\",\r\n    \"description\": \"DELAY_SUB_{{index}}\",\r\n    \"userAccount\": \"UA_DELAY_{{index}}\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"subscriptionDate\": \"2017-01-07\",\r\n    \"endAgreementDate\": \"2017-01-07\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find due date delay - ca",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae28e16b-4369-4935-bd3a-c1015725ed33",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.dueDateDelay.delayOrigin).to.deep.equal(jsonBody.delayOrigin);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"delayOrigin\": \"CA\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/dueDateDelay?subscriptionCode=DELAY_SUB_{{index}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"dueDateDelay"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "DELAY_SUB_{{index}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52d38f4a-897f-4c37-9f03-ad72f854b910",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"DELAY_SUB_{{index}}\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n                \"quantity\": \"5\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n                \"quantity\": \"10\",\r\n                \"subscriptionDate\": \"2017-05-15\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription age",
							"item": [
								{
									"name": "Create recurring",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "40139f37-48bc-4bf1-8411-96d5ee4ae8d7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC1\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Subscription Age\"\r\n        }\r\n    ],\r\n    \"calendar\": \"MONTHLY\",\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"durationTermInMonth\": \"4\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\":\"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Service",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "badfab35-b6f5-415e-9604-6e0a4309a67f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n    \"invoicingCalendar\": \"MONTHLY\",\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7d124824-b951-4247-823f-4eff3ace236b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"disabled\": false,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate ",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate "
											]
										}
									},
									"response": []
								},
								{
									"name": "Create priceplan recurring 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7dfcc211-5cb6-4ec9-a1da-6cb30848829d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE2\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"5\",\r\n    \"amountWithTax\": \"10\",\r\n    \"priority\": \"1\",\r\n    \"minSubscriptionAgeInMonth\": \"5\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create priceplan recurring 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c4aefa8-b918-4895-8c4c-412838b014f9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE2\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"15\",\r\n    \"amountWithTax\": \"30\",\r\n    \"priority\": \"1\",\r\n    \"maxSubscriptionAgeInMonth\": \"3\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create priceplan recurring",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58e6bb16-4aa0-4549-8628-5eb17216b545",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE1\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"2\",\r\n    \"amountWithTax\": \"4\",\r\n    \"priority\": \"2\",\r\n    \"minSubscriptionAgeInMonth\": \"1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0835b105-4a37-4993-a4c0-e6bb76e91aab",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"subscriptionDate\": \"2017-03-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5f6e427-4b7a-46da-9592-a707752b2b86",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate subscription 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00c75fcd-e7f8-4b7d-8828-7815a0f4a055",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2017-12-01\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa71f653-beca-4e21-a507-598f3687efb1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"subscriptionDate\": \"2017-07-01\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b988ebc-c219-48c4-af23-4c519c2c3b57",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-07-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate subscription 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02748aa2-e066-4e04-8181-cee4a82de7d2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2017-09-01\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Activate Subscription",
							"item": [
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e742f774-e1f6-4e9c-8d99-a079e41990d4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instanticate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fd43999a-7704-419e-9e84-08a9a234440f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05bcc759-b52d-42c4-844d-69735960f2b6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instanticate services 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "25cb744f-e764-499c-ac29-7a2324880160",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            },\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83179f42-d186-4574-bf00-c95dbeb4731e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{entityPrefix}}_{{index}}_SUB_ACTIVATION",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate subscription 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "464383ce-1111-4368-a967-8c505cbe61e5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{entityPrefix}}_{{index}}_SUB_ACTIVATION2",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription status notification",
							"item": [
								{
									"name": "Create script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e0b94bc-cece-45db-8881-2e0ff51332bf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"org.meveo.service.script.SubscriptionStatusUpdatedScript\",\r\n    \"description\": \"rating script\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\n\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.billing.Subscription;\\nimport org.meveo.model.billing.SubscriptionStatusEnum;\\nimport org.meveo.service.billing.impl.SubscriptionService;\\nimport org.meveo.service.script.Script;\\n\\nimport java.util.Map;\\n\\npublic class SubscriptionStatusUpdatedScript extends Script {\\n\\n    private SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface(\\\"SubscriptionService\\\");\\n\\n    @Override\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\n        log.info(\\\"<<<<<<< SubscriptionStatusUpdatedScript >>>>>>>>>>\\\");\\n        Subscription subscription = (Subscription) methodContext.get(\\\"subscription\\\");\\n        SubscriptionStatusEnum previousState = (SubscriptionStatusEnum) methodContext.get(\\\"previousState\\\");\\n        SubscriptionStatusEnum currentState = (SubscriptionStatusEnum) methodContext.get(\\\"currentState\\\");\\n        log.info(\\\"subscription.getCode() : \\\" + subscription.getCode());\\n        log.info(\\\"currentState : \\\" + currentState.name());\\n        log.info(\\\"previousState : \\\" + previousState.name());\\n        subscription.setDescription(\\\"from_\\\" + previousState + \\\"_to_\\\" + currentState);\\n        subscriptionService.update(subscription);\\n    }\\n} \"\r\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create notifications",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f596ce4-fd87-405e-933c-74d9daa84c1b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"STATUS_UPDATED\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.SubscriptionStatusUpdatedScript\",\r\n    \"scriptParams\": {\r\n        \"subscription\": \"#{event.entity}\",\r\n        \"previousState\": \"#{event.previousState}\",\r\n        \"currentState\": \"#{event.currentState}\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f46aeb01-f097-4c11-9e8e-25c57f0a2a95",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Instanticate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69c9755f-5ed1-42f5-9f11-17f7e16c037d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"instantiateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d5aa96df-ccfc-4241-af04-33939b0630fc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a90e6846-0c15-4472-842d-65347551a84e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.subscription.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.subscription.description).to.deep.equal(jsonBody.description);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\n    \"description\": \"from_CREATED_to_ACTIVE\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Notification",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43568afa-975d-4426-b399-ba17739295b3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9abd2376-5da8-44e9-984d-58e947aa3aa6",
								"type": "text/javascript",
								"exec": [
									"var today = new Date();",
									"var terminationDate = new Date();",
									"var days20before = new Date();",
									"var days10before = new Date();",
									"var days5before = new Date();",
									"var days3before = new Date();",
									"var days2before = new Date();",
									"terminationDate.setDate(today.getDate() + 1);",
									"days20before.setDate(today.getDate() - 20);",
									"days10before.setDate(today.getDate() - 10);",
									"days5before.setDate(today.getDate() - 5);",
									"days3before.setDate(today.getDate() - 3);",
									"days2before.setDate(today.getDate() - 2);",
									"",
									"pm.globals.set(\"index\", 192);",
									"pm.globals.set(\"today\", today.toISOString().slice(0, 10));",
									"pm.globals.set(\"terminationDate\", terminationDate.toISOString().slice(0, 10));",
									"pm.globals.set(\"20daysBefore\", days20before.toISOString().slice(0, 10));",
									"pm.globals.set(\"10daysBefore\", days10before.toISOString().slice(0, 10));",
									"pm.globals.set(\"5daysBefore\", days5before.toISOString().slice(0, 10));",
									"pm.globals.set(\"3daysBefore\", days3before.toISOString().slice(0, 10));",
									"pm.globals.set(\"2daysBefore\", days2before.toISOString().slice(0, 10));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0b14e585-b069-47d8-9834-df1aa76a0005",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Subscription with Inherited CF",
					"item": [
						{
							"name": "Tests",
							"item": [
								{
									"name": "Create CFT for User Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "61003d86-245b-4d6d-95f3-940151931d69",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"UserAccount\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"userAccountCF\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT for Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "454b4d37-16c9-472d-af4c-754391b93a2c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Subscription\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"subscriptionCF\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT for Subscription - Not Inherited",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "672f2a9b-59ea-4e73-9619-3331b910a68f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Subscription\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"subscriptionCFNotInherited\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User Account 3 - Temp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56f7aa45-2508-4f9b-8c81-540e957fbdf0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_3\",\n    \"externalRef1\": \"EXTREF1\",\n    \"externalRef2\": \"EXTREF2\",\n    \"name\": {\n        \"title\": \"MR\",\n        \"firstName\": \"Edward\",\n        \"lastName\": \"Legaspi\"\n    },\n    \"address\": {\n        \"address1\": \"adress1\",\n        \"address3\": \"adress3\",\n        \"zipCode\": \"21000\",\n        \"city\": \"Dijon\",\n        \"country\": \"France\"\n    },\n    \"subscriptionDate\": \"2016-03-10\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"stringValue\": \"UA_INHERITED\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9915290a-5ac4-407c-b0ca-4cef014ee6e1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"userAccount\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"subscriptionDate\": \"2015-02-01\",\n    \"endAgreementDate\": \"2015-05-01\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"stringValue\": \"SUB_INHERITED\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2519252d-ee3f-4d59-bdd6-a92d15de29c6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_InheritedCF\");",
													"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
													"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_UA_3_InheritedCF\");",
													"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1422748800000);",
													"    pm.expect(jsonData.subscription.endAgreementDate).to.eql(1430438400000);",
													"    pm.expect(jsonData.subscription.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_NOT_INHERITED\");",
													"    pm.expect(jsonData.subscription.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_NOT_INHERITED\");",
													"    pm.expect(jsonData.subscription.customFields.customField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.subscription.customFields.customField[0].stringValue).to.eql(\"subscriptionCFNotInherited\");",
													"    pm.expect(jsonData.subscription.customFields.customField[1].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_INHERITED\");",
													"    pm.expect(jsonData.subscription.customFields.customField[1].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_INHERITED\");",
													"    pm.expect(jsonData.subscription.customFields.customField[1].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.subscription.customFields.customField[1].stringValue).to.eql(\"SUB_INHERITED\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"userAccount\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"subscriptionCFNotInherited\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"SUB_INHERITED\"\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"UA_INHERITED\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_InheritedCF",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_SUB_InheritedCF"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT UA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7b280e03-267f-4d1d-a3e3-56a9049dfbcb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_UA_CF_INHERITED/UserAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_UA_CF_INHERITED",
												"UserAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT SUB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d37ed1b-a670-4919-98a9-890526ce08d7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_SUB_CF_INHERITED/Subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_SUB_CF_INHERITED",
												"Subscription"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT SUB 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f083ccea-14de-49a7-bf51-e4f3bac06471",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_SUB_CF_NOT_INHERITED/Subscription",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_SUB_CF_NOT_INHERITED",
												"Subscription"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Inherited CF in Account",
							"item": [
								{
									"name": "Create CFT for CUST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d3ff1049-73f5-4b38-9145-e06d6917ee02",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Customer\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT for BA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d338db38-940e-41e8-8ac5-e5dbcb9e7087",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"BillingAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT for CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f18be87-f5ca-4aff-8b50-9bc6129a489b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"CustomerAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT for UA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bd2117d-126b-48dd-9e21-46d41176a898",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"UserAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AccountHierarchy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca5ffb24-5e03-4da5-82f8-0e4e7f419ef6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{entityPrefix}}_432@manaty.net\",\n    \"paymentMethod\": \"2\",\n    \"customerId\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"sellerCode\": \"SELLER_FR\",\n    \"customerBrandCode\": \"DEFAULT\",\n    \"customerCategoryCode\": \"CLIENT\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"billingCycleCode\": \"CYC_INV_MT_1\",\n    \"titleCode\": \"MR\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"phoneNumber\": \"+102354749\",\n    \"address1\": \"Address1\",\n    \"address2\": \"Address2\",\n    \"zipCode\": \"75001\",\n    \"city\": \"Tunis\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "516b1b35-3c8a-460d-b9bb-7acb62082ece",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"customerCategory\": \"CLIENT\",\n    \"seller\": \"SELLER_FR\",\n    \"customerBrand\": \"DEFAULT\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueC1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueC2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create customer account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b0aad58-a3d0-46d3-a52e-5a44386c3709",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"customer\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"currency\": \"EUR\",\n    \"language\": \"FRA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueCA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueCA2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create billing account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "933e273c-b3a8-4e03-87d1-568cad45543e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2016-04-01\",\r\n    \"subscriptionDate\": \"2016-01-01\",\r\n    \"electronicBilling\": true,\r\n    \"status\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}@manaty.net\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueBA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueBA2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create user account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a68d0623-1625-4cae-9cda-802a85b11ad7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_UA\",\r\n    \"billingAccount\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"address1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"address3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\",\r\n    \"status\": \"ACTIVE\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueUA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueUA2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find customer account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c824976b-1b48-49eb-8099-f30f4bdb90bf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
													"    pm.expect(jsonData.customerAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
													"    pm.expect(jsonData.customerAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
													"    pm.expect(jsonData.customerAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueCA1\");",
													"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueCA2\");",
													"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
													"",
													"    ",
													"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
													"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
													"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueC1\");",
													"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueC2\");",
													"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\r\n                \"fieldType\": \"STRING\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueCA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueCA2\"\r\n                    },\r\n                    \"key\": {\r\n                        \"value\": \"MAT_1/MAT_2\"\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        \"inheritedCustomField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\r\n                \"fieldType\": \"STRING\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueC1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueC2\"\r\n                    },\r\n                    \"key\": {\r\n                        \"value\": \"MAT_1/MAT_2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CUST1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find billing account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3606e2c-3db1-497a-9e28-cf7c44c44401",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
													"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_BA\");",
													"    pm.expect(jsonData.billingAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
													"    pm.expect(jsonData.billingAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
													"    pm.expect(jsonData.billingAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueBA1\");",
													"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueBA2\");",
													"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
													"",
													"    ",
													"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
													"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
													"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueCA1\");",
													"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueCA2\");",
													"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_BA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueBA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueBA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueCA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueCA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CUST1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find user account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2f61678-5cb5-4e10-93da-04fdf13b38dc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
													"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_UA\");",
													"    pm.expect(jsonData.userAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
													"    pm.expect(jsonData.userAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
													"    pm.expect(jsonData.userAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueUA1\");",
													"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueUA2\");",
													"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
													"",
													"    ",
													"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
													"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
													"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
													"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueBA1\");",
													"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueBA2\");",
													"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_UA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n            },\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueUA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueUA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueBA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueBA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CUST1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9f0cace-3727-439d-a15d-edc69a0ca733",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount/{{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount",
												"{{entityPrefix}}_{{index}}_CUST1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Billing Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "61640a0d-435b-4cd2-9f64-e002d25e5b64",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount/{{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount",
												"{{entityPrefix}}_{{index}}_CUST1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete CustomerAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb62193d-ddce-4e89-88e3-5da7e245eb37",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/{{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"{{entityPrefix}}_{{index}}_CUST1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1ab3be5-6bc2-4e14-8616-adbe7ef5f212",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUST1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{entityPrefix}}_{{index}}_CUST1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT UA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7febccba-21f9-4233-ad6a-3ba2aa9cfb2f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/UserAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
												"UserAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT BA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf4edbfa-162f-4c9e-a468-d284eef0263f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/BillingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
												"BillingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2fd9808d-8fd2-4465-a657-ae5c46248345",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/CustomerAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
												"CustomerAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT CUST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc4c55dc-993f-479c-9501-d69eaf745004",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/Customer",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
												"Customer"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "571fc339-ea46-4be8-abb3-098d762838d0",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 460);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "22c84eb1-804e-4305-bb77-82eac67f224d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "EL expression tests",
					"item": [
						{
							"name": "Calling script from EL",
							"item": [
								{
									"name": "Create script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb699152-7c8f-45de-9984-09d6a4921608",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;           \\n            import java.util.Map;\\n            import java.math.BigDecimal;\\n            import org.meveo.admin.exception.BusinessException;\\n            import org.meveo.model.admin.User;\\n            import org.meveo.model.crm.Provider;\\n            import org.meveo.model.BusinessEntity;\\n            import org.slf4j.Logger;\\n            import org.slf4j.LoggerFactory;\\n            public class The{{baseEntityPrefix}}_ScriptEL extends Script {\\n                private static final Logger log = LoggerFactory.getLogger(The{{baseEntityPrefix}}_ScriptEL.class);\\n                public void execute(Map<String,Object> context) throws BusinessException{\\n                    log.debug(\\\"The{{baseEntityPrefix}}_ScriptEL called\\\");\\n                    context.put(Script.RESULT_VALUE, ((BusinessEntity)context.get(Script.CONTEXT_ENTITY)).getCode()!=null && ((BusinessEntity)context.get(Script.CONTEXT_ENTITY)).getCode().startsWith(\\\"EL_\\\"));                 \\n                }\\n            }\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT on Charge",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94d021bb-8d5b-45d5-a6b5-e538cb659626",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_CFT_EL_SCRIPT\",\n    \"description\": \"Field visible on entities with code starting 'EL_'\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ChargeTemplate\",\n    \"defaultValue\": \"KUKU\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": true,\n    \"applicableOnEl\": \"#{mv:executeScript(entity,'org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL', null, entity.auditable.creator)}\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Recuring Charge OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1731eaa0-698d-416f-87c0-cf69959df19b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC1\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"calendar\": \"MONTHLY\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate ",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate "
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove CFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6842993-059a-47d0-bcb8-91e00951662d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customFieldTemplateCode\": \"{{baseEntityPrefix}}_CFT_EL_SCRIPT\",\n    \"appliesTo\": \"ChargeTemplate\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/{{baseEntityPrefix}}_CFT_EL_SCRIPT/ChargeTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"{{baseEntityPrefix}}_CFT_EL_SCRIPT",
												"ChargeTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Script Instance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a17d557f-262d-41a1-80af-905a72245bf6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"removeScriptInstanceRequest\": \"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Charge filter expression",
							"item": [
								{
									"name": "Update recurring 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "24cc3d22-f994-4cfc-bed9-31edce024f66",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC3\",\n    \"description\": \"{{baseEntityPrefix}}_REC3\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"disabled\": false,\n    \"amountEditable\": false,\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\n        }\n    ],\n    \"calendar\": \"MONTHLY\",\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"inputUnitDescription\": \"1\",\n    \"ratingUnitDescription\": \"1\",\n    \"unitMultiplicator\": \"1\",\n    \"unitNbDecimal\": \"2\",\n    \"durationTermInMonth\": \"4\",\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": {\n        \"triggeredEdr\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\n            }\n        ]\n    },\n    \"filterExpression\": false\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cef3d95e-5371-47ad-9236-19f492dd7b27",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_2\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\n    \"subscriptionDate\": \"2018-01-01\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd837aa3-d2be-48f0-8e34-f51e372df218",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\n                \"quantity\": \"2\",\n                \"subscriptionDate\": \"2018-01-01\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e6aa1712-31b2-48b0-811a-4285dbab4420",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_CHARGE_FILTER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription"
											],
											"query": [
												{
													"key": "subscriptionCode",
													"value": "{{entityPrefix}}_{{index}}_CHARGE_FILTER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update recurring 3 - restore",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "23e57ff9-1dc1-4492-943f-81b38778afc9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC3\",\n    \"description\": \"{{baseEntityPrefix}}_REC3\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"disabled\": false,\n    \"amountEditable\": false,\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\n        }\n    ],\n    \"calendar\": \"MONTHLY\",\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"inputUnitDescription\": \"1\",\n    \"ratingUnitDescription\": \"1\",\n    \"unitMultiplicator\": \"1\",\n    \"unitNbDecimal\": \"2\",\n    \"durationTermInMonth\": \"4\",\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": {\n        \"triggeredEdr\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"recurringChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "InvoiceType - EL AO",
							"item": [
								{
									"name": "Create Service1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e6e149a1-5ba6-41cf-9483-9fc625390d26",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n    \"description\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_USAGE1\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Offer1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c90a5c74-b134-455e-8bbd-fd7477d74123",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"description\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"name\": \"{{baseEntityPrefix}}_EL_INV_OFFER1\",\n    \"disabled\": false,\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\"\n            }\n        }\n    ],\n    \"lifeCycleStatus\": \"ACTIVE\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create InvoiceType - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ee786ea-3be9-4dcc-9d1a-032c57462678",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_InvTypeElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_Description_Created\",\n    \"occTemplateCode\": \"INV_REB\",\n    \"occTemplateNegativeCode\": \"PAY_TIP\",\n    \"sequenceDto\": {\n        \"prefixEL\": \"Fact_\",\n        \"sequenceSize\": \"2\",\n        \"currentInvoiceNb\": \"1\"\n    },\n    \"sellerSequence\": {\n        \"SELLER_FR\": {\n            \"prefixEL\": \"SellFact_\",\n            \"sequenceSize\": \"9\",\n            \"currentInvoiceNb\": \"9\"\n        }\n    },\n    \"appliesTo\": [\n        \"COM\"\n    ],\n    \"matchingAuto\": false,\n    \"billingTemplateName\": \"BTN\",\n    \"billingTemplateNameEL\": \"DEMO_#{invoice.id}\",\n    \"occTemplateCodeEl\": \"#{invoice.invoiceNumber.startsWith(\\\"Fact_\\\")?\\\"INV_STD\\\":\\\"INV_REB\\\"}\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoiceType/createOrUpdate ",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoiceType",
												"createOrUpdate "
											]
										}
									},
									"response": []
								},
								{
									"name": "Create BillingCycle - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3da9aa22-a218-45ee-bf9d-f087320595f1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"dueDateDelay\": \"1\",\n    \"calendar\": \"MONTHLY\",\n    \"invoiceDateDelay\": \"1\",\n    \"invoiceTypeCode\": \"{{entityPrefix}}_{{index}}_InvTypeElAO\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billingCycle",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AccountHierarchy - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bd50e31-9597-4992-accb-d1834d659c3a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{entityPrefix}}_43@manaty.net\",\n    \"customerId\": \"{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"sellerCode\": \"SELLER_US\",\n    \"customerBrandCode\": \"DEFAULT\",\n    \"customerCategoryCode\": \"CLIENT\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"billingCycleCode\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"titleCode\": \"MR\",\n    \"firstName\": \"toto\",\n    \"lastName\": \"toc\",\n    \"phoneNumber\": \"+102354749\",\n    \"address1\": \"Address1\",\n    \"address2\": \"Address2\",\n    \"zipCode\": \"4050\",\n    \"city\": \"Los Banana\",\n    \"methodOfPayment\": [\n        {\n            \"paymentMethodType\": \"DIRECTDEBIT\",\n            \"bankCoordinates\": {\n                \"bankCode\": \"12456\",\n                \"branchCode\": \"23456\",\n                \"accountNumber\": \"34589324756\",\n                \"key\": \"45\",\n                \"iban\": \"1212\",\n                \"bic\": \"67789456\",\n                \"accountOwner\": \"Me and co\",\n                \"bankName\": \"Some bank\",\n                \"bankId\": \"78946\",\n                \"issuerNumber\": \"46789\",\n                \"issuerName\": \"Some issuer\",\n                \"ics\": \"5587\"\n            }\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subscription - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "71ad9115-08b8-489f-b9a7-f41a90866f79",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"userAccount\": \"UA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"offerTemplate\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"subscriptionDate\": \"2050-10-13\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create access - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abdb1cd8-f439-4f57-b675-3ceb0a371ef7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_INV_SUB_ACCESS_ElAO\",\n    \"subscription\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/access/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"access",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate service - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f600a8b6-66da-45ee-9e1b-52b92fb6acd3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2050-10-13\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Charge CDR - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3a51f7ab-7c3d-471b-aa50-b08ff99cd38a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "2050-10-13T00:00:00.000Z;1;{{entityPrefix}}_{{index}}_INV_SUB_ACCESS_ElAO;USAGE",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/mediation/chargeCdr",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"mediation",
												"chargeCdr"
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate invoice - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb188ac9-6c39-4002-9648-f6e4f04533cb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetCode\": \"BA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"targetType\": \"BILLINGACCOUNT\",\n    \"invoicingDate\": \"2050-10-15\",\n    \"firstTransactionDate\": \"2050-10-01\",\n    \"lastTransactionDate\": \"2050-10-31\",\n    \"generatePDF\": false\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/invoice/generateInvoice",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"invoice",
												"generateInvoice"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create DDRequestLotOp - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4bff962-e482-4009-8220-7c39b654874f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fromDueDate\": \"2050-01-01T00:00:00Z\",\n    \"toDueDate\": \"2051-01-01T00:00:00Z\",\n    \"ddrequestOp\": \"CREATE\",\n    \"status\": \"WAIT\",\n    \"ddRequestBuilderCode\": \"SEPA_STD\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "AO Job - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de46ade6-36c1-48c2-bd26-36798be64585",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"AO_Job\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "List Account operations - EL AO",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a611e841-1213-491f-a361-989faec7325c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"actionStatus\": {\r\n        \"status\": \"SUCCESS\"\r\n    },\r\n    \"paging\": {\r\n        \"fullTextFilter\": null,\r\n        \"filters\": {\r\n            \"customerAccount.code\": \"CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\"\r\n        },\r\n        \"fields\": null,\r\n        \"offset\": null,\r\n        \"limit\": null,\r\n        \"sortBy\": \"id\",\r\n        \"sortOrder\": \"DESCENDING\",\r\n        \"totalNumberOfRecords\": 2,\r\n        \"loadReferenceDepth\": 0\r\n    },\r\n    \"accountOperations\": {\r\n        \"accountOperation\": [\r\n            {\r\n                \"id\": 2,\r\n                \"dueDate\": 2549491200000,\r\n                \"type\": \"I\",\r\n                \"transactionDate\": 2549404800000,\r\n                \"transactionCategory\": \"DEBIT\",\r\n                \"reference\": \"Fact_03\",\r\n                \"accountCode\": \"411000000\",\r\n                \"accountingCode\": \"411000000\",\r\n                \"accountCodeClientSide\": \"445510000\",\r\n                \"amount\": 21.240000000000,\r\n                \"amountWithoutTax\": 18.000000000000,\r\n                \"taxAmount\": 3.240000000000,\r\n                \"matchingAmount\": 0E-12,\r\n                \"unMatchingAmount\": 21.240000000000,\r\n                \"matchingStatus\": \"O\",\r\n                \"code\": \"INV_STD\",\r\n                \"description\": \"Standard invoice sub-item\",\r\n                \"excludedFromDunning\": false,\r\n                \"orderNumber\": \"\",\r\n                \"paymentMethod\": \"DIRECTDEBIT\"\r\n            },\r\n            {\r\n                \"id\": 1,\r\n                \"dueDate\": 2549491200000,\r\n                \"type\": \"I\",\r\n                \"transactionDate\": 2549404800000,\r\n                \"transactionCategory\": \"DEBIT\",\r\n                \"reference\": \"Fact_02\",\r\n                \"accountCode\": \"411000000\",\r\n                \"accountingCode\": \"411000000\",\r\n                \"accountCodeClientSide\": \"445510000\",\r\n                \"amount\": 10.620000000000,\r\n                \"amountWithoutTax\": 9.000000000000,\r\n                \"taxAmount\": 1.620000000000,\r\n                \"matchingAmount\": 0E-12,\r\n                \"unMatchingAmount\": 10.620000000000,\r\n                \"matchingStatus\": \"O\",\r\n                \"code\": \"INV_STD\",\r\n                \"description\": \"Standard invoice sub-item\",\r\n                \"excludedFromDunning\": false,\r\n                \"orderNumber\": \"\",\r\n                \"paymentMethod\": \"DIRECTDEBIT\"\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/accountOperation/list?customerAccountCode=CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"accountOperation",
												"list"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "03f4d536-2b56-42aa-8ae8-1b2b884f142b",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 73);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5d937fbd-b8d5-4c5e-b3d4-4885b316988b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Entity Customization",
					"item": [
						{
							"name": "Reference Entity",
							"item": [
								{
									"name": "Create CFT with reference entity",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "32ea7175-3b4a-46d2-b629-a0b9937e5d28",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_RCF100\",\n    \"fieldType\": \"ENTITY\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"entityClazz\": \"org.meveo.model.crm.Customer\",\n    \"storageType\": \"SINGLE\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get reference entities - no wildcard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab54afad-c65f-4c2b-bb07-0ebccd47db48",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/listBusinessEntityForCFVByCode/?code={{entityPrefix}}_{{index}}_RCF100",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"listBusinessEntityForCFVByCode",
												""
											],
											"query": [
												{
													"key": "code",
													"value": "{{entityPrefix}}_{{index}}_RCF100"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get reference entities - with wildcard",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "10bfd4df-3851-4c7c-9372-319be192f4cb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/listBusinessEntityForCFVByCode/?code={{entityPrefix}}_{{index}}_RCF100&wildcode=2",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"listBusinessEntityForCFVByCode",
												""
											],
											"query": [
												{
													"key": "code",
													"value": "{{entityPrefix}}_{{index}}_RCF100"
												},
												{
													"key": "wildcode",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "List per entity instance - el evaluated",
							"item": [
								{
									"name": "Create CFT Offer visible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9478218e-bf73-4f17-94bf-f4a6eccaf1f9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"VISIBLE\",\n    \"applicableOnEl\": \"#{entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CFT Offer hidden",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df1d6623-6417-48cb-b79d-5da0abd199d9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_HIDDEN_100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_HIDDEN_100\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"HIDDEN\",\n    \"applicableOnEl\": \"#{!entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"field",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query visible CFT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1dc8abe7-fa73-486b-a211-c5f853f6f53f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.entityCustomization.field[0].code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.entityCustomization.field[0].description).to.deep.equal(jsonBody.description);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\":\"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"description\":\"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/listELFiltered?appliesTo=OfferTemplate&entityCode={{baseEntityPrefix}}_OFFER1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"listELFiltered"
											],
											"query": [
												{
													"key": "appliesTo",
													"value": "OfferTemplate"
												},
												{
													"key": "entityCode",
													"value": "{{baseEntityPrefix}}_OFFER1"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "List entity action",
							"item": [
								{
									"name": "Create script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b1796c30-2761-43f7-93d9-d3aac5567295",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"executeAction\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;\\n    \\n    import java.util.Map;\\n    import java.math.BigDecimal;\\n    import org.meveo.admin.exception.BusinessException;\\n    import org.meveo.model.admin.User;\\n    import org.meveo.model.crm.Provider;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n    import org.meveo.service.catalog.impl.OfferTemplateService;\\n    import org.meveo.model.catalog.OfferTemplate;\\n    \\n    public class ExecuteCustomAction_{{index}}_Script extends Script {\\n      \\n        private static final Logger log = LoggerFactory.getLogger(ExecuteCustomAction_{{index}}_Script.class);\\n        private OfferTemplateService offerTemplateService = (OfferTemplateService)getServiceInterface(\\\"OfferTemplateService\\\");\\n    \\n        public void execute(Map<String,Object> context) throws BusinessException{\\n            OfferTemplate offerTemplate = (OfferTemplate) context.get(Script.CONTEXT_ENTITY);\\n            offerTemplate.setDescription(\\\"action executed\\\");\\n        }\\n    }\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create custom action hidden",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f5276c0-b8da-4bd9-ae6f-975a743c6832",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_HIDDEN\",\n    \"description\": \"ExecuteCustomAction_{{index}}_HIDDEN\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    },\n    \"applicableOnEl\": \"#{!entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"action",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create custom action visible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4c10858-06ca-4d2d-8c88-da845f03d364",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"description\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    },\n    \"applicableOnEl\": \"#{entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"action",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "List visible CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3de0308d-0846-41ce-bbdc-9db2b97afed1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.entityCustomization.action[0].code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.entityCustomization.action[0].description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.entityCustomization.action[0].appliesTo).to.deep.equal(jsonBody.appliesTo);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"description\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"appliesTo\": \"OfferTemplate\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/listELFiltered?appliesTo=OfferTemplate&entityCode={{baseEntityPrefix}}_OFFER1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"listELFiltered"
											],
											"query": [
												{
													"key": "appliesTo",
													"value": "OfferTemplate"
												},
												{
													"key": "entityCode",
													"value": "{{baseEntityPrefix}}_OFFER1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete custom action hidden",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8109f107-8071-4309-a46c-6afa3f78814d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}_HIDDEN/OfferTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"action",
												"ExecuteCustomAction_{{index}}_HIDDEN",
												"OfferTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete custom action visible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cdc5e82f-46c2-4beb-b9a8-5f03aff3413a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}_VISIBLE/OfferTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"action",
												"ExecuteCustomAction_{{index}}_VISIBLE",
												"OfferTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4debb0a-1486-494e-b2e8-61791c4e26c6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.ExecuteCustomAction_{{index}}_Script",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Execute entity action",
							"item": [
								{
									"name": "Create script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8bcfb379-143e-441e-ab28-9c16040f6cbf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"executeAction\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;\\n    \\n    import java.util.Map;\\n    import java.math.BigDecimal;\\n    import org.meveo.admin.exception.BusinessException;\\n    import org.meveo.model.admin.User;\\n    import org.meveo.model.crm.Provider;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n    import org.meveo.service.catalog.impl.OfferTemplateService;\\n    import org.meveo.model.catalog.OfferTemplate;\\n    \\n    public class ExecuteCustomAction_{{index}}_Script extends Script {\\n      \\n        private static final Logger log = LoggerFactory.getLogger(ExecuteCustomAction_{{index}}_Script.class);\\n        private OfferTemplateService offerTemplateService = (OfferTemplateService)getServiceInterface(\\\"OfferTemplateService\\\");\\n    \\n        public void execute(Map<String,Object> context) throws BusinessException{\\n            OfferTemplate offerTemplate = (OfferTemplate) context.get(Script.CONTEXT_ENTITY);\\n            offerTemplate.setDescription(\\\"action executed\\\");\\n        }\\n    }\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create custom action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3f8cfe0c-dde9-48ba-9998-0237f15f0d3b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}\",\n    \"description\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"action",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Execute action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5f742d0-6c28-46ed-9482-238c157b10fd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"actionCode\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"entityCode\": \"{{baseEntityPrefix}}_OFFER3\"\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/action/execute/ExecuteCustomAction_{{index}}/OfferTemplate/{{baseEntityPrefix}}_OFFER3",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"action",
												"execute",
												"ExecuteCustomAction_{{index}}",
												"OfferTemplate",
												"{{baseEntityPrefix}}_OFFER3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c65cb49d-2cde-4f73-ab1d-4d76fae31152",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"    pm.expect(jsonData.offerTemplate.description).to.deep.equal(jsonBody.description);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"action executed\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{baseEntityPrefix}}_OFFER3",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{baseEntityPrefix}}_OFFER3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete custom action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14674466-d4c4-4edb-a9a2-2a831255cce5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"actionCode\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}/OfferTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"action",
												"ExecuteCustomAction_{{index}}",
												"OfferTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e5d73c2-bdae-46a0-8663-ae1b40a0b40f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"removeScriptInstanceRequest\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.ExecuteCustomAction_{{index}}_Script ",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script "
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc55f840-fb04-4ae3-a07a-7b040a15ef95",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 461);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4c2949bf-d66d-48e5-b3c9-f9f278ded6e4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Entity Security",
					"item": [
						{
							"name": "Setup Data",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5222bbc-6206-42ae-b7f0-d42774c13d12",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller SELLER_A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e38d9a9d-62c3-4e13-b703-6ad7333ec537",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3be25d13-0411-47d9-8ddd-21d2db69562f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller SELLER_B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "520c498a-93fd-4410-a194-9a6fef48a704",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0ca4d8a-7d23-40b7-a2a2-51af4b611edb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Seller SELLER_C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b32caf3-96b6-4937-ba70-2ec62adcfdc5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Account Hierarchy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06a70ca9-735d-4af4-a800-39fb7e6cb67d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellers\": {\n        \"seller\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n                \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n                \"currencyCode\": \"EUR\",\n                \"countryCode\": \"FR\",\n                \"languageCode\": \"FRA\",\n                \"parentSeller\": \"MAIN_SELLER\",\n                \"customers\": {\n                    \"customer\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n                            \"externalRef1\": \"1\",\n                            \"externalRef2\": \"1\",\n                            \"name\": {\n                                \"title\": \"MR\",\n                                \"firstName\": \"firstName\",\n                                \"lastName\": \"lastName\"\n                            },\n                            \"address\": {\n                                \"address1\": \"address1\",\n                                \"address2\": \"address2\",\n                                \"address3\": \"address3\",\n                                \"zipCode\": \"75001\",\n                                \"city\": \"Tunis\",\n                                \"country\": \"TN\"\n                            },\n                            \"customerCategory\": \"CLIENT\",\n                            \"customerBrand\": \"DEFAULT\",\n                            \"mandateIdentification\": \"M1\",\n                            \"mandateDate\": \"2016-02-28\",\n                            \"contactInformation\": {\n                                \"email\": \"{{entityPrefix}}@manaty.net\",\n                                \"phone\": \"1234\",\n                                \"mobile\": \"092152154716\",\n                                \"fax\": \"1234\"\n                            },\n                            \"customerAccounts\": {\n                                \"customerAccount\": [\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA1\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA2\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA3\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA2\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA2\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA4\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA4\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA5\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA5\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA6\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA6\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA3\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA3\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA7\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA7\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA8\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA8\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA9\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA9\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA2\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA2\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA4\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA4\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA11\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA11\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA12\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA12\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA13\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA13\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA5\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA5\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA14\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA14\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA15\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA15\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA16\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA16\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA6\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA6\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA17\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA17\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA18\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA18\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA19\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA19\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA3\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA3\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA7\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA7\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA21\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA21\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA22\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA22\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA23\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA23\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA8\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA8\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA24\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA24\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA25\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA25\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA26\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA26\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA9\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA9\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA27\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA27\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA28\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA28\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA29\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA29\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n                \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n                \"currencyCode\": \"USD\",\n                \"countryCode\": \"US\",\n                \"languageCode\": \"ENG\",\n                \"parentSeller\": \"MAIN_SELLER\",\n                \"customers\": {\n                    \"customer\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n                            \"externalRef1\": \"1\",\n                            \"externalRef2\": \"1\",\n                            \"name\": {\n                                \"title\": \"MR\",\n                                \"firstName\": \"firstName\",\n                                \"lastName\": \"lastName\"\n                            },\n                            \"address\": {\n                                \"address1\": \"address1\",\n                                \"address2\": \"address2\",\n                                \"address3\": \"address3\",\n                                \"zipCode\": \"75001\",\n                                \"city\": \"Tunis\",\n                                \"country\": \"TN\"\n                            },\n                            \"customerCategory\": \"CLIENT\",\n                            \"customerBrand\": \"DEFAULT\",\n                            \"mandateIdentification\": \"M1\",\n                            \"mandateDate\": \"2016-02-28\",\n                            \"contactInformation\": {\n                                \"email\": \"{{entityPrefix}}@manaty.net\",\n                                \"phone\": \"1234\",\n                                \"mobile\": \"092152154716\",\n                                \"fax\": \"1234\"\n                            },\n                            \"customerAccounts\": {\n                                \"customerAccount\": [\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB1\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB2\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB3\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB2\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB2\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB4\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB4\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB5\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB5\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB6\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB6\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB3\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB3\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB7\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB7\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB8\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB8\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB9\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB9\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB2\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB2\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB4\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB4\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB11\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB11\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB12\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB12\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB13\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB13\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB5\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB5\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB14\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB14\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB15\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB15\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB16\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB16\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB6\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB6\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB17\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB17\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB18\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB18\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB19\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB19\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB3\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB3\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB7\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB7\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB21\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB21\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB22\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB22\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB23\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB23\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB8\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB8\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB24\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB24\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB25\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB25\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB26\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB26\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB9\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB9\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB27\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB27\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB28\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB28\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB29\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB29\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/customerHierarchyUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"customerHierarchyUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create UserHierarchyLevels",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "887acff5-9ce4-4094-9e20-4d9e502d5211",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_Description1\",\n    \"orderLevel\": \"1\",\n    \"userHierarchyLevel\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2\",\n            \"description\": \"{{entityPrefix}}_{{index}}_Description 2\",\n            \"orderLevel\": \"1\",\n            \"userHierarchyLevel\": [\n                {\n                    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2_1\",\n                    \"description\": \"{{entityPrefix}}_{{index}}_Description 21\",\n                    \"orderLevel\": \"1\"\n                },\n                {\n                    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2_2\",\n                    \"description\": \"{{entityPrefix}}_{{index}}_Description 22\",\n                    \"orderLevel\": \"2\"\n                }\n            ]\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_3\",\n            \"description\": \"{{entityPrefix}}_{{index}}_Description 3\",\n            \"orderLevel\": \"2\"\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/hierarchy/userGroupLevel",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"hierarchy",
												"userGroupLevel"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User in level 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "297e2482-db4f-40fd-8151-0f46c2d2f056",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level1\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 1\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_1\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User in level 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "40693459-0dc1-40fe-98d4-41060dd16820",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level2\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User in level 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "71cb63b9-718e-44ca-af10-c30ccda6d33f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level21\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2.1\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2_1\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User in level 2.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0aa94b2-4466-4884-b6ca-0f6588c0e21c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level22\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2.2\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2_2\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create User in level 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "332d7118-a027-4e17-af9f-6fd5b8e1fd4b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level3\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n      \"administrateur\"\n    ],\n    \"firstName\": \"Level 3\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_3\"\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create UserRole with userSelfManagement permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "11812b27-cbae-47c2-b098-0d8090cb7e02",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{entityPrefix}}_{{index}}_ROLE_SELF_USER\",\n    \"description\": \"{{entityPrefix}}_{{index}}_ROLE_SELF_USER\",\n    \"permission\": [\n      {\n        \"permission\": \"userSelfManagement\",\n        \"name\": \"User Self Management\"\n      }\n    ]\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/role",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create offer template - no seller",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d14712fd-9d14-41ea-938b-de960a3d23c1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create offer template - seller A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6297a5db-aeb9-4542-ae72-71083df01156",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_A\"\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create offer template - seller B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1eecfcf7-a250-4393-a755-4273b2ca1925",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_B\"\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create offer template - seller C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37980224-0eab-478c-a157-5e3f82ff417c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_C\"\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create offer template - seller A,B,C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb5b2b89-4062-43f8-8f78-475957087c49",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_D\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_A\",\n        \"{{entityPrefix}}_{{index}}_SELLER_B\",\n        \"{{entityPrefix}}_{{index}}_SELLER_C\"\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set securedEntities=true - AUTHORIZATION_SUPERADMIN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76880168-a19b-4219-b57e-b9e9c19734d9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"property\": \"secured.entities.enabled\",\n    \"value\": \"true\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Seller Tests",
							"item": [
								{
									"name": "Restore User to default.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "afbb66d5-e534-40a6-83f1-f60443eb7a59",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa7d2725-2b18-4b86-a092-5e2bbf6106c9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "21ee8fc0-7d67-437d-af46-a54894e0ab30",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to MAIN_SELLER",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e9e44f3-f22a-4262-97b5-70092a671b8e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"MAIN_SELLER\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A still accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e255db25-9f2c-4468-89d5-5a9292e465dd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B still accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2bbb1201-955f-4290-9765-056a86b685f3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a67fd0db-674f-4c63-b415-678dc60353d9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A still accessible.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14bcfd2d-66fb-4dbb-a322-90a89ab4eac1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1f5ca99d-3d98-47b6-af49-ede6439b2eb4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller MAIN_SELLER not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1405d3dd-71e5-4659-851a-8b9f3bc9eb10",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode=MAIN_SELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "MAIN_SELLER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76f14c57-30b8-4b42-b87e-ff5aae601f90",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "72d34e90-3e0a-4602-a36a-d46c8226fb7a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B now accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9fe550ed-84f5-4549-a162-a8f5f24a846a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller MAIN_SELLER still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "741818fa-cf3b-4cc6-a00c-b5b70f5b9285",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode=MAIN_SELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "MAIN_SELLER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f7c3c86d-acbf-4f71-bcfe-075eecfbab3a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Customer Tests",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7826a90b-bae6-4088-b5bf-c57a18f53d9d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0c8ca0e7-28e6-4c30-aee7-4d5b1205b9c0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f18411b9-1a58-4c98-b16a-8fcbac767148",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTA only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb978725-d583-42b4-b397-e6515c0707e2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\n        \n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA still accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e0c70be-eae2-48dd-8dbf-7e3dc0a449d9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33148835-6f7e-441a-9730-d2316b05be4c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List Customer with Filter CUSTA is accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83d66401-75f2-4b07-9152-33d5dddcc1c2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(1);",
													"    pm.expect(jsonData.customers.customer[0].code).to.deep.equal(jsonBody.customer[0].code);",
													"    pm.expect(jsonData.customers.customer[0].description).to.deep.equal(jsonBody.customer[0].description);",
													"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customer\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"customerAccounts\": {\n                \"customerAccount\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTA|seller:{{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"list"
											],
											"query": [
												{
													"key": "query",
													"value": "code:{{entityPrefix}}_{{index}}_CUSTA|seller:{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List Customer with Filter CUSTB not accessible.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53da413a-5adb-426d-b85d-c63b41e8000e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customer\": [\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"list"
											],
											"query": [
												{
													"key": "query",
													"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e7ac5940-0c62-4c80-86cd-08bf4ccb5f1c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_A\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46598375-be9e-46df-87a2-5ce20849637c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTB only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42733dd3-22f0-4aa8-ac76-011ec14b6d59",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fe7c62c5-647b-4fec-a9cb-b936a8a00f94",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB now accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5efd8b3-f6cb-4ae6-ad39-4cc21095f540",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6dba65f-d25a-4902-ba71-b040a7293583",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_A\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f428f68-cc3b-431f-aa77-83f408c1d51e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List Customer with Filter CUSTA not accessible.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c691b508-2334-48d0-a670-2dd2b3420da7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customer\": [\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"list"
											],
											"query": [
												{
													"key": "query",
													"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List Customer with Filter CUSTB is accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83b1c344-0a4c-435a-9561-7abd7dc6098d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(1);",
													"    pm.expect(jsonData.customers.customer[0].code).to.deep.equal(jsonBody.customer[0].code);",
													"    pm.expect(jsonData.customers.customer[0].description).to.deep.equal(jsonBody.customer[0].description);",
													"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customer\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"customerAccounts\": {\n                \"customerAccount\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"list"
											],
											"query": [
												{
													"key": "query",
													"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f314449b-ed6f-4d66-996d-cb392b5ef745",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Customer Account Tests",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9220e3f6-e015-44be-9404-aab372e66881",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0a044dfc-74d3-4b0d-ae7d-b34d14a4aab8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2020b7be-a275-4130-a8c9-8d30c8a094c4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ed0b9f8-de10-4e60-bafd-5e700ba192cd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c2b6af6c-ccb8-4c72-9421-f758ee972407",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b10dc7e8-a50d-47cf-9591-471f84230f37",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fcfb8fe0-72fe-4399-ab6b-5beea4ee752f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
													"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
													"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
													"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17f3008b-feda-4742-880a-746cf74f08df",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 still accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4b828c5-b4fd-4a74-8991-5a00c82a6b57",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e1ef175d-99a8-4aeb-a21c-7c1b79518a7b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e8fc53a-efc3-4428-b220-fcef8610117c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "348febe9-1772-47b2-8926-961cb4a06bdb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 now accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fd6186f3-9da6-4819-bbbc-a97f647cb0a4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTA only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aac43b1a-a2ea-46c1-a12c-130cfa671b2e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 now accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05164ff8-c539-4dd2-a8b5-a08f01ca63c4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 not accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "31219a72-c255-45cb-a43f-b2e3cbded0d5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findCustomerAccount\": {\n        \"customerAccountCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_CAB1\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTB only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "59c9918c-be9f-49ab-853f-cee13d331f86",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 not accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69f98398-f9ec-4d94-b131-ec042050b3b1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findCustomerAccount\": {\n        \"customerAccountCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_CAA1\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 now accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d6f8151-5d51-4809-9213-40bf6ec5bfe5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a5d6ef2-2af6-45c8-bf2d-6d2e08f2ef2f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 now accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af9c4982-cd2e-4f99-9ebb-fa52d070fb14",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 not accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6d5cb4c4-417c-47ad-a4b5-d2415bdf56af",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findCustomerAccount\": {\n        \"customerAccountCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_CAB1\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b99b5656-e019-490b-8f86-d18d9314ef4b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b342bab-3448-46b0-87ea-53d90d73ce87",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "469c3cc6-ffeb-444e-9516-3375169dbf3e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findSeller\": {\n        \"sellerCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_SELLER_A\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "086ca751-0f29-4c1f-bbd8-8f0e0e274080",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findSeller\": {\n        \"sellerCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_SELLER_B\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAB1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "87a5c576-c4f0-47d0-9f87-ca5d7d6e58c1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 not accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94f70daa-0f31-4fb5-955d-f1f612e15d91",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findCustomerAccount\": {\n        \"customerAccountCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_CAA1\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 now accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b91032a-c2af-434e-ae02-866c3827920c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "99aa72ea-40e1-419e-b740-55476e702f8e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findCustomer\": {\n        \"customerCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_CUSTA\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a0e4ce4-e148-40f7-94be-e4c77c68263f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \"-xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n    \"-xmlns:ws\": \"http://ws.api.meveo.org/\",\n    \"soapenv:Body\": {\n      \"ws:findCustomer\": {\n        \"customerCode\": \"${#Project#entityPrefix}_${#TestSuite#index}_CUSTB\"\n      }\n    }\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c219c0d4-418c-4c07-badb-638dd6ba13fa",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be0b32ec-6beb-4b32-aad8-2fbb59174589",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTA and CAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "214a4695-8aee-40b0-8260-4a09db4ad3a8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 now accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b943ced-8b80-438d-b982-3b0645518228",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA with all its CustomerAccounts included",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82fafea6-4017-4fd9-a17a-fd3c1249bdeb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb217757-e778-47c6-827a-07d320b40ec1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Billing Account Tests",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2129d10-ebf7-4da7-9a2f-d6a3f2c5452a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "688c66f8-f506-47d0-aa3e-ee1349dd4902",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de9ca1dc-f747-4796-ab8e-a617b17424e2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7a10c78a-2390-4cc2-8b71-bebe1c611bbb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 still accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "658d69a8-d103-4860-bc98-5a6a90205214",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d0c6537-3a51-4c1a-8672-263936769269",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7671c98b-b751-411a-9f3b-7743bcf47e83",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26ac17d7-7d1d-42e2-8db5-ccd168d9492b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 now accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1fe95a72-43ab-4041-8e3f-1bd4c56d5a0e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTA only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "710e1b15-71f8-4707-aa69-b3452b234f92",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 now accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58015059-71f4-4149-a4b2-7260c64954fe",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 not accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f8d7aeb-0af5-4a13-9dd1-e5a221e7e73b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTB only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7eb0f43b-9f97-43c7-86b5-b4c64afd7edf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 not accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0108a005-9032-4ceb-9cec-0112a690b5fc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 now accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "beb72947-5445-4fdb-8183-962fcdd4675c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b5ca6a3-d188-40dd-bcb1-9295f9454e6d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 now accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb2a1d8f-5766-49b0-ae46-00bd841f4995",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 not accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "95be70fd-f5e8-4b0e-9af4-92cec20af527",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAB1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "278b8a03-a4ee-4f6d-a431-a67ea15bd633",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 not accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83a27be7-0d04-45de-b798-60608f93c657",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 now accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fec0bc42-1b4c-4b01-9441-e72d6fca6f0a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to BAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33d9631f-723d-4ed1-8132-35b251f86b7b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 now accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f12cf504-d535-4ce3-997e-625c1ac911b4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 not accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8beccbf9-1849-4694-a174-a1358bd56583",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7827e3f8-d8ac-488c-bda9-73d4d64c75bc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f06f899-2cf9-4ec9-99aa-2b4b47d631be",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7819b75e-061d-4041-8c5b-f710424e0d71",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d853bac9-7bd7-4f18-a2d0-d6c680d4537f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6244c127-6888-4305-a6ec-ac2fd5357b06",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0cbca197-c313-42c2-bc1d-1dc058a0e5d1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to BAB1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73cdbe4c-aacc-4147-be5b-fd588921c31a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 not accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2572c76-fdca-453d-9bf6-17286c633950",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 now accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "243ba33a-53b9-4a59-9e06-95a61cadb93b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "121cd628-9883-4193-978f-817f54ad0a22",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d537d569-a386-4a12-b347-ab2777cc6406",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abb0fb46-4de3-4060-84bf-4e7bfc1b0291",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9266adf3-b675-49b2-b40a-ee1452e966f6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b039b564-53a7-4a4b-84c2-e3db3ba7e5d7",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae9946de-0453-48a7-9a16-1739a5748dec",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAA1 and BAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "31d47b6c-0528-4b93-9864-7329e4af592d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 with all its BillingAccounts included",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2589e913-3001-4459-ab98-839a28a2bd27",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
													"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0be10dfd-9f04-4fb9-975d-39ea08ac7f12",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "User Account Tests",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67af4a9b-c342-4bfd-88a0-293ef1170e62",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4630ae7-8ecc-4ebd-bc18-600d18cef339",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "24e388bb-dcf8-4a26-95c0-7f5ca70d63b6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5d8f9512-82eb-45db-a50d-8a29c6b8cdac",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 still accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be375854-12f9-4117-8ce7-5330e3bfdba2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d42c1f7-058b-4e22-8534-200e43df3209",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab5cfa71-2658-4e1d-abdd-05e844fd03a2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9d27da1-1112-4c90-91dc-07729debcb58",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 now accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33c8e98e-17ba-4004-a88f-8263a5a16242",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTA only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "382d236a-c44f-46e5-b5bd-f4c3111b975c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 now accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d6cb964-2213-49be-8b39-199a568d382f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 not accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7de3578c-1491-43de-b76d-130fc23c3a66",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CUSTB only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63ebf25b-21c8-457e-89af-2afcc8d1f0c1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 not accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0cca9e01-80ee-46a9-a38c-bbdfca4ce34f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 now accessible again",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1157316b-44fa-468f-bcf4-dc64ca1579a9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "730d5e55-5d94-403b-9c20-823376587d06",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 now accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9db06b70-cb3a-4a43-b7bf-9673d031cfb2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 not accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d82d12c-a22e-43a2-8266-842372890470",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CAA1 only Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "47c4b49b-7cf5-4bdb-be1d-151a634e4637",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 not accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d056b20a-4c75-44c0-b4ea-10d6a84a8199",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 now accessible again.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0db93707-11dc-450f-81be-ee13a1796915",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to BAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9bbbf262-614d-4634-bbaf-a0eb55defa43",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 now accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "86bbcf7d-338f-47d8-bb72-29467cad8fd6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 not accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6bb9e4d-0b6e-4d33-8198-3e38fb75fd12",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to BAB1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e29cd24-3e52-433a-b595-f3c128763803",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 not accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b1284d2-0f7f-4406-8b1f-218876046448",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 now accessible again..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ac29404e-a3e7-407b-85ee-809b0fea20c4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to UAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2693c74b-f6b4-4cca-98a9-789f2bdb1303",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 now accessible again...",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "999f5e5f-c699-4d9d-9280-acb8a778dcda",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 not accessible again...",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3726bc78-7698-420a-ae8f-c3b07b5df5c9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6596e80b-732e-46db-a795-143c62a87d46",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc769887-7774-4576-9f64-5083704e29a6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7620b574-2ef1-4a6b-9513-eeb16af55e4e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e9b4c36-f6a8-4eb5-90ce-147d912add9f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16ec1682-594c-4a2e-ba3b-54c58abf7445",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42e79cc8-2b50-488d-b24b-0602cd523367",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b6f0c3de-7cb2-48ac-9104-515098fe52f5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5018972d-6e55-48b6-a52e-82493c9643b2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to UAB1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7be7bde7-2a4e-4efa-a4a3-e30598262490",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAA1 not accessible again...",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a7168d01-8df0-46b7-8e10-8e5d1b9835e8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find User Account UAB1 now accessible again...",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d80f0c8-9309-4935-9f09-5a9486c55d1f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"userAccount"
											],
											"query": [
												{
													"key": "userAccountCode",
													"value": "{{entityPrefix}}_{{index}}_UAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "216d783a-884c-4c38-81ad-e0252deb0885",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAB1 still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06290a82-5499-4261-9b0a-d3223d582e70",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAA1 still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ae731e4-4e09-45f5-b45b-4284d83d91ea",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer Account CAB1 still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f33c8c29-39b6-416f-9a91-7a964b7e6fb4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount"
											],
											"query": [
												{
													"key": "customerAccountCode",
													"value": "{{entityPrefix}}_{{index}}_CAB1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTA still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8416b3be-f49d-472a-8328-44210baad343",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Customer CUSTB still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f68a180d-23ac-401f-ae6a-c110df54e256",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_A still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "102024a9-9dd7-416a-9218-8b575e2358a3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Seller SELLER_B still not accessible",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58be54e4-4af5-4365-91df-52ead3df9cf4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to BAA1 and UAA1 only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5518fa46-a8a5-4770-905d-bc35cbc66159",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Billing Account BAA1 with all its UserAccounts included",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a90d233-c1f5-41e9-a2be-24134c641290",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
													"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											],
											"query": [
												{
													"key": "billingAccountCode",
													"value": "{{entityPrefix}}_{{index}}_BAA1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c2381d29-ac20-4013-a8b5-8fc6ab3932d9",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AccountHierarchy API Tests",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "54376048-d49b-472c-81d9-e4b38435c873",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "965d57fb-b25f-4fed-b183-30a5b99f18fa",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CRMAccountHierarchy fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a8704b7-f627-4fcb-b8b1-834614faf2e0",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a2e5cf93-a470-4566-bd07-a478564e8e0b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create CRMAccountHierarchy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d8e5a4c-2ce4-4816-9edb-6ed9c1bd21e6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7fe1c7e-ef94-4109-9ae8-7e93b7fb23d8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find CRMAccountHierarchy fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad557e66-a23c-45ff-a7f6-8473f91ac177",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "554104ac-b0db-4cee-ba1d-547690975c40",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find CRMAccountHierarchy.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "75be2af9-2164-4431-9e48-69cb53a75c65",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].billingAccounts.billingAccount[0].userAccounts.userAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"customerAccounts\": {\r\n        \"customerAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n                \"billingAccounts\": {\r\n                    \"billingAccount\": [\r\n                        {\r\n                            \"userAccounts\": {\r\n                                \"userAccount\": [\r\n                                    {\r\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68d2e694-69f0-474c-87d2-c2ff057c9ebf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CRMAccountHierarchy fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8592876-bb52-4e0c-9c6f-b703819e42f1",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"updateCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00e3f71e-9466-4887-826f-beaa79155543",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CRMAccountHierarchy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "677cc8da-1774-4dd0-bb77-8e54c663d40a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"updateCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only...",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc461193-7c56-4798-8026-f332afc67faf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find CRMAccountHierarchy fail.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e7998b0-ff0b-45ab-a0a6-8d7671318539",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only...",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "284cc152-0426-4afc-bc3a-c545cbb20e89",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find CRMAccountHierarchy..",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d2271ad-088f-45dd-be1b-033e53752d8d",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].billingAccounts.billingAccount[0].userAccounts.userAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"customerAccounts\": {\r\n        \"customerAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n                \"billingAccounts\": {\r\n                    \"billingAccount\": [\r\n                        {\r\n                            \"userAccounts\": {\r\n                                \"userAccount\": [\r\n                                    {\r\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to CRM-CUST only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0d98a38-b55f-47fa-ab40-6425dfca2823",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CRMAccountHierarchy.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9f1446a-6372-4580-9efe-da75bfb2f6c4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"updateCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Customer CRM_CUST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "950c9241-ff28-47c0-a874-78324b13d523",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"M\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_18@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_18@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CRM-CUST",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{entityPrefix}}_{{index}}_CRM-CUST"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ead86968-eb54-48c1-9abb-5baf84488bde",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Offer templates",
							"item": [
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "98212dd7-48e8-4525-9b36-14c8f72bf4c2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "List offerTemplates - show all",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "616908de-3859-419f-a575-b65bf23f1b75",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Body contains offer templates\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"list"
											],
											"query": [
												{
													"key": "limit",
													"value": "500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_A only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5d39c9d-2ee0-4d20-a4e6-6286f3c48c28",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "List offerTemplates - show A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "214573cf-b229-4ada-b0b1-37f53e0d794f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Body contains offer templates\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"list"
											],
											"query": [
												{
													"key": "limit",
													"value": "500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - no seller",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "54a2b39b-0652-47c4-aa60-9aab8d6af1d3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\",\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_NOSELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_NOSELLER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7fc01a5-b039-4436-9638-e4026bfe9be5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\",\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - B fails",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6d8ed6b0-b6ac-47c9-9663-9e20d56cdb83",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_B only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b3a161a9-bf1b-4928-91c5-bbfccc9d8e18",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "List offerTemplates - show B and C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5710fd78-6fbe-4614-9fd3-8ff74d886fdf",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Body contains offer templates\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"list"
											],
											"query": [
												{
													"key": "limit",
													"value": "500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - B 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efff797e-a884-48ac-bf43-0c34d433cb63",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5553c432-c2fd-4042-bc40-5879b77ca1a2",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - A  fails",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "825ff06a-80b4-44b8-bf66-5fe49d77c741",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update User to Allow Access to SELLER_C only",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a71b12f8-637c-4ef3-8e58-8aa17ac78d42",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "List offerTemplates - show C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94988986-1925-451c-a7ed-d6f2be6877a6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Body contains offer templates\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"list"
											],
											"query": [
												{
													"key": "limit",
													"value": "500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - C 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a43758e-62aa-4fcc-bd70-d29633268477",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
													"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - A  fails 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ea8a4d1-0316-471f-bd83-19822e65bff4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find offerTemplate - B fails 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6042f58b-be4f-4575-b352-cddb3a5afa1e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate"
											],
											"query": [
												{
													"key": "offerTemplateCode",
													"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1204fb3d-5fb3-47c4-b2d4-135f1c6cfabc",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "List offerTemplates by filter - show only C and A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "19659d90-3f06-4fad-a381-4cfd31e4659b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Body contains offer templates\", function () {",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(3);",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_D\\\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"filters\": {\r\n        \"inList sellers\": \"{{entityPrefix}}_{{index}}_SELLER_A,{{entityPrefix}}_{{index}}_SELLER_C\"\r\n    }\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/list",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "List offerTemplates by filter - do not show C and A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbab6505-204d-4b8f-9336-0330a41f747b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Body contains offer templates\", function () {",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(2);",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
													"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
													"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_D\\\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filters\": {\n        \"not-inList sellers\": \"{{entityPrefix}}_{{index}}_SELLER_A,{{entityPrefix}}_{{index}}_SELLER_C\",\n        \"like code\": \"{{entityPrefix}}_{{index}}_*\"\n    }\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/list",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Cleanup Data",
							"item": [
								{
									"name": "Set securedEntities=false",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18194ced-6f61-4153-bcd5-6b3ce2f55d3e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"property\": \"secured.entities.enabled\",\n    \"value\": \"false\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Customer CUSTA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cefdf84a-c689-43b0-9127-fd08d9811cb3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{entityPrefix}}_{{index}}_CUSTA"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Deleted Customer CUSTA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbc9ceba-c387-40b1-9945-875ac185c416",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Customer with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUSTA does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Customer CUSTB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9acdaed-bc1f-41c2-9601-2f4c54d423c8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer",
												"{{entityPrefix}}_{{index}}_CUSTB"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Deleted Customer CUSTB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec0e43d5-6eee-458b-afe4-9444dc812ea5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Customer with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUSTB does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customer"
											],
											"query": [
												{
													"key": "customerCode",
													"value": "{{entityPrefix}}_{{index}}_CUSTB"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove offerTemplate - no seller",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f73e9a52-7bda-44c4-b2ea-a1029858e01e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_NOSELLER",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{entityPrefix}}_{{index}}_OFFER_NOSELLER"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove offerTemplate - A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "54a8a3f4-498c-4310-9b38-cac4ba04119f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove offerTemplate - B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2803485e-6eb1-486e-9f7c-f14a5430124f",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove offerTemplate - C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bba82945-e44c-45ca-a3cc-e5535f23156a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove offerTemplate - D",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70b1df8e-5713-4b43-a31e-bd532fe47469",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_D",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"{{entityPrefix}}_{{index}}_OFFER_SELLER_D"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Seller SELLER_A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2eba7b18-4e5d-44eb-a468-d6c9343b864c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"{{entityPrefix}}_{{index}}_SELLER_A"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find deleted Seller SELLER_A",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08b2993a-45b1-490e-b1e2-a177e4e84ae5",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_A does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Seller SELLER_C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97b09cdd-97b4-4611-91cc-c94421337140",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"{{entityPrefix}}_{{index}}_SELLER_C"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Seller SELLER_B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aabf7bf1-0941-4914-9e94-9e87ef691166",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller",
												"{{entityPrefix}}_{{index}}_SELLER_B"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find deleted Seller SELLER_B",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b75aa903-c5fe-406f-b9dd-d12674c1b68a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_B does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_B"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find deleted Seller SELLER_C",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecb8fd75-e758-4ead-af6b-090ad6438b30",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_C does not exists.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_C",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"seller"
											],
											"query": [
												{
													"key": "sellerCode",
													"value": "{{entityPrefix}}_{{index}}_SELLER_C"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User to default",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bd66e90-759c-4f99-9c4d-0d2020c6a3db",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User level 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f54fb6fb-82cd-4717-93e0-a8c4488b8787",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level1\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user",
												"{{entityPrefix}}_{{index}}_Username.Level1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User level 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854bd53e-13e6-4756-88c6-46bc50dd8209",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level2\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level2",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user",
												"{{entityPrefix}}_{{index}}_Username.Level2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User level 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a8db413-4ca6-4ba4-ab3b-34969c7aeebb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql()",
													"    ;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level21\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level21",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user",
												"{{entityPrefix}}_{{index}}_Username.Level21"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User level 2.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3348f123-75fc-48d9-aa11-e59c007c9b64",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level22\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level22",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user",
												"{{entityPrefix}}_{{index}}_Username.Level22"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User level 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4c826d65-286e-45ba-aa8c-63f948b4da77",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level3\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level3",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"user",
												"{{entityPrefix}}_{{index}}_Username.Level3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove UserHierarchyLevel 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f31d80d3-15a9-4ffc-986b-400c46bcc43c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hierarchyLevelCode\": \"{{entityPrefix}}_{{index}}_LEVEL_1\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/hierarchy/userGroupLevel/{{entityPrefix}}_{{index}}_LEVEL_1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"hierarchy",
												"userGroupLevel",
												"{{entityPrefix}}_{{index}}_LEVEL_1"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e75cb0ba-469c-45ac-8921-079c84ffe4ee",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 34);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c79e35b6-4e04-493a-86bd-e5af4f2da9a2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Workflow executions",
					"item": [
						{
							"name": "Test data",
							"item": [
								{
									"name": "Create customer account for WF",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9517538a-293c-49eb-8dbd-4bbddae417cd",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"description\": \"testWF_CA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}@manaty.net\",\r\n        \"phone\": \"00123456789\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"mandateIdentification\": \"1234569548\",\r\n    \"mandateDate\": \"2016-03-10\",\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"status\": \"ACTIVE\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"customerAccount",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ScriptInstance for Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a5782049-44cf-4c25-85a3-4553e4b3de88",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"org.meveo.service.script.TheAction\",\r\n    \"description\": \"The Action Script\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\nimport java.util.Map;\\nimport java.math.BigDecimal;\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.crm.Provider;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\npublic class TheAction extends Script {  \\n  private static final Logger log = LoggerFactory.getLogger(TheAction.class);\\npublic void execute(Map<String,Object> context) throws BusinessException{\\nlog.debug(\\\"\\\\nTheAction Execution\\\\n\\\");\\ncontext.put(Script.RESULT_VALUE, \\\"A string response\\\");\\n}\\n}\",\r\n    \"executionRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ],\r\n    \"sourcingRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dunning WFType Script",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7924086-44e4-4075-aec3-c3e22d1a521c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"org.meveo.service.script.DunningWFTypeScript\",\r\n    \"description\": \"DunningWFTypeScript\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\n\\nimport java.util.ArrayList;\\nimport java.util.Date;\\nimport java.util.List;\\n\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.payments.CustomerAccount;\\nimport org.meveo.model.payments.DunningLevelEnum;\\nimport org.meveo.service.script.wf.WFTypeScript;\\n\\n\\npublic class DunningWFTypeScript extends WFTypeScript<CustomerAccount>{\\n\\n  public DunningWFTypeScript() {    \\n  }\\n  \\n  public DunningWFTypeScript(CustomerAccount e) {\\n    super(e);\\n  }\\n  @Override\\n  public List<String> getStatusList() {    \\n    List<String> values = new ArrayList<String>();\\n    for (DunningLevelEnum dunningLevelEnum : DunningLevelEnum.values()) {\\n      values.add(dunningLevelEnum.name());\\n    }\\n    return values;\\n  }\\n\\n  @Override\\n  public void changeStatus(String newStatus) {\\n    entity.setDunningLevel(DunningLevelEnum.valueOf(newStatus));\\n    entity.setDateDunningLevel(new Date());\\n  }\\n\\n  @Override\\n  public String getActualStatus() {    \\n    return entity.getDunningLevel().name();\\n  }\\n}\",\r\n    \"executionRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ],\r\n    \"sourcingRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Workflow with natif WFType",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06edb43c-3676-4bf7-9313-dca80d5d9b0c",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_DunningWorkflow\",\r\n    \"description\": \"Dunning workflow from class\",\r\n    \"enableHistory\": \"true\",\r\n    \"targetEntityClass\": \"org.meveo.admin.wf.types.DunningWF\",\r\n    \"initStatus\": \"R0\",\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R0\",\r\n            \"toStatus\": \"R1\",\r\n            \"conditionEl\": \"#{true}\",\r\n            \"description\": \"DESCRIPTION to R1\",\r\n            \"actionScriptCode\": \"#{mv:executeScript(entity,\\\"org.meveo.service.script.TheAction\\\",null)}\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Workflow with runTime WFType",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08d4d216-5460-4ebf-95f8-f9969ddeade8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_DunningRunTimeWF\",\r\n    \"description\": \"Dunning workflow from script\",\r\n    \"enableHistory\": \"true\",\r\n    \"targetEntityClass\": \"org.meveo.service.script.DunningWFTypeScript\",\r\n    \"initStatus\": \"R0\",\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R1\",\r\n            \"toStatus\": \"R2\",\r\n            \"conditionEl\": \"#{true}\",\r\n            \"description\": \"DESCRIPTION to R2\",\r\n            \"actionScriptCode\": \"#{mv:executeScript(entity,\\\"org.meveo.service.script.TheAction\\\",null)}\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "find & execute",
							"item": [
								{
									"name": "find workflow by entity",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d64d758-2acd-4615-bcf2-1f5509301496",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/findByEntity?baseEntityName=org.meveo.model.payments.CustomerAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"findByEntity"
											],
											"query": [
												{
													"key": "baseEntityName",
													"value": "org.meveo.model.payments.CustomerAccount"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Execute WF - NatitType",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4f5f964-2f9b-4d04-86d7-82c1ca57d07e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"baseEntityName\": \"org.meveo.model.payments.CustomerAccount\",\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"workflowCode\": \"{{baseEntityPrefix}}_DunningWorkflow\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/execute?baseEntityName=org.meveo.model.payments.CustomerAccount&entityInstanceCode=RS_FULL_{{index}}_WF_CA&workflowCode={{entityPrefix}}_DunningWorkflow",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"execute"
											],
											"query": [
												{
													"key": "baseEntityName",
													"value": "org.meveo.model.payments.CustomerAccount"
												},
												{
													"key": "entityInstanceCode",
													"value": "RS_FULL_{{index}}_WF_CA"
												},
												{
													"key": "workflowCode",
													"value": "{{entityPrefix}}_DunningWorkflow"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Execute WF - scriptType",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6f0e15a2-b927-4358-8e83-5f555a0a8fdb",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"baseEntityName\": \"org.meveo.model.payments.CustomerAccount\",\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"workflowCode\": \"{{baseEntityPrefix}}_DunningRunTimeWF\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/execute?baseEntityName=org.meveo.model.payments.CustomerAccount&entityInstanceCode=RS_FULL_{{index}}_WF_CA&workflowCode={{entityPrefix}}_DunningRunTimeWF",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"execute"
											],
											"query": [
												{
													"key": "baseEntityName",
													"value": "org.meveo.model.payments.CustomerAccount"
												},
												{
													"key": "entityInstanceCode",
													"value": "RS_FULL_{{index}}_WF_CA"
												},
												{
													"key": "workflowCode",
													"value": "{{entityPrefix}}_DunningRunTimeWF"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "wf history",
							"item": [
								{
									"name": "findHistory-no criteria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "27c671cd-6e0e-4b3c-9237-49d1a813465a",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											]
										}
									},
									"response": []
								},
								{
									"name": "findHistory-with criteria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db1719f4-a9f3-4c59-bb8b-64edd984d218",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"fromStatus\": \"R1\",\r\n    \"toStatus\": \"R2\"\r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=RS_FULL_{{index}}_WF_CA&fromStatus=R1&toStatus=R2",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "RS_FULL_{{index}}_WF_CA"
												},
												{
													"key": "fromStatus",
													"value": "R1"
												},
												{
													"key": "toStatus",
													"value": "R2"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8453e272-94f2-4f62-8434-bc0209ea8bce",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 34);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5211f119-d79a-486b-9fad-00a95fa0ed4b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Filter search and invoicing",
					"item": [
						{
							"name": "Data model",
							"item": [
								{
									"name": "Create subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c38f59d-2cdb-4588-93be-f6f237ec1382",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_CHARGE\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"subscriptionDate\": \"2016-02-01\",\n    \"endAgreementDate\": \"2017-02-01\"\n  }\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate services",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42bf485e-1e44-4f46-9631-041f5e2c3cc6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_CHARGE\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2016-02-01\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create RatedTransactions Filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b172f3e1-9930-41e6-a3ca-81cc68eada4b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_FilterRT\",\n    \"description\": \"Rated transactions for invoicing test\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\\n    <primarySelector>\\n    <targetEntity>org.meveo.model.billing.RatedTransaction</targetEntity>\\n    <alias>r</alias>\\n    <displayFields>\\n      <field>code</field>\\n      <field>description</field>\\n      <field>usageDate</field>\\n    </displayFields>\\n    <exportFields/>\\n    <ignoreIfNotFoundForeignKeys/>\\n  </primarySelector>\\n  <secondarySelectors/>\\n  <disabled>false</disabled>\\n  <appendGeneratedCode>false</appendGeneratedCode>\\n  <filterCondition class=\\\"andCompositeFilterCondition\\\">\\n    <filterConditionType>COMPOSITE_AND</filterConditionType>\\n    <filterConditions>\\n        <filterCondition class=\\\"andCompositeFilterCondition\\\">\\n            <filterConditionType>COMPOSITE_AND</filterConditionType>\\n            <filterConditions>\\n                  <primitiveFilterCondition>\\n                    <filterConditionType>PRIMITIVE</filterConditionType>\\n                    <fieldName>usageDate</fieldName>\\n                    <operator><![CDATA[<=]]></operator>\\n                    <operand>date:01/05/2016</operand>\\n                  </primitiveFilterCondition>\\n            </filterConditions>\\n        </filterCondition>\\n        <filterCondition class=\\\"andCompositeFilterCondition\\\">\\n            <filterConditionType>COMPOSITE_AND</filterConditionType>\\n            <filterConditions>\\n                <primitiveFilterCondition>\\n                    <filterConditionType>PRIMITIVE</filterConditionType>\\n                    <fieldName>code</fieldName>\\n                    <operator>=</operator>\\n                    <operand>{{baseEntityPrefix}}_REC1</operand>\\n                  </primitiveFilterCondition>\\n            </filterConditions>\\n        </filterCondition>\\n    </filterConditions>\\n  </filterCondition>\\n</filter>\"\n  }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/filter/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"filter",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Rated Transaction Job",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a58e75b-b904-4b7e-9dc3-8dcb644decb3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"RT_Job\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Search",
							"item": [
								{
									"name": "Search from filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "175448e7-4119-4bdc-b619-b66405d55aba",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"<code>\"+pm.environment.get(\"baseEntityPrefix\")+\"_OS1</code>\");",
													"    pm.expect(pm.response.text()).to.include(\"<code>\"+pm.environment.get(\"baseEntityPrefix\")+\"_REC1</code>\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_FilterRT\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/filteredList/listByFilter?from=0&size=100",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"filteredList",
												"listByFilter"
											],
											"query": [
												{
													"key": "from",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "08265124-ffac-4102-abac-e21d348b46db",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 456);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "76610fa2-4dc2-4324-8f70-697c6d49d6ac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Inbound Request Tests (Review)",
					"item": [
						{
							"name": "Inbound 1",
							"item": [
								{
									"name": "Create ScriptInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "238271b3-682e-4742-a889-9268fdb4b1c6",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"org.meveo.service.script.inbound.InboundServletScript\",\n    \"description\": \"InboundServletScript\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script.inbound;\\n\\nimport java.math.BigDecimal;\\nimport java.util.Map;\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.billing.WalletOperation;\\nimport org.meveo.service.script.Script;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\nimport org.meveo.model.notification.InboundRequest;\\n\\npublic class InboundServletScript extends Script {\\n\\n    private static final Logger log = LoggerFactory.getLogger(InboundServletScript.class);\\n\\n    public void execute(Map<String, Object> context) throws BusinessException {\\n        log.debug(\\\"InboundServlet script...\\\");\\n      \\n        InboundRequest inboundRequest = (InboundRequest) context.get(\\\"event\\\");\\n        inboundRequest.getHeaders().put(\\\"INBOUND_SCRIPT_VAR\\\", \\\"InboundServletScript\\\");\\n\\n    inboundRequest.setResponseBody(\\\"API test\\\");\\n\\n        if (inboundRequest.getParameters()!=null && inboundRequest.getParameters().get(\\\"returnStatus\\\")!=null){\\n            inboundRequest.setResponseStatus(Integer.parseInt(inboundRequest.getParameters().get(\\\"returnStatus\\\")));\\n        }\\n    }\\n}\",\n    \"executionRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ],\n    \"sourcingRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Notifications",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f37d40a-7a26-4524-98a6-74cb3d0aad71",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"INBOUND_SERVLET_NOTIF\",\n    \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\n    \"eventTypeFilter\": \"INBOUND_REQ\",\n    \"scriptInstanceCode\": \"org.meveo.service.script.inbound.InboundServletScript\",\n    \"elFilter\": \"#{event.parameters!=null and !event.parameters.containsKey('doNotFire')}\",\n    \"scriptParams\": {\n        \"event\": \"#{event}\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Fired=true",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbe20855-3144-492d-967a-dcd86626fc22",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Fired - change return status to 230",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18d5f260-266e-4ed0-abb8-6e8b38713c2e",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Fired=false",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "90c1c7f3-85de-4748-81db-bef4cd6eae14",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "List notification history",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0879fbaf-7367-46b1-a09f-ee55ae21ace3",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.notification).to.deep.equal(jsonBody.notification);",
													"    pm.expect(jsonData.entityClassName).to.deep.equal(jsonBody.entityClassName);",
													"    pm.expect(jsonData.nbRetry).to.deep.equal(jsonBody.nbRetry);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"notification\": \"INBOUND_SERVLET_NOTIF\",\n    \"entityClassName\": \"org.meveo.model.notification.InboundRequest\",\n    \"nbRetry\": \"0\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/notification/listNotificationHistory",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"notification",
												"listNotificationHistory"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "What is this for and what API is it using?",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a86d3030-5694-40cf-8b2f-06c179ed95bf",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"index\", 377);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7ebc723d-3cf4-4494-8a28-ae6fad0d70c9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Jobs",
					"item": [
						{
							"name": "Job Reporting",
							"item": [
								{
									"name": "Execute 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f588becf-605f-4cc1-a84e-ffd1f66b1de8",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.contain(\"\");",
													"});",
													"",
													"",
													"var jsonData = pm.response.json();",
													"pm.globals.set(\"job_id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"M_Job\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Execute 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "81492f07-800e-40e9-a7b8-ffad0a48c83b",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.contain(\"\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"M_Job\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find by code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52361e3c-2083-472c-81b3-7b75d0a37d51",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.jobExecutionResultDto.jobInstanceCode).to.deep.equal(jsonBody.jobInstanceCode);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"jobInstanceCode\": \"M_Job\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?code=M_Job",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "code",
													"value": "M_Job"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a6b8578-ab33-4de5-84fb-2bd3cef69da4",
												"exec": [
													"pm.test(\"Check Code\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Check Status\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
													"});",
													"",
													"pm.test(\"Check ErrorCode\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
													"});",
													"",
													"pm.test(\"Check Message\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.actionStatus.message).to.eql();",
													"});",
													"",
													"pm.test(\"Check Data\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonBody = JSON.parse(pm.request.body);",
													"",
													"    pm.expect(jsonData.jobExecutionResultDto.jobInstanceCode).to.deep.equal(jsonBody.jobInstanceCode);",
													"    pm.expect(jsonData.jobExecutionResultDto.id).to.deep.equal(jsonBody.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": {{job_id}},\n\t\"jobInstanceCode\": \"M_Job\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{job_id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{job_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# FullCRUD\r\n\r\nHere are migrated scenarios from Soap FullCRUD.\r\n\r\n## Table\r\n\r\n| Scenarios                        | State       |\r\n|----------------------------------|-------------|\r\n| Setup base data                  | OK          |\r\n| Service workflow                 | OK          |\r\n| Subscription workflow            | OK          |\r\n| Subscription with Inherited CF   | OK          |\r\n| EL expression tests              | OK          |\r\n| Custom Fields in Filters         | todo        |\r\n| Entity Customization             | OK          |\r\n| Entity Security                  | OK          |\r\n| Workflow executions              | OK          |\r\n| Filter search and invoicing      | todo        |\r\n| Inbound Request Tests            | todo        |\r\n| Jobs                             | todo        |\r\n| Reporting                        | todo        |\r\n| GDPR Erasure                     | todo        |\r\n| Remove base data                 | todo        |\r\n| Banking Calendar and Date status | todo        |",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ec338087-f483-4bd8-98dc-77fc53e68d68",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0f0eb977-ceff-44e5-b624-c52d8374cf5b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}