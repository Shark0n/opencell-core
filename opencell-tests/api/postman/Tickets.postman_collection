{
	"info": {
		"_postman_id": "569c3674-6bd7-4578-90e4-f8ec81e0d89e",
		"name": "Tickets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "#128 [API] Put /account/billingAccount : BA updating issue",
			"item": [
				{
					"name": "Create Country GB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e222e4e9-c837-4e74-8169-be88e449b8bc",
								"exec": [
									"pm.test('Status code is 200', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Successful request\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"countryCode\" : \"GB\",\r\n  \"currencyCode\" : \"GBP\",\r\n  \"languageCode\" : \"ENG\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/country/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"country",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a simple BA CF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ec3ab10-07b6-4800-a0f6-5757712d956c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"CF_BA_WHAT_EVER\",\r\n    \"description\": \"FieldAuditInterceptor.findDirty Test\",\r\n    \"fieldType\": \"ENTITY\",\r\n\t\"entityClazz\": \"org.meveo.model.admin.User\",\r\n    \"appliesTo\": \"BillingAccount\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": \"false\",\r\n    \"versionable\": \"false\",\r\n    \"triggerEndPeriodEvent\": \"false\",\r\n    \"allowEdit\": \"true\",\r\n    \"hideOnNew\": \"false\",\r\n    \"cacheValue\": \"false\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"customFieldTemplate",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CRMAccountHierarchy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36ff7f54-8ba1-4187-b8ab-d7d0347430b9",
								"exec": [
									"pm.test('Status code is 200', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Successful request\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"crmAccountType\" : \"C_UA\",\r\n  \"crmParentCode\" : \"SELLER_FR\",\r\n  \"code\" : \"Core_0001\",\r\n  \"description\": \"FieldAuditInterceptor.findDirty Test\",\r\n  \"name\" : {\r\n    \"title\" : \"MR\",\r\n    \"firstName\" : \"Olivier\",\r\n    \"lastName\" : \"DOUGLAS\"\r\n  },\r\n  \"jobTitle\": \"Ruler of the known Universe\",\r\n  \"vatNo\": \"FR12345678901234\",\r\n  \"registrationNo\": \"12354678901234\",\r\n  \"address\" : {\r\n    \"address1\" : \"3 rue passante\",\r\n    \"address2\" : \"BÃ¢timent A\",\r\n    \"address3\" : \"Bureau D42\",\r\n    \"zipCode\" : \"99999\",\r\n    \"city\" : \"METROVILLE\",\r\n    \"country\" : \"FR\"\r\n  },\r\n  \"contactInformation\" : {\r\n    \"email\" : \"Olivier.Lacoste@gmail.com\",\r\n    \"mobile\" : \"+33123546789\"\r\n  },\r\n  \"email\" : \"Olivier.Lacoste@gmail.com\",\r\n  \"language\" : \"FRA\",\r\n  \"paymentMethod\" : \"PAYPAL\",\r\n  \"customerCategory\" : \"CLIENT\",\r\n  \"currency\" : \"EUR\",\r\n  \"billingCycle\" : \"CYC_INV_MT_1\",\r\n  \"country\" : \"FR\",\r\n  \"electronicBilling\" : \"true\",\r\n  \"customFields\": null\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdateCRMAccountHierarchy",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"accountHierarchy",
								"createOrUpdateCRMAccountHierarchy"
							]
						}
					},
					"response": []
				},
				{
					"name": "check BA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "492f144f-2632-4439-8d6e-2fba25b8277a",
								"exec": [
									"pm.test('Status code is 200', function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Successful request\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
									"});",
									"",
									"pm.test(\"Checking BA language/country \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.billingAccount.country).to.eql('FR');",
									"});",
									"",
									"pm.test(\"Checking BA language/country \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.billingAccount.language).to.eql('FRA');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=Core_0001",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"billingAccount"
							],
							"query": [
								{
									"key": "billingAccountCode",
									"value": "Core_0001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update BA (Standard API)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aacaedb5-b2b1-4f56-b933-bb8e17de95a4",
								"exec": [
									"pm.test('Status code is 200', function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Successful request\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"code\": \"Core_0001\",\r\n     \"country\" : \"GB\",\r\n     \"language\" : \"ENG\",\r\n     \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_BA_WHAT_EVER\",\r\n                    \"fieldType\": \"ENTITY\",\r\n                    \"entityReferenceValue\": {\r\n                        \"classname\": \"org.meveo.model.admin.User\",\r\n                        \"code\": \"OPENCELL.ADMIN\"\r\n                    }\r\n                }\r\n            ]\r\n     }\r\n}"
						},
						"url": {
							"raw": "{{opencell.url}}/account/billingAccount",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"billingAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "check updated BA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d367370-cbce-4778-9c06-0cf7333cfe6e",
								"exec": [
									"pm.test('Status code is 200', function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Successful request\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
									"});",
									"",
									"pm.test(\"Checking BA language/country \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.billingAccount.country).to.eql('GB');",
									"});",
									"",
									"pm.test(\"Checking BA language/country \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.billingAccount.language).to.eql('ENG');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=Core_0001",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"billingAccount"
							],
							"query": [
								{
									"key": "billingAccountCode",
									"value": "Core_0001"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5303: CDR and mediation job refactoring",
			"item": [],
			"description": "# Introduction\r\n\r\nThis configuration file is designed to be a basis for all configurations provided by Opencell.\r\nIt merely contains most common general settings and a catalog of services implementing various rating models.\r\n\r\n# Configuring Opencell\r\n\r\nThere are 2 main ways for configuring ***Opencell***:\r\n* GUI (*Administration GUI* and *Marketing Manager*)\r\n* API (all Opencell configuration and operations can be performed using our extensive API library)\r\n\r\nThe most flexible way is using APIs which currently are available as **Rest** and **Soap**.\r\nThe **Soap** API are deprecated, so will won't mention them anymore.\r\n\r\n## Tools\r\n\r\nAny tools able to send HTTP requests will do.\r\nOne could even just script *curl* calls using shell script.\r\nBut of course, a more user friendly tool will make things easier.\r\n\r\nHere at ***Opencell***, we prefer **Postman** (https://getpostman.com):\r\n* it has a modern, friendly interface\r\n* Sets of API request can be organized into collections, themselves structured into a folder tree.\r\n* Collections can be exported as _JSON_ files or shared with other team members using collaboration features (payed version)\r\n* it allows to uses variables at different levels (collection, environement, global) and to execute *Javascript* scripts before and after executing API calls which allows great flexibility and API response testing.\r\n\r\n\r\n\r\n# Configuration documentation guidelines\r\n\r\nIn order to document our configuration, we make full used of the internal documentation capabilities of the Markdown fields on Postman Objects\r\n\r\n## Default template for *Collection* documentation\r\n\r\n## Default template for *Folder* documentation\r\n\r\n## Default template for *Request* documentation\r\n\r\n\r\n\r\n# Tips & guidelines\r\n\r\nHere follow a few tips for understanding this collection.\r\n\r\n## Collection pre-request script\r\n\r\n```javascript\r\npm.globals.set(\"timestamp.iso\", (new Date()).toISOString());\r\npm.globals.set(\"request.label\", pm.info.requestName);\r\n\r\nvar parts = pm.info.requestName.split(\"|\");\r\n\r\nfor(let i=0; i<parts.length; i++) {\r\n    pm.globals.set(\"request.label.\"+i, parts[i]);\r\n}\r\n```\r\n\r\n## Configuration guidelines\r\n\r\n## Entities\r\n\r\n<entity>_<project_code>_XXX\r\n\r\n### Custom Fields\r\n\r\nCF_<entity>_<project_code>_ XXX\r\n\r\n<entity> will be discarded for inherited\r\n\r\n#### Custom field visibility\r\n\r\nSE_<entity>_<project_code>_<markers>_XXX\r\n\r\n<markers> are used in CFT.applicableOnEl to show CFT on entities\r\n\r\n\r\n## Entity abbreviation\r\n\r\n| code  | entity                        |\r\n|:-----:|:------------------------------|\r\n|   P   | Provider                      |\r\n|   S   | Seller                        |\r\n|   C   | Customer                      |\r\n|  CA   | Customer Account              |\r\n|  BA   | Billing Account               |\r\n|  UA   | User Account                  |\r\n|  SU   | Subscription                  |\r\n|  AP   | Access Point                  |\r\n|  OF   | Offer Template                |\r\n|  SE   | Service Template and Instance |\r\n|  CH   | Charge Template               |\r\n|  PP   | Price Plan                    |\r\n|  CN   | Counter                       |\r\n| ICAT  | Invoice Category              |\r\n| ISCAT | Invoice SubCategory           |\r\n|  CAL  | Calendar                      |\r\n|  BC   | Billing Cycle                 |\r\n",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "{{access_token}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "40bb0211-32ae-4408-a0a1-98466547b806",
						"type": "text/javascript",
						"exec": [
							"var now = new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for (let i = 0; i < parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\" + i, parts[i]);",
							"",
							"    if (parts[i].indexOf(\"=\") != -1) {",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							"// Token auth",
							"var token = pm.variables.get(\"access_token\");",
							"//console.log(\"token=\"+token);",
							"",
							"if (!token || token === \"\") {",
							"    console.log(\"token is not defined\");",
							"    // Set some environment variables to use in the access token request. ",
							"    var client_id = pm.environment.get(\"client.id\");",
							"    var client_secret = pm.environment.get(\"client.secret\");",
							"    var opencell_url = pm.environment.get(\"opencell.base\");",
							"    var username = pm.environment.get(\"opencell.username\");",
							"    var password = pm.environment.get(\"opencell.password\");",
							"    var CryptoJS = require(\"crypto-js\")",
							"    // Encrypt the Client ID and Secret in base64 ",
							"    var rawStr = CryptoJS.enc.Utf8.parse(client_id + ':' + client_secret)",
							"    var client_cred = CryptoJS.enc.Base64.stringify(rawStr)",
							"    // Now let's get a new oauth2 access_token and set it in a variable ",
							"    pm.sendRequest(",
							"        {",
							"            url: opencell_url + '/auth/realms/opencell/protocol/openid-connect/token',",
							"            method: 'POST',",
							"            header:",
							"            {",
							"                //'Authorization': 'Basic ' + client_cred, ",
							"                'Cache-Control': 'no-cache',",
							"                'Content-Type': 'application/x-www-form-urlencoded'",
							"            }, body:",
							"            {",
							"                mode: 'urlencoded',",
							"                urlencoded:",
							"                    [",
							"                        {",
							"                            key: \"client_id\",",
							"                            value: client_id",
							"                        },",
							"                        {",
							"                            key: \"username\",",
							"                            value: username",
							"                        },",
							"                        {",
							"                            key: \"password\",",
							"                            value: password",
							"                        },",
							"                        {",
							"                            key: \"grant_type\",",
							"                            value: \"password\"",
							"                        },",
							"                        {",
							"                            key: \"client_secret\",",
							"                            value: client_secret",
							"                        },",
							"                    ]",
							"            }",
							"        },",
							"        function (err, response) {",
							"            //console.log(\"AUTH_RETURN_CODE\", err);",
							"            //console.log(\"AUTH_RESPONSE\", response);",
							"            const jsonResponse = response.json();",
							"            console.log(\"Saving token to variables\")",
							"            pm.variables.set(\"access_token\", jsonResponse.access_token);",
							"        }",
							"    );",
							"} else {",
							"    console.log(\"token already exists\");",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bc487889-d6d3-4621-81ae-bbddc1f0ac32",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"",
							"if (wait > 0) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#4280 - [discount|el] Discount plans must get access to invoice amount without tax before discount application",
			"item": [
				{
					"name": "create hierarchy ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f3078e4-59b2-4127-bfe4-623d78bef448",
								"exec": [
									"pm.test(\"Status code  is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{adminUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"sellers\": {\r\n               \"seller\": [{\r\n                  \"code\": \"Reseller12\",\r\n                  \"currencyCode\": \"EUR\",\r\n                  \"countryCode\": \"FR\",\r\n                  \"languageCode\": \"FRA\",\r\n                  \"customers\": {\r\n                     \"customer\":[ {\r\n                        \"code\": \"C1\",\r\n                        \"description\": \"C1\",\r\n                        \"name\": {\r\n                           \"title\": \"MR\",\r\n                           \"firstName\": \"C1\",\r\n                           \"lastName\": \"C1\"\r\n                        },\r\n                        \"address\": {\r\n                           \"address1\": \"rue De Versailles\",\r\n                           \"address2\": \"Zac De Valmy\",\r\n                           \"address3\": \"address3\",\r\n                           \"zipCode\": \"59650\",\r\n                           \"city\": \"Villeneuve d'ascq\",\r\n                           \"country\": \"France\"\r\n                        },\r\n                        \"customerCategory\": \"CLIENT\",\r\n                    \"customerBrand\": \"CLASSIC\",\r\n                        \"customerAccounts\": {\r\n                        \t\"customerAccount\": [\r\n                           {\r\n                              \"code\": \"CA1\",\r\n                              \"description\": \"CA1\",\r\n                              \"name\": {\r\n                                 \"title\": \"MR\",\r\n                                 \"firstName\": \"CA1\",\r\n                                 \"lastName\": \"CA1\"\r\n                              },\r\n                              \"address\": {\r\n                                 \"address1\": \"rue De Versailles\",\r\n                                 \"address2\": \"Zac De Valmy\",\r\n                                 \"address3\": \"address3\",\r\n                                 \"zipCode\": \"59650\",\r\n                                 \"city\": \"Villeneuve d'ascq\",\r\n                                 \"country\": \"France\"\r\n                              },\r\n                              \"currency\": \"EUR\",\r\n                              \"language\": \"FRA\",\r\n                             \r\n                                 \"methodOfPayment\": [{\r\n                                    \"paymentMethodType\": \"WIRETRANSFER\"\r\n                                 \r\n                              }],\r\n                              \"billingAccounts\": {\r\n                                 \"billingAccount\": [\r\n                                 \t{\r\n                                    \"code\": \"BA1\",\r\n                                    \"description\": \"BA1\",\r\n                                    \"name\": {\r\n                                       \"title\": \"MR\",\r\n                                       \"firstName\": \"BA1\",\r\n                                       \"lastName\": \"BA1\"\r\n                                    },\r\n                                    \"address\": {\r\n                                       \"address1\": \"rue De Versailles\",\r\n                                       \"address2\": \"Zac De Valmy\",\r\n                                       \"address3\": \"address3\",\r\n                                       \"zipCode\": \"59650\",\r\n                                       \"city\": \"Villeneuve d'ascq\",\r\n                                       \"country\": \"France\"\r\n                                    },\r\n                                    \"billingCycle\": \"CYC_INV_MT_1\",\r\n                                    \"country\": \"FR\",\r\n                                    \"language\": \"FRA\",\r\n                                    \"electronicBilling\": \"true\",\r\n                                    \"email\": \"maria.ab@opencellsoft.com\",\r\n                                    \"userAccounts\": {\r\n                                       \"userAccount\": [ {\r\n                                          \"code\": \"UA1\",\r\n                                          \"description\": \"UA1\",\r\n                                          \"name\": {\r\n                                             \"title\": \"Ms\",\r\n                                             \"firstName\": \"UA1\",\r\n                                             \"lastName\": \"UA1\"\r\n                                          },\r\n                                          \"address\": {\r\n                                             \"address1\": \"rue De Versailles\",\r\n                                             \"address2\": \"Zac De Valmy\",\r\n                                             \"address3\": \"address3\",\r\n                                             \"zipCode\": \"59650\",\r\n                                             \"city\": \"Villeneuve d'ascq\"\r\n                                          \r\n                                          }\r\n                           \r\n                                       \r\n                                 }  ]}\r\n\r\n}]\r\n}\r\n}]\r\n}\r\n}\r\n]\r\n}\r\n}\r\n]\r\n}\r\n}"
						},
						"url": {
							"raw": "{{opencell.url}}/account/accountHierarchy/customerHierarchyUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"accountHierarchy",
								"customerHierarchyUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "createOrUpdate discountPlan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fec9f27-2c6d-4ccb-a162-987c1d7811d7",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"DP_Test\",\r\n    \"description\": \"Discount planDP_Test\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"catalog",
								"discountPlan",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "createOrUpdate discountPlanItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4d826d5-7680-4e43-b70a-05eeefa7b896",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"DP_Item_Test\",\r\n    \"discountPlanCode\": \"DP_Test\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"PERCENTAGE\",\r\n    \"discountValue\": 50,\r\n    \"discountValueEL\":\" #{invoice.amountWithoutTax.doubleValue()<100?10:20}\",\r\n    \"customFields\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"catalog",
								"discountPlanItem",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instantiate discount plan ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d52c0f28-2e94-4d23-b568-301710d0fd59",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"BA1\",\r\n   \r\n\t\r\n\t\"language\" : \"FRA\",\r\n\t\"country\" : \"FR\",\r\n    \"discountPlanForInstantiation\": [\r\n        {\r\n            \"code\": \"DP_Test\",\r\n            \"startDate\": null,\r\n            \"endDate\": null,\r\n            \"defaultDuration\": null,\r\n            \"durationUnit\": null\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/account/billingAccount",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"billingAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "create subscription 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c2ce7a4-2296-4e15-951d-5076fa511642",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"SUB1\",\r\n    \"userAccount\": \"UA1\",\r\n    \"subscriptionDate\": \"{{date}}\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \r\n    \"status\": \"ACTIVE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"subscription",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instantiate and activate Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3e9862d-3294-4f4f-92ed-a7b743c4ea2d",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{adminPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{adminUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n \r\n  {\r\n         \r\n           \"subscription\": \"SUB1\",\r\n             \"servicesToActivate\" : {\r\n    \"service\": [  \r\n    { \r\n    \t  \"code\": \"SE_CLASSIC_OSS_UNIT\", \r\n    \t \"subscriptionDate\": \"2019-08-06T16:29:14.379Z\",\r\n    \t  \"quantity\": 1\r\n    \t},\r\n    \t{ \r\n    \t  \"code\": \"SE_CLASSIC_REC_FLAT\", \r\n    \t   \"subscriptionDate\": \"2019-08-06T16:29:14.379Z\",\r\n    \t  \"quantity\": 1\r\n    \t}\r\n    \t\r\n    \r\n    ] }\r\n    \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/subscription/activateServices",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"subscription",
								"activateServices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adc672a6-78f9-4483-b0c2-ec31ef997d22",
								"exec": [
									"\r",
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.globals.set(\"discount_percent\", res.generateInvoiceResultDto[0].categoryInvoiceAgregate[1].discountAggregate[0].discountPercent);\r",
									"pm.test(\"dicsount equals 20\", function () {\r",
									"    pm.expect(pm.globals.get(\"discount_percent\")).to.eql(20);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"billingAccountCode\" : \"BA1\",\r\n  \"invoicingDate\" : \"{{$timestamp}}000\",\r\n  \"lastTransactionDate\" : \"{{$timestamp}}999\",\r\n  \"generateXML\" : true,\r\n  \"generatePDF\" : true,\r\n  \"generateAO\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice/generateInvoice",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice",
								"generateInvoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "create subscription 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67dd98ce-6427-42a1-884e-23215b623094",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"SUB2\",\r\n    \"userAccount\": \"UA1\",\r\n    \"subscriptionDate\": \"2020-05-06T16:29:14.379Z\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \r\n    \"status\": \"ACTIVE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"subscription",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instantiate and activate Services 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d84ab4c-075c-465e-ac7c-1e5feec94988",
								"exec": [
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{adminPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{adminUsername}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n \r\n  {\r\n         \r\n           \"subscription\": \"SUB2\",\r\n             \"servicesToActivate\" : {\r\n    \"service\": [  \r\n    \r\n    \t{ \r\n    \t  \"code\": \"SE_CLASSIC_REC_FLAT\", \r\n    \t   \"subscriptionDate\": \"2020-05-06T16:29:14.379Z\",\r\n    \t  \"quantity\": 1\r\n    \t}\r\n    \t\r\n    \r\n    ] }\r\n    \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/subscription/activateServices",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"subscription",
								"activateServices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate invoice 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c270d7f-f58a-45f9-9a6d-b7428c97523d",
								"exec": [
									"\r",
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.globals.set(\"discount_percent_sub2\", res.generateInvoiceResultDto[0].categoryInvoiceAgregate[0].discountAggregate[0].discountPercent);\r",
									"pm.test(\"dicsount percent equals 10\", function () {\r",
									"    pm.expect(pm.globals.get(\"discount_percent_sub2\")).to.eql(10);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"billingAccountCode\" : \"BA1\",\r\n  \"invoicingDate\" : \"{{$timestamp}}000\",\r\n  \"lastTransactionDate\" : \"{{$timestamp}}999\",\r\n  \"generateXML\" : true,\r\n  \"generatePDF\" : true,\r\n  \"generateAO\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice/generateInvoice",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice",
								"generateInvoice"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#4895 - Create a fixed date calendar ",
			"item": [
				{
					"name": "FIXED_CALENDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc08e81a-e341-4e18-b3eb-1067ae5404d0",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(request.name + \" - Check Status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
									"});",
									"",
									"pm.test(request.name + \" - Check ErrorCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorCode).to.eql();",
									"});",
									"",
									"pm.test(request.name + \" - Check Message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"FIXED_CALENDAR_2020\",\n    \"description\":\"FIXED_CALENDAR_2020\",\n    \"calendarType\": \"FIXED\",\n     \"fixedDates\": [\n            \"01/01/2020 15:15 - 31/05/2020 15:15\"\n        ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/calendar/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"calendar",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE_FIXED_CALENDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "415a5981-6cb2-4d14-a143-bfa3150955ec",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{opencell.url}}/calendar/FIXED_CALENDAR_2020",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"calendar",
								"FIXED_CALENDAR_2020"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5064 - Add fileFormat attribute (CF) to FlatFile job and finish fileFormat Rest api",
			"item": [
				{
					"name": "File Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a014ebe-6a50-4913-bb37-16ed894f86a2",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test\",\n    \"fileTypes\": [\n        \"csv\"\n    ],\n    \"configurationTemplate\": \"test1\",\n    \"recordName\": \"record\",\n    \"inputDirectory\": \"imports/catalog/input\",\n    \"outputDirectory\": \"imports/catalog/output\",\n    \"rejectDirectory\": \"imports/catalog/reject\",\n    \"archiveDirectory\": \"imports/test\",\n    \"jobCode\": \"Catalog import job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ffc9fb3-6243-4e91-9047-b4316fb6596c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check File Format code\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.code).to.eql(\"test\");\r",
									"    });\r",
									"pm.test(\"Check File Format type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.fileTypes).to.eql([ 'csv' ] );\r",
									"    });\r",
									"\r",
									"    pm.test(\"Check configurationTemplate\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.configurationTemplate).to.eql(\"test1\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check recordName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.recordName).to.eql(\"record\");\r",
									"    });\r",
									"    \r",
									"      pm.test(\"Check input Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.inputDirectory).to.eql(\"imports/catalog/input\");\r",
									"    });\r",
									"\r",
									"       pm.test(\"Check output Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.outputDirectory).to.eql(\"imports/catalog/output\");\r",
									"    });\r",
									"       pm.test(\"Check reject Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.rejectDirectory).to.eql(\"imports/catalog/reject\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check archive Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.archiveDirectory).to.eql(\"imports/test\");\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update fileFormat",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77f3c656-0408-4cce-9a7e-15614ef1d7bf",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(request.name + \" - Check Status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
									"});",
									"",
									"pm.test(request.name + \" - Check ErrorCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorCode).to.eql();",
									"});",
									"",
									"pm.test(request.name + \" - Check Message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test\",\n    \"fileTypes\": [\n        \"txt\"\n    ],\n    \"configurationTemplate\": \"test2\",\n    \"recordName\": \"record\",\n    \"inputDirectory\": \"imports/catalog/input\",\n    \"outputDirectory\": \"imports/catalog/output\",\n    \"rejectDirectory\": \"imports/catalog/reject\",\n    \"archiveDirectory\": \"imports/test\",\n    \"jobCode\": \"Catalog import job\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46fd171c-4f71-444b-ba75-bea1781f3ab3",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.message).to.eql();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List file formats",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d313109d-1b0b-4864-a6e5-8c10a5aa54e7",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.message).to.eql();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete file format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76581fd0-e38d-4731-9f2b-cfdf0faa6c79",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "378d71c2-53a2-48a4-ab31-c9fc5e9c626c",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"FAIL\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"FileFormat with code=test does not exists.\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "File Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abe9dfe6-472d-441b-9570-45e0ba46460e",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test\",\n    \"fileTypes\": [\n        \"csv\"\n    ],\n    \"configurationTemplate\": \"test1\",\n    \"recordName\": \"record\",\n    \"inputDirectory\": \"imports/catalog/input\",\n    \"outputDirectory\": \"imports/catalog/output\",\n    \"rejectDirectory\": \"imports/catalog/reject\",\n    \"archiveDirectory\": \"imports/test\",\n    \"jobCode\": \"Catalog import job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a5e9dd8-2cc2-4676-aabc-322ea2e29029",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check File Format code\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.code).to.eql(\"test\");\r",
									"    });\r",
									"pm.test(\"Check File Format type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.fileTypes).to.eql([ 'csv' ] );\r",
									"    });\r",
									"\r",
									"    pm.test(\"Check configurationTemplate\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.configurationTemplate).to.eql(\"test1\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check recordName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.recordName).to.eql(\"record\");\r",
									"    });\r",
									"    \r",
									"      pm.test(\"Check input Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.inputDirectory).to.eql(\"imports/catalog/input\");\r",
									"    });\r",
									"\r",
									"       pm.test(\"Check output Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.outputDirectory).to.eql(\"imports/catalog/output\");\r",
									"    });\r",
									"       pm.test(\"Check reject Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.rejectDirectory).to.eql(\"imports/catalog/reject\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check archive Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.archiveDirectory).to.eql(\"imports/test\");\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5180 - [invoicing] Split invoice by payment method and comment",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Settings",
							"item": [
								{
									"name": "Provider/Seller/Account",
									"item": [
										{
											"name": "Update Provider",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "652398b3-242c-4eaf-94df-a0d8598b3c35",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{provider.code}}\",\n    \"description\": \"{{template.label}}\",\n    \"enterprise\": \"true\",\n    \"rounding\": 6,\n    \"roundingMode\": \"NEAREST\",\n    \"invoiceRounding\": 2,\n    \"invoiceRoundingMode\": \"NEAREST\",\n    \"invoiceConfiguration\": {\n        \"displaySubscriptions\": \"true\",\n        \"displayServices\": \"true\",\n        \"displayOffers\": \"true\",\n        \"displayEdrs\": \"true\",\n        \"displayProvider\": \"true\",\n        \"displayCfAsXML\": \"true\",\n        \"displayPricePlans\": \"true\",\n        \"displayDetail\": \"true\",\n        \"displayChargesPeriods\": \"true\",\n        \"displayFreeTransacInInvoice\": \"true\",\n        \"displayBillingCycle\": \"true\",\n        \"displayOrders\": \"true\"\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CF_PROV_PROJECT_VERSION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8cbeeff7-ff94-4bbb-94e8-2136fea800f8",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "db1de7ab-0103-4965-a297-02cb5a0f1f59",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label}}_{{$timestamp}}\",\r\n    \"description\": \"{{project.code}} {{project.type}} {{project.version}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"Provider\",\r\n    \"defaultValue\": \"{{timestamp.iso}}\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false,\r\n    \"guiPosition\": \"tab:Project versions:999\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "S|MAIN_SELLER|Opencell",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9778f84c-7587-4955-995a-e9d571bed7a0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\" : \"{{request.label.1}}\",\r\n\t\"description\" : \"{{request.label.2}}\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"countryCode\": \"FR\",\r\n    \"languageCode\": \"ENG\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": \"Esc. A\",\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": null\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"billing@opencellsoft.com\",\r\n        \"phone\": \"0123456789\",\r\n        \"mobile\": \"0678912345\",\r\n        \"fax\": null\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f4b922d9-b1b1-4369-975c-74f7037b5e13",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "fff6a18a-845e-4fe9-b31b-da9438f51c41",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Taxes",
									"item": [
										{
											"name": "Tax rates",
											"item": [
												{
													"name": "tax|code=TAX_20|desc=VAT 20%|percentage=20|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "c396e06f-6c2c-4f67-b0a2-1e770a165252",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																]
															},
															"listen": "test"
														},
														{
															"script": {
																"type": "text/javascript",
																"id": "87b484be-d20d-460c-ab79-63f7cf8b28b1",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=TAX_10|desc=VAT 10%|percentage=10|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "e971eda3-a69a-4dc4-9c0f-e4a607e79afe",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																]
															},
															"listen": "test"
														},
														{
															"script": {
																"type": "text/javascript",
																"id": "010f5c24-62c1-4b54-ad03-5fb21edb89ee",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														},
														"description": "Taux Ã  16% pour la PolynÃ©sie FranÃ§aise (taux nominal)"
													},
													"response": []
												},
												{
													"name": "tax|code=NO_TAX|desc=No tax|percentage=0|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "ab3af80b-8e3a-420a-9339-1a6d87b7e96f",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																]
															},
															"listen": "test"
														},
														{
															"script": {
																"type": "text/javascript",
																"id": "632840fd-d38f-4279-9668-56be9d7f5d10",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														},
														"description": "Permettra d'identifier qu'il faut enlever les lignes de taxe (diffÃ©rent d'une ligne avec Taxe Ã  0)"
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax categories (account)",
											"item": [
												{
													"name": "taxCat|code=STANDARD|desc=Standard accounts",
													"event": [
														{
															"script": {
																"id": "da296164-ee60-4733-a1c9-5f4104db4980",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															},
															"listen": "test"
														},
														{
															"script": {
																"id": "08978aa9-aeea-46a7-85dc-5ff1cd28fef7",
																"exec": [
																	""
																],
																"type": "text/javascript"
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxCat|code=NO_TAX|desc=Exempted accounts",
													"event": [
														{
															"script": {
																"id": "2802b36f-22c0-486a-9bc3-026fa26841f1",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															},
															"listen": "test"
														},
														{
															"script": {
																"id": "f6b603a2-ca80-49f5-ad18-d1cd64ca432b",
																"exec": [
																	""
																],
																"type": "text/javascript"
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax classes (charge)",
											"item": [
												{
													"name": "taxClass|code=STANDARD|desc=Standard products",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "93b026ee-2920-4cb4-b587-ab5881ee7e4f",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d3f948f5-512d-44fa-a414-96e0f67ff868",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=NO_TAX|desc=Products with no VAT",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "367e202b-526f-45a4-82c1-ab6880885e26",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "71b968a8-cedc-43cf-9b63-7602dda3df5d",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax mapping",
											"item": [
												{
													"name": "taxMapping|priority=100|taxCat=NO_TAX|taxClass=|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "0463477d-d1c5-4570-938f-e54368826c38",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "31e50c55-3ce9-4cbc-b632-33bad18048aa",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=STANDARD|taxClass=NO_TAX|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f5ccaf47-d0a5-4357-ab21-063b91022d06",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "6553052a-1d1f-4f3b-872e-dad5cabf93cd",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=1|taxCat=STANDARD|taxClass=STANDARD|buyer=|tax=TAX_20",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "66deb86a-c1e5-495a-93dc-5c7518df0e15",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "765cc17c-12b6-4a14-bb61-c27f48a2d31f",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=STANDARD|taxClass=STANDARD|buyer=US|tax=TAX_10",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4a728173-0ae0-4876-b9f6-7b9e59e1e9bd",
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "915d9aea-0c2b-4edf-87e2-12df22532d4e",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account",
									"item": [
										{
											"name": "custCat|code=CLIENT|taxCat=STANDARD",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14051d49-f474-474d-a0c7-251f69e4270e",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"Client\",\r\n    \"taxCategoryCode\": \"STANDARD\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Notifications",
									"item": [
										{
											"name": "SCRIPT|CreateAccess|Creates an access on Subscription creation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af734173-0e1e-40f5-b9ed-427f73f3e403",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
															"tests[\"is.compiled\"] = jsonData.compilationErrors.length === 0;"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Date;\r\nimport java.util.Map;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.admin.User;\r\nimport org.meveo.model.billing.Subscription;\r\nimport org.meveo.model.mediation.Access;\r\n\r\nimport org.meveo.service.medina.impl.AccessService;\r\nimport org.meveo.service.script.Script;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class CreateAccess extends Script {    \r\n    private static final Logger log = LoggerFactory.getLogger(CreateAccess.class);        \r\n\r\n    private AccessService accessService = (AccessService) getServiceInterface(\"AccessService\");\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context={}\", context);\r\n\r\n        Subscription subscription = (Subscription) context.get(\"entity\");\r\n        if(subscription == null){\r\n            throw new BusinessException(\"subscription is null\");\r\n        }\r\n        log.debug(\"subscription={}\", subscription);\r\n\r\n        Access access = new Access();\r\n        access.setSubscription(subscription);\r\n        access.setAccessUserId(subscription.getCode());\r\n        access.setStartDate(null);\r\n        access.setEndDate(null);\r\n        accessService.create(access);\r\n    }\r\n}]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "notifSubscriptionCreate",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
														],
														"id": "70164703-6b56-41d2-9dfe-cac5a2e531f9"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"updatedCode\": null,\r\n    \"code\": \"subscriptionCreate\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.CreateAccess\",\r\n    \"scriptParams\": {\r\n      \"entity\": \"#{event}\"\r\n    },\r\n    \"counterTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice",
									"item": [
										{
											"name": "script|invoicing.SplitInvoice|Splits invoice by RT.parameter2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "637b8924-98f2-4b39-8a71-191da7b54a12",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.invoicing;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\n\r\n/**\r\n * Dispatch RTs\r\n * DUMMY\r\n * @author schambrin\r\n */\r\npublic class SplitInvoice extends org.meveo.service.script.Script {\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n    \t// DUMMY\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "bc|code=CYC_INV_MT_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c64461b2-e719-41a5-afd8-f124dda19bd7",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"Monthly 1st\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"1\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"MONTHLY\",\n  \"scriptInstanceCode\": \"org.meveo.service.script.invoicing.SplitInvoice\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Catalog",
							"item": [
								{
									"name": "script|rating.LogWalletOperation|Logs the WalletOperation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8eab6f80-5380-4e50-a72e-c3258555d67b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class LogWalletOperation extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogWalletOperation.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"wo={}\",new WalletOperationDto(wo));\r\n        \tlog.info(\"wo.tax={}\", wo.getTax());\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "counter|code=CN_USG_ACCUM_C|type=USAGE|target=CUST|calendar=MONTHLY|desc=Accumulates quantities on the Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6ca9ccd1-e727-466e-b119-2e6108d197d8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"counterTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "cft|code=CF_SE_DOUBLE_VERSION|target=ServiceTemplate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97bd35d1-d86e-4fb1-a4aa-33842f63a610",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:SCH:0;field:1\"\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customFieldTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "cft|code=CF_SE_DOUBLE_VERSION|target=ServiceInstance",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2984b987-f894-40a1-97a0-5bb5ef23baf2",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": true,\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:SCH:0;field:1\"\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customFieldTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "charge|CH_USG_UNIT|Charge unit 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "28595575-e201-4218-b72e-58ecae1e5219",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{request.label.2}}\",\n    \"invoiceSubCategory\": \"CMP_DATA\",\n    \"taxClassCode\": \"STANDARD\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"UNIT\",\n    \"priority\": 10\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"usageChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "pp|code=PP_USG_UNIT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7417dec5-9370-4eea-ba84-e6084aac27e5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"eventCode\": \"CH_USG_UNIT\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "se|code=SE_USG_UNIT|desc=Unit usage service",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d50a211-f07a-4636-874e-0afe8d360b74",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "28b03bba-fdb9-4c9e-8312-82396ee164de",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_DOUBLE_VERSION\",\n                \"valuePeriodPriority\": 1,\n                \"doubleValue\": 3.0\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": null\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "of|code=OF",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6924e31c-725c-4b7c-a5fd-f2cd52b762d7",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{template.label}} offer {{$timestamp}}\",\n    \"disabled\": false,\n    \"lifeCycleStatus\": \"ACTIVE\",\n    \"bomCode\": null,\n    \"offerTemplateCategoryCode\": null,\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"SE_USG_UNIT\",\n                \"customFields\": null\n            },\n            \"mandatory\": false,\n            \"incompatibleServiceTemplate\": []\n        }\n    ],\n    \"customFields\": null\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Account",
					"item": [
						{
							"name": "C|Jean|Bonnot",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a43aedd-a019-448f-a842-e5a36df7e818",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4631b2b3-8e03-4f71-8816-69e57b3117dd",
										"exec": [
											"var parts  = pm.variables.get(\"request.label\").split(\"|\");",
											"var index  = pm.globals.get(\"index\");",
											"",
											"if (typeof index === 'undefined') {",
											"    console.log(\"index global varaible is undefined -> setting to \\\"00\\\"\");",
											"    pm.globals.set(\"index\",\"00\");",
											"    index = \"00\";",
											"}",
											"",
											"var prefix = pm.variables.get(\"template.code\")+\"-\";",
											"var suffix = \" \" + prefix + index;",
											"",
											"switch(parts.length) {",
											"    case 1:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[0] + suffix);",
											"        pm.globals.set(\"account.firstname\", \"\");",
											"        pm.globals.set(\"account.lastname\", \"\");",
											"        break;",
											"    case 2:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + suffix);",
											"        pm.globals.set(\"account.firstname\", \"\");",
											"        pm.globals.set(\"account.lastname\", \"\");",
											"        break;",
											"    case 3:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + \" \" + parts[2] + suffix);",
											"        pm.globals.set(\"account.firstname\", parts[1]);",
											"        pm.globals.set(\"account.lastname\", parts[2]);",
											"        break;",
											"    case 4:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + suffix);",
											"        pm.globals.set(\"account.firstname\", parts[2]);",
											"        pm.globals.set(\"account.lastname\", parts[3]);",
											"        break;",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"crmAccountType\" : \"C_UA\",\r\n  \"crmParentCode\" : \"{{seller.code}}\",\r\n  \"code\" : \"{{account.code}}\",\r\n  \"description\": \"{{account.description}}\",\r\n  \"name\" : {\r\n    \"title\" : \"MR\",\r\n    \"firstName\" : \"{{account.firstname}}\",\r\n    \"lastName\" : \"{{account.lastname}}\"\r\n  },\r\n  \"subscriptionDate\": \"2018-01-10\",\r\n  \"jobTitle\": \"Ruler of the known Universe\",\r\n  \"vatNo\": \"FR12345678901234\",\r\n  \"registrationNo\": \"12354678901234\",\r\n  \"address\" : {\r\n    \"address1\" : \"3 rue passante\",\r\n    \"address2\" : \"BÃ¢timent A\",\r\n    \"address3\" : \"Bureau D42\",\r\n    \"zipCode\" : \"99999\",\r\n    \"city\" : \"METROVILLE\",\r\n    \"country\" : \"FR\"\r\n  },\r\n  \"contactInformation\" : {\r\n    \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n    \"mobile\" : \"+33123546789\"\r\n  },\r\n  \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n  \"language\" : \"FRA\",\r\n  \"paymentMethod\" : \"CHECK\",\r\n  \"customerCategory\" : \"CLIENT\",\r\n  \"currency\" : \"EUR\",\r\n  \"billingCycle\" : \"CYC_INV_MT_1\",\r\n  \"country\" : \"FR\",\r\n  \"electronicBilling\" : \"true\",\r\n  \"customFields\": null\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdateCRMAccountHierarchy",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdateCRMAccountHierarchy"
									]
								}
							},
							"response": []
						},
						{
							"name": "SU|OF|MAIN_SELLER|2019-12-15T01:23:45.678Z",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee0c27b8-e127-4513-bfdf-e98a035d700c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30731214-5a56-4387-a453-7d4bbaae2904",
										"exec": [
											"pm.globals.set(\"subscription.code\", pm.globals.get(\"account.code\")+\"-\"+pm.globals.get(\"request.label.0\"));",
											"pm.globals.set(\"subscription.date\", pm.globals.get(\"request.label.3\"));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{subscription.code}}\",\r\n    \"description\": \"Souscription {{subscription.code}}\",\r\n    \"userAccount\": \"{{account.code}}\",\r\n    \"offerTemplate\": \"{{request.label.1}}\",\r\n    \"seller\": \"{{request.label.2}}\",\r\n    \"subscriptionDate\": \"{{request.label.3}}\",\r\n    \"terminationDate\": null,\r\n    \"endAgreementDate\": \"2019-01-01\",\r\n    \"status\": null,\r\n    \"terminationReason\": null,\r\n    \"customFields\": null\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "activateServices|SE_USG_UNIT|{{subscription.date}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2dd382d7-ef9e-46c6-949c-4f9435934c43",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 2,\r\n                    \"doubleValue\": 4.0\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/activateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"activateServices"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests same invoiceType",
					"item": [
						{
							"name": "script|invoicing.SplitInvoice|Splits invoice by RT.parameter2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0dc6a0f9-05c9-4561-82ab-c51a9e5909a2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.invoicing;\r\n\r\nimport org.meveo.model.payments.PaymentMethod;\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.List;\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.lang.String;\r\nimport java.util.Arrays;\r\nimport java.math.BigInteger;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.apache.commons.collections4.MapUtils;\r\nimport org.meveo.commons.utils.StringUtils;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.admin.util.pagination.PaginationConfiguration;\r\n\r\nimport org.meveo.model.admin.Seller;\r\nimport org.meveo.model.billing.BillingRun;\r\nimport org.meveo.model.billing.BillingAccount;\r\nimport org.meveo.model.billing.RatedTransaction;\r\nimport org.meveo.model.billing.InvoiceType;\r\nimport org.meveo.model.billing.RatedTransactionGroup;\r\nimport org.meveo.model.billing.BillingCycle;\r\n\r\nimport org.meveo.service.admin.impl.SellerService;\r\nimport org.meveo.service.billing.impl.BillingAccountService;\r\nimport org.meveo.service.billing.impl.InvoiceTypeService;\r\n\r\n/**\r\n * Dispatch RTs per invoicingGroup on RTparameter2\r\n * A different invoice will be produced for each value of RT.parameter2\r\n * @author schambrin\r\n */\r\npublic class SplitInvoice extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(SplitInvoice.class);\r\n\r\n    SellerService sellerService = (SellerService)getServiceInterface(\"SellerService\");\r\n    BillingAccountService billingAccountService = (BillingAccountService)getServiceInterface(\"BillingAccountService\");\r\n    InvoiceTypeService invoiceTypeService = (InvoiceTypeService)getServiceInterface(\"InvoiceTypeService\");\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.trace(\"EXECUTE context {}\", context);\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n\r\n        InvoiceType invoiceType = (InvoiceType) context.get(\"invoiceType\");\r\n        PaymentMethod paymentMethod = (PaymentMethod) context.get(\"paymentMethod\");\r\n        BillingAccount billingAccount = billingAccountService.refreshOrRetrieve((BillingAccount) context.get(\"CONTEXT_ENTITY\"));\r\n        BillingRun billingRun = (BillingRun) context.get(\"br\");\r\n        Seller seller = sellerService.findByCode(\"MAIN_SELLER\");\r\n        BillingCycle billingCycle = billingAccount.getBillingCycle();\r\n\r\n        List<RatedTransaction> allRT = (List<RatedTransaction>) context.get(\"ratedTransactions\");\r\n        Map<String,RatedTransactionGroup> invoices = new HashMap<String,RatedTransactionGroup>();\r\n\r\n        // Dispatch RTs\r\n        allRT.stream().forEach(rt->{\r\n            String invoicingGroup = rt.getParameter2();\r\n\r\n            // Add new invoicingGroup if missing\r\n            if( !invoices.containsKey(invoicingGroup) ) {\r\n                invoices.put(\r\n                        invoicingGroup,\r\n                        new RatedTransactionGroup(billingAccount, seller, billingCycle, invoiceType, false/*prepaid*/, invoicingGroup,paymentMethod)\r\n                );\r\n            }\r\n\r\n            invoices.get(invoicingGroup).getRatedTransactions().add(rt);\r\n        });\r\n\r\n        invoices.entrySet().stream().forEach(invoice->{\r\n            log.info(\"BillingAccount[{}], InvoiceType[{}], InvoicingGroup[{}] => {} RTs\", invoice.getValue().getBillingAccount().getCode(), invoiceType.getCode(), invoice.getKey(), invoice.getValue().getRatedTransactions().size());\r\n        });\r\n\r\n        // Returns the list to the invoicing process\r\n        context.put(Script.RESULT_VALUE, new ArrayList(invoices.values()));\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
								},
								"url": {
									"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=1|p2=A|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "099705b0-f6b2-4016-955a-6003456f89b4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=10|p2=B|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae34746a-0122-4527-9e20-c9f9ef120174",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=2|p2=A|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d60140a-98f5-48dd-8658-ed2d5e5f5f3b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=100|p2=C|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4946e320-53e0-4bae-8d87-10e7c04b10ab",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=20|p2=B|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a47f979-91d6-45c7-a2a9-9ff2c2434e58",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "generateInvoice|target=BillingAccount|code={{account.code}}|now",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24bf787b-9a6f-4977-b5a4-20a52360aada",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"tests[\"3 invoices\"] = jsonData.generateInvoiceResultDto.length == 3;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"targetCode\": \"{{code}}\",\n    \"targetType\": \"{{target}}\",\n    \"invoicingDate\": \"{{$timestamp}}000\",\n    \"firstTransactionDate\": null,\n    \"lastTransactionDate\": \"2100-01-01\",\n    \"generateXML\": false,\n    \"generatePDF\": false,\n    \"generateAO\": false,\n    \"includeRatedTransactions\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoice/{{request.label.0}}",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoice",
										"{{request.label.0}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests different invoice types",
					"item": [
						{
							"name": "script|invoicing.SplitInvoice|Splits invoice by RT.parameter2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb3fca99-670d-49c4-b8c1-0aad997fd1d2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.invoicing;\r\n\r\nimport org.meveo.service.script.Script;\r\nimport org.meveo.model.payments.PaymentMethod;\r\nimport java.util.List;\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.lang.String;\r\nimport java.util.Arrays;\r\nimport java.math.BigInteger;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.apache.commons.collections4.MapUtils;\r\nimport org.meveo.commons.utils.StringUtils;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.admin.util.pagination.PaginationConfiguration;\r\n\r\nimport org.meveo.model.admin.Seller;\r\nimport org.meveo.model.billing.BillingRun;\r\nimport org.meveo.model.billing.BillingAccount;\r\nimport org.meveo.model.billing.RatedTransaction;\r\nimport org.meveo.model.billing.InvoiceType;\r\nimport org.meveo.model.billing.RatedTransactionGroup;\r\nimport org.meveo.model.billing.BillingCycle;\r\n\r\nimport org.meveo.service.admin.impl.SellerService;\r\nimport org.meveo.service.billing.impl.BillingAccountService;\r\nimport org.meveo.service.billing.impl.InvoiceTypeService;\r\n\r\n/**\r\n * Dispatch RTs per invoicingGroup on RT.parameter2\r\n * A different invoice will be produced for each value of RT.parameter2\r\n * @author schambrin\r\n */\r\npublic class SplitInvoice extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(SplitInvoice.class);\r\n\r\n    SellerService sellerService = (SellerService)getServiceInterface(\"SellerService\");\r\n    BillingAccountService billingAccountService = (BillingAccountService)getServiceInterface(\"BillingAccountService\");\r\n    InvoiceTypeService invoiceTypeService = (InvoiceTypeService)getServiceInterface(\"InvoiceTypeService\");\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.trace(\"EXECUTE context {}\", context);\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n\r\n        InvoiceType defaultInvoiceType = (InvoiceType) context.get(\"invoiceType\");\r\n        PaymentMethod paymentMethod = (PaymentMethod) context.get(\"paymentMethod\");\r\n        BillingAccount billingAccount = billingAccountService.refreshOrRetrieve((BillingAccount) context.get(\"CONTEXT_ENTITY\"));\r\n        BillingRun billingRun = (BillingRun) context.get(\"br\");\r\n        Seller seller = sellerService.findByCode(\"MAIN_SELLER\");\r\n        BillingCycle billingCycle = billingAccount.getBillingCycle();\r\n\r\n        List<RatedTransaction> allRT = (List<RatedTransaction>) context.get(\"ratedTransactions\");\r\n        Map<String,RatedTransactionGroup> invoices = new HashMap<String,RatedTransactionGroup>();\r\n\r\n        // Dispatch RTs\r\n        allRT.stream().forEach(rt->{\r\n            String invoiceTypeCode = rt.getParameter2();\r\n            InvoiceType invoiceType = invoiceTypeService.findByCode(invoiceTypeCode);\r\n\r\n            if( invoiceType == null ){\r\n                invoiceType = defaultInvoiceType;\r\n                invoiceTypeCode = invoiceType.getCode();\r\n            }\r\n\r\n            // Add new invoicingGroup if missing\r\n            if( !invoices.containsKey(invoiceTypeCode) ) {\r\n                invoices.put(\r\n                    invoiceTypeCode,\r\n                    new RatedTransactionGroup(billingAccount, seller, billingCycle, invoiceType, false/*prepaid*/,invoiceTypeCode,paymentMethod)\r\n                );\r\n            }\r\n\r\n            invoices.get(invoiceTypeCode).getRatedTransactions().add(rt);\r\n        });\r\n\r\n        invoices.entrySet().stream().forEach(invoice->{\r\n            log.info(\"BillingAccount[{}], InvoiceType[{}] => {} RTs\", invoice.getValue().getBillingAccount().getCode(), invoice.getKey(), invoice.getValue().getRatedTransactions().size());\r\n        });\r\n\r\n        // Returns the list to the invoicing process\r\n        context.put(Script.RESULT_VALUE, new ArrayList(invoices.values()));\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
								},
								"url": {
									"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=1|p2=COM|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8c2a22b-6fdb-4872-9391-361ddb3bd07c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=10|p2=ADJ|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48cec50c-a2a2-4d7a-93aa-beb77417c3f9",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=2|p2=COM|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44fa4131-6642-46a3-93d9-1afbabc6c709",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=100|p2=QUOTE|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3141cab-0753-4ff5-868a-0d20d90e354b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=20|p2=ADJ|isVirtual=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45a7a060-e9cf-465e-8489-0a84ebc91a93",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "generateInvoice|target=BillingAccount|code={{account.code}}|now",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19e0e943-26f0-4a0c-8c98-c5fa5604ed1a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"tests[\"3 invoices\"] = jsonData.generateInvoiceResultDto.length == 3;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"targetCode\": \"{{code}}\",\n    \"targetType\": \"{{target}}\",\n    \"invoicingDate\": \"{{$timestamp}}000\",\n    \"firstTransactionDate\": null,\n    \"lastTransactionDate\": \"2100-01-01\",\n    \"generateXML\": false,\n    \"generatePDF\": false,\n    \"generateAO\": false,\n    \"includeRatedTransactions\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoice/{{request.label.0}}",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoice",
										"{{request.label.0}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests different invoice without script",
					"item": [
						{
							"name": "bc|code=CYC_INV_MT_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9a974d-b374-4f7c-bc0b-9fa850b295f1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"Monthly 1st\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"1\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"MONTHLY\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3e6140f-c75b-4ee2-ad02-330eeb85dcf1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=10",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "795a1964-22ae-46ee-813a-0ac7198d64be",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b26979d-5fcf-41f3-ad4e-f82044d20996",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=100",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff5fa89a-fb79-4e27-94eb-348ca65fb339",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "chargeCDR|p1=UNIT|qtt=20",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c06139cd-8ca9-4894-a67f-2801d3bca303",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "generateInvoice|target=BillingAccount|code={{account.code}}|now",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e6af238-0fba-4832-a4de-cddc2e6f6d3a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"tests[\"1 invoices\"] = jsonData.generateInvoiceResultDto.length == 1;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"targetCode\": \"{{code}}\",\n    \"targetType\": \"{{target}}\",\n    \"invoicingDate\": \"{{$timestamp}}000\",\n    \"firstTransactionDate\": null,\n    \"lastTransactionDate\": \"2100-01-01\",\n    \"generateXML\": false,\n    \"generatePDF\": false,\n    \"generateAO\": false,\n    \"includeRatedTransactions\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoice/{{request.label.0}}",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoice",
										"{{request.label.0}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8b9cf370-c7d4-41b7-9ed6-a0a58a6c5ad9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6ab25ff3-a6c8-4ed5-a76f-ca4d8ad7db27",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "{{access_token}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "523f580e-8b80-4c20-92b3-cf5a7e6a0508",
						"type": "text/javascript",
						"exec": [
							"var now=new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"",
							"    if(parts[i].indexOf(\"=\") != -1 ){",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							"// Token auth",
							"var token = pm.variables.get(\"access_token\");",
							"console.log(\"token=\"+token);",
							"",
							"if(!token || token === \"\" ) {",
							"    console.log(\"token is not defined\");",
							"    // Set some environment variables to use in the access token request. ",
							"    var client_id = pm.environment.get(\"client.id\") || \"opencell-web\";",
							"    var client_secret = pm.environment.get(\"client.secret\") || \"afe07e5a-68cb-4fb0-8b75-5b6053b07dc3\";",
							"    var opencell_url = pm.environment.get(\"opencell.url\") ;",
							"    var username = pm.environment.get(\"opencell.username\") || \"opencell.admin\";",
							"    var password = pm.environment.get(\"opencell.password\") || \"opencell.admin\";",
							"    var CryptoJS = require(\"crypto-js\")",
							"    // Encrypt the Client ID and Secret in base64 ",
							"    var rawStr = CryptoJS.enc.Utf8.parse(client_id + ':' + client_secret)",
							"    var client_cred = CryptoJS.enc.Base64.stringify(rawStr)",
							"    // Now let's get a new oauth2 access_token and set it in a variable ",
							"    pm.sendRequest(",
							"        { ",
							"            url: opencell_url + '/auth/realms/opencell/protocol/openid-connect/token', ",
							"            method: 'POST', ",
							"            header: ",
							"            { ",
							"                //'Authorization': 'Basic ' + client_cred, ",
							"                'Cache-Control': 'no-cache', ",
							"                'Content-Type': 'application/x-www-form-urlencoded' ",
							"            }, body: ",
							"            { ",
							"                mode: 'urlencoded', ",
							"                urlencoded: ",
							"                [",
							"                    { ",
							"                        key: \"client_id\", ",
							"                        value: client_id ",
							"                    }, ",
							"                    { ",
							"                        key: \"username\", ",
							"                        value: username ",
							"                    },",
							"                    { ",
							"                        key: \"password\", ",
							"                        value: password ",
							"                    },",
							"                    { ",
							"                        key: \"grant_type\", ",
							"                        value: \"password\" ",
							"                    },",
							"                    { ",
							"                        key: \"client_secret\", ",
							"                        value: client_secret",
							"                    },",
							"                ] ",
							"            } ",
							"        }, ",
							"        function (err, response) { ",
							"            //console.log(\"AUTH_RETURN_CODE\", err);",
							"            //console.log(\"AUTH_RESPONSE\", response);",
							"            const jsonResponse = response.json();",
							"            console.log(\"Saving token to variables\")",
							"            pm.variables.set(\"access_token\", jsonResponse.access_token); ",
							"        }",
							"        );",
							"} else{",
							"    console.log(\"token already exists\");",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e3179c4b-48fc-4014-944b-7a70b215ee8a",
						"type": "text/javascript",
						"exec": [
							"var wait=pm.variables.get(\"wait\");",
							"",
							"if( wait > 0 ) {",
							"    console.log(\"Waiting for \"+pm.variables.get(\"request.label.0\")+\" for \"+wait+\" seconds...\");",
							"    setTimeout(function(){}, wait*1000);",
							"}",
							"",
							"if( pm.response.code == 401 ) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \"+pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"}"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5253 - Could not rate a delayed EDR on a terminated subscription",
			"item": [
				{
					"name": "Create a hierarchy ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cfcf791-8c1f-4b3f-8be4-183b1db24998",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"sellers\": {\r\n               \"seller\": [{\r\n                  \"code\": \"Reseller12\",\r\n                  \"currencyCode\": \"EUR\",\r\n                  \"countryCode\": \"FR\",\r\n                  \"languageCode\": \"FRA\",\r\n                  \"customers\": {\r\n                     \"customer\":[ {\r\n                        \"code\": \"test\",\r\n                        \"description\": \"test2\",\r\n                        \"name\": {\r\n                           \"title\": \"MR\",\r\n                           \"firstName\": \"Maria\",\r\n                           \"lastName\": \"AB\"\r\n                        },\r\n                        \"address\": {\r\n                           \"address1\": \"rue De Versailles\",\r\n                           \"address2\": \"Zac De Valmy\",\r\n                           \"address3\": \"address3\",\r\n                           \"zipCode\": \"59650\",\r\n                           \"city\": \"Villeneuve d'ascq\",\r\n                           \"country\": \"France\"\r\n                        },\r\n                        \"customerCategory\": \"CLIENT\",\r\n                    \"customerBrand\": \"CLASSIC\",\r\n                        \"customerAccounts\": {\r\n                        \t\"customerAccount\": [\r\n                           {\r\n                              \"code\": \"Maria.ab\",\r\n                              \"description\": \"Maria AB\",\r\n                              \"name\": {\r\n                                 \"title\": \"MR\",\r\n                                 \"firstName\": \"Maria\",\r\n                                 \"lastName\": \"AB\"\r\n                              },\r\n                              \"address\": {\r\n                                 \"address1\": \"rue De Versailles\",\r\n                                 \"address2\": \"Zac De Valmy\",\r\n                                 \"address3\": \"address3\",\r\n                                 \"zipCode\": \"59650\",\r\n                                 \"city\": \"Villeneuve d'ascq\",\r\n                                 \"country\": \"France\"\r\n                              },\r\n                              \"currency\": \"EUR\",\r\n                              \"language\": \"FRA\",\r\n                             \r\n                                 \"methodOfPayment\": [{\r\n                                    \"paymentMethodType\": \"WIRETRANSFER\"\r\n                                 \r\n                              }],\r\n                              \"billingAccounts\": {\r\n                                 \"billingAccount\": [\r\n                                 \t{\r\n                                    \"code\": \"Maria.AB\",\r\n                                    \"description\": \"Maria AB\",\r\n                                    \"name\": {\r\n                                       \"title\": \"MR\",\r\n                                       \"firstName\": \"Maria\",\r\n                                       \"lastName\": \"AB\"\r\n                                    },\r\n                                    \"address\": {\r\n                                       \"address1\": \"rue De Versailles\",\r\n                                       \"address2\": \"Zac De Valmy\",\r\n                                       \"address3\": \"address3\",\r\n                                       \"zipCode\": \"59650\",\r\n                                       \"city\": \"Villeneuve d'ascq\",\r\n                                       \"country\": \"France\"\r\n                                    },\r\n                                    \"billingCycle\": \"CYC_INV_MT_1\",\r\n                                    \"country\": \"FR\",\r\n                                    \"language\": \"FRA\",\r\n                                    \"electronicBilling\": \"true\",\r\n                                    \"email\": \"maria.ab@opencellsoft.com\",\r\n                                    \"userAccounts\": {\r\n                                       \"userAccount\": [ {\r\n                                          \"code\": \"maria.ab\",\r\n                                          \"description\": \"Maria AB\",\r\n                                          \"name\": {\r\n                                             \"title\": \"Ms\",\r\n                                             \"firstName\": \"Maria\",\r\n                                             \"lastName\": \"AB\"\r\n                                          },\r\n                                          \"address\": {\r\n                                             \"address1\": \"rue De Versailles\",\r\n                                             \"address2\": \"Zac De Valmy\",\r\n                                             \"address3\": \"address3\",\r\n                                             \"zipCode\": \"59650\",\r\n                                             \"city\": \"Villeneuve d'ascq\"\r\n                                          \r\n                                          }\r\n                           \r\n                                       \r\n                                 }  ]}\r\n\r\n}]\r\n}\r\n}]\r\n}\r\n}\r\n]\r\n}\r\n}\r\n]\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/account/accountHierarchy/customerHierarchyUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"accountHierarchy",
								"customerHierarchyUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription and activate services (USG)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c889779-8961-44c6-9438-c0248c87879a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n    {\r\n     \"code\":\"SUB1\",\r\n    \"userAccount\": \"maria.ab\",\r\n    \"offerTemplate\":\"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\":\"2019-02-27T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n                {\r\n                    \"code\": \"SE_CLASSIC_OSS_UNIT\",\r\n                    \"subscriptionDate\": \"2019-02-27T22:00:00Z\",\r\n                    \"quantity\":1\r\n                },\r\n                  {\r\n                    \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                    \"subscriptionDate\": \"2019-02-27T22:00:00Z\",\r\n                    \"quantity\":1\r\n                }\r\n        ]\r\n       \r\n       \r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"subscription",
								"subscribeAndActivateServices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an access point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94108d3a-8e1a-4837-af52-efb165ee456c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\" : \"A1\",\r\n  \"subscription\" : \"SUB1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/account/access/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"account",
								"access",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mediation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e188e02e-f06e-46ce-8fd3-6dfb92cfa821",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2019-03-01T17:00:00.000Z;100;A1;UNIT",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/mediation/chargeCdr",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"mediation",
								"chargeCdr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Terminate Subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ce14ceb-8143-4cba-8138-be2fd54415f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subscriptionCode\": \"SUB1\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-06-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/subscription/terminate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"subscription",
								"terminate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mediation:  date usage < date of termination",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0110941a-3652-4035-a37b-dca0a96ab8c2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2019-03-01T17:00:00.000Z;100;A1;UNIT",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/mediation/chargeCdr",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"mediation",
								"chargeCdr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mediation:  date usage > date of termination Copy KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b298b0e-b6f0-4936-a020-a2b4797de358",
								"exec": [
									"\r",
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"FAIL\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"INVALID_ACCESS\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2019-09-01T17:00:00.000Z;100;A1;UNIT",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/billing/mediation/chargeCdr",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"billing",
								"mediation",
								"chargeCdr"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5284 - [WF] A workflow is applied to CE not related to it",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Settings",
							"item": [
								{
									"name": "Provider/Seller/Account",
									"item": [
										{
											"name": "Update Provider",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{provider.code}}\",\n    \"description\": \"{{template.label}}\",\n    \"enterprise\": \"true\",\n    \"rounding\": 6,\n    \"roundingMode\": \"NEAREST\",\n    \"invoiceRounding\": 2,\n    \"invoiceRoundingMode\": \"NEAREST\",\n    \"invoiceConfiguration\": {\n        \"displaySubscriptions\": \"true\",\n        \"displayServices\": \"true\",\n        \"displayOffers\": \"true\",\n        \"displayEdrs\": \"true\",\n        \"displayProvider\": \"true\",\n        \"displayCfAsXML\": \"true\",\n        \"displayPricePlans\": \"true\",\n        \"displayDetail\": \"true\",\n        \"displayChargesPeriods\": \"true\",\n        \"displayFreeTransacInInvoice\": \"true\",\n        \"displayBillingCycle\": \"true\",\n        \"displayOrders\": \"true\"\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CF_PROV_PROJECT_VERSION",
											"event": [
												{
													"script": {
														"type": "text/javascript",
														"id": "4f3e24b2-6871-4668-a8f7-1e4da2a410ac",
														"exec": [
															""
														]
													},
													"listen": "prerequest"
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label}}_{{$timestamp}}\",\r\n    \"description\": \"{{project.code}} {{project.type}} {{project.version}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"Provider\",\r\n    \"defaultValue\": \"{{timestamp.iso}}\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false,\r\n    \"guiPosition\": \"tab:Project versions:999\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "S|MAIN_SELLER|Opencell",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\" : \"{{request.label.1}}\",\r\n\t\"description\" : \"{{request.label.2}}\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"countryCode\": \"FR\",\r\n    \"languageCode\": \"ENG\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": \"Esc. A\",\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": null\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"billing@opencellsoft.com\",\r\n        \"phone\": \"0123456789\",\r\n        \"mobile\": \"0678912345\",\r\n        \"fax\": null\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"script": {
												"type": "text/javascript",
												"id": "a1b71d74-e084-4b33-8b50-34f177f4eac3",
												"exec": [
													""
												]
											},
											"listen": "prerequest"
										},
										{
											"script": {
												"type": "text/javascript",
												"id": "a5717373-18ad-4788-9f72-02878ee01568",
												"exec": [
													""
												]
											},
											"listen": "test"
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Taxes",
									"item": [
										{
											"name": "Tax rates",
											"item": [
												{
													"name": "tax|code=TAX_20|desc=VAT 20%|percentage=20|accCode=445710000",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "0ad98125-0c11-4482-bfd3-cf899c0b86e3",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=TAX_10|desc=VAT 10%|percentage=10|accCode=445710000",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "f729c939-fc42-43b5-9a00-ae6b3418602c",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														},
														"description": "Taux Ã  16% pour la PolynÃ©sie FranÃ§aise (taux nominal)"
													},
													"response": []
												},
												{
													"name": "tax|code=NO_TAX|desc=No tax|percentage=0|accCode=445710000",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "ee121e30-5c77-4715-9bf3-0f38f6b247c9",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														},
														"description": "Permettra d'identifier qu'il faut enlever les lignes de taxe (diffÃ©rent d'une ligne avec Taxe Ã  0)"
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax categories (account)",
											"item": [
												{
													"name": "taxCat|code=STANDARD|desc=Standard accounts",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "2355a8dc-53db-4775-abea-adbd03e341d6",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxCat|code=NO_TAX|desc=Exempted accounts",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "2b194802-9bca-4b8b-9d07-cea17a9594e0",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax classes (charge)",
											"item": [
												{
													"name": "taxClass|code=REGULAR|desc=Regular products",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "35231a71-2d3a-40bf-a5e8-8f0a0c68021a",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=REDUCED|desc=Products with reduced tax",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "8c742fd7-0950-4c0d-963b-c62239ffcc81",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=NO_TAX|desc=Products with no VAT",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "8ee91c0a-ce52-48bd-9e70-b33d3d00f949",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax mapping",
											"item": [
												{
													"name": "taxMapping|priority=100|taxCat=NO_TAX|taxClass=|buyer=|tax=NO_TAX",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "62805db7-a3b3-4fc2-bb39-9945c0a72e41",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=STANDARD|taxClass=NO_TAX|buyer=|tax=NO_TAX",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "43b78f9c-3a9c-4c2c-9095-e5c5e90b11e7",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=1|taxCat=STANDARD|taxClass=REGULAR|buyer=|tax=TAX_20",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "dd8bba52-69e3-454b-8d1f-80c10679f872",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=2|taxCat=STANDARD|taxClass=REDUCED|buyer=|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "45c4b10e-32b5-41f6-8b1c-417cc7083f79",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=10|taxCat=STANDARD|taxClass=REGULAR|buyer=US|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "2ea0a2a2-6f57-448b-aa75-b1236027c73e",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account",
									"item": [
										{
											"name": "custCat|code=CLIENT|taxCat=STANDARD",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"Client\",\r\n    \"taxCategoryCode\": \"STANDARD\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Catalog",
							"item": [
								{
									"name": "script|rating.LogWalletOperation|Logs the WalletOperation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e03f3d-da61-41db-a148-6307165b4c07",
												"exec": [
													"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/xml",
												"type": "text",
												"name": "Content-Type",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class LogWalletOperation extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogWalletOperation.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"wo={}\",new WalletOperationDto(wo));\r\n        \tlog.info(\"wo.tax={}\", wo.getTax());\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "counter|code=CN_USG_ACCUM_C|type=USAGE|target=CUST|calendar=MONTHLY|desc=Accumulates quantities on the Customer",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"counterTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "counter|CN_USG_COUNTER|Counter",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"MONTHLY\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"counterTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "charge|CH_USG_UNIT|Charge unit",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{request.label.2}}\",\n    \"invoiceSubCategory\": \"CMP_DATA\",\n    \"taxClassCode\": \"REDUCED\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"UNIT\",\n    \"priority\": 10,\n    \"triggerNextCharge\": false\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"usageChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "pp|code=PP_USG_UNIT|charge=CH_USG_UNIT",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"eventCode\": \"{{charge}}\",\n    \"amountWithoutTax\": 1,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": null,\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "se|code=SE_USG_UNIT|desc=Unit usage service",
									"event": [
										{
											"script": {
												"id": "7055d896-26a8-45dd-8280-5a70a096f5af",
												"exec": [
													""
												],
												"type": "text/javascript"
											},
											"listen": "prerequest"
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": []\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": null,\n                \"counterTemplate\": null,\n                \"accumulatorCounterTemplates\": {\n                \t\"counterTemplate\": [\n                \t\t\"CN_USG_ACCUM_C\"\n                \t]\n                }\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "of|code=OF",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{template.label}} offer {{$timestamp}}\",\n    \"disabled\": false,\n    \"lifeCycleStatus\": \"ACTIVE\",\n    \"bomCode\": null,\n    \"offerTemplateCategoryCode\": null,\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"SE_USG_UNIT\",\n                \"customFields\": null\n            },\n            \"mandatory\": false,\n            \"incompatibleServiceTemplate\": []\n        }\n    ],\n    \"customFields\": null\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Account",
					"item": [
						{
							"name": "C|Jean|Bonnot",
							"event": [
								{
									"script": {
										"id": "37330f3c-2c05-4528-8cb8-953e9c7252fb",
										"exec": [
											"var parts = pm.variables.get(\"request.label\").split(\"|\");",
											"var index = pm.globals.get(\"index\");",
											"",
											"if (typeof index === 'undefined') {",
											"    console.log(\"index global variable is undefined -> setting to \\\"00\\\"\");",
											"    pm.globals.set(\"index\", \"00\");",
											"    index = \"00\";",
											"}",
											"",
											"var prefix = pm.variables.get(\"template.code\") + \"-\";",
											"var suffix = \" \" + prefix + index;",
											"",
											"switch (parts.length) {",
											"    case 1:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[0] + suffix);",
											"        pm.globals.set(\"account.firstname\", \"\");",
											"        pm.globals.set(\"account.lastname\", \"\");",
											"        break;",
											"    case 2:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + suffix);",
											"        pm.globals.set(\"account.firstname\", \"\");",
											"        pm.globals.set(\"account.lastname\", \"\");",
											"        break;",
											"    case 3:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + \" \" + parts[2] + suffix);",
											"        pm.globals.set(\"account.firstname\", parts[1]);",
											"        pm.globals.set(\"account.lastname\", parts[2]);",
											"        break;",
											"    case 4:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + suffix);",
											"        pm.globals.set(\"account.firstname\", parts[2]);",
											"        pm.globals.set(\"account.lastname\", parts[3]);",
											"        break;",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									},
									"listen": "prerequest"
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"crmAccountType\" : \"C_UA\",\r\n  \"crmParentCode\" : \"{{seller.code}}\",\r\n  \"code\" : \"{{account.code}}\",\r\n  \"description\": \"{{account.description}}\",\r\n  \"name\" : {\r\n    \"title\" : \"MR\",\r\n    \"firstName\" : \"{{account.firstname}}\",\r\n    \"lastName\" : \"{{account.lastname}}\"\r\n  },\r\n  \"subscriptionDate\": \"2018-01-10\",\r\n  \"jobTitle\": \"Ruler of the known Universe\",\r\n  \"vatNo\": \"FR12345678901234\",\r\n  \"registrationNo\": \"12354678901234\",\r\n  \"address\" : {\r\n    \"address1\" : \"3 rue passante\",\r\n    \"address2\" : \"BÃ¢timent A\",\r\n    \"address3\" : \"Bureau D42\",\r\n    \"zipCode\" : \"99999\",\r\n    \"city\" : \"METROVILLE\",\r\n    \"country\" : \"FR\"\r\n  },\r\n  \"contactInformation\" : {\r\n    \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n    \"mobile\" : \"+33123546789\",\r\n    \"phone\":\"+33123546789\"\r\n  },\r\n  \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n  \"language\" : \"FRA\",\r\n  \"paymentMethod\" : \"CHECK\",\r\n  \"customerCategory\" : \"CLIENT\",\r\n  \"currency\" : \"EUR\",\r\n  \"billingCycle\" : \"CYC_INV_MT_1\",\r\n  \"country\" : \"FR\",\r\n  \"electronicBilling\" : \"true\",\r\n  \"customFields\": null\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdateCRMAccountHierarchy",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdateCRMAccountHierarchy"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "workflow",
					"item": [
						{
							"name": "CE",
							"item": [
								{
									"name": "CE CE_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a08d073-95ba-4142-88f0-28bdc8677f28",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"code\": \"CE_TEST_1\",\r\n        \"description\": \"EntitÃ© personnalisÃ© TEST\",\r\n        \"disabled\": false,\r\n        \"name\": \" TEST_1\",\r\n        \"field\": [\r\n            {\r\n                \"code\": \"test1\",\r\n                \"description\": \"Description\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 100,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            },\r\n\t\t\t {\r\n              \r\n                \"code\": \"test2\",\r\n                \"description\": \"Destinataire\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": true,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 50,\r\n                \"indexType\": \"INDEX\"\r\n            },\r\n            {\r\n                \"code\": \"test3\",\r\n                \"description\": \"RÃ©initailiser les Nb d'essai\",\r\n                \"disabled\": false,\r\n                \"languageDescriptions\": [],\r\n                \"fieldType\": \"BOOLEAN\",\r\n                \"accountLevel\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"appliesTo\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"defaultValue\": true,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            }\r\n           \r\n        ],\r\n        \"action\": []\r\n    }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "FILL|CE_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "345e369d-ac48-4bd5-85cc-c3720890f9de",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cetCode\": \"CE_TEST_1\",\n    \"code\":\"test_1\",\n    \"description\":\"Test 1\",\n    \"customFields\": {\n    \t\"customField\":[\n        {\n                \"code\": \"test1\",\n                \"description\":\"description\",\n                \"stringValue\": \"Bonjour, Un ticket de teste \"\n             \n        },{\n                \"code\": \"test2\",\n                \"stringValue\": \"4\"\n             \n        },{\n                \"code\": \"test3\",\n                \"stringValue\": \"Subject\"\n             \n        }\n        \n    ]\n}\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customEntityInstance/{{request.label.1}}/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customEntityInstance",
												"{{request.label.1}}",
												"createOrUpdate"
											]
										},
										"description": "Injection des codes articles dans la base"
									},
									"response": []
								},
								{
									"name": "CE CE_TEST_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5530890a-84cf-45df-bfab-699cff56fa8d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"code\": \"CE_TEST_2\",\r\n        \"description\": \"EntitÃ© personnalisÃ© TEST\",\r\n        \"disabled\": false,\r\n        \"name\": \" TEST_2\",\r\n        \"field\": [\r\n            {\r\n                \"code\": \"test1\",\r\n                \"description\": \"Description\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 100,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            },\r\n\t\t\t {\r\n              \r\n                \"code\": \"test2\",\r\n                \"description\": \"Destinataire\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": true,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 50,\r\n                \"indexType\": \"INDEX\"\r\n            },\r\n            {\r\n                \"code\": \"test3\",\r\n                \"description\": \"RÃ©initailiser les Nb d'essai\",\r\n                \"disabled\": false,\r\n                \"languageDescriptions\": [],\r\n                \"fieldType\": \"BOOLEAN\",\r\n                \"accountLevel\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"appliesTo\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"defaultValue\": true,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            }\r\n           \r\n        ],\r\n        \"action\": []\r\n    }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "FILL|CE_TEST_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18c5b5e1-d4ce-4fe1-847b-f7ea5c77eef5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cetCode\": \"CE_TEST_2\",\n    \"code\":\"test_2\",\n    \"description\":\"Test 2\",\n    \"customFields\": {\n    \t\"customField\":[\n        {\n                \"code\": \"test1\",\n                \"description\":\"description\",\n                \"stringValue\": \"Bonjour, Un ticket de teste \"\n             \n        },{\n                \"code\": \"test2\",\n                \"stringValue\": \"4\"\n             \n        },{\n                \"code\": \"test3\",\n                \"stringValue\": \"Subject\"\n             \n        }\n        \n    ]\n}\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customEntityInstance/{{request.label.1}}/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customEntityInstance",
												"{{request.label.1}}",
												"createOrUpdate"
											]
										},
										"description": "Injection des codes articles dans la base"
									},
									"response": []
								},
								{
									"name": "Create Workflow|WF_TEST_1",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"targetEntityClass\": \"org.meveo.model.customEntities.CustomEntityInstance\",\r\n    \"targetCetCode\": \"CE_TEST_1\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"workflow Customer TEST 1\",\r\n    \"status\": [ \r\n    \t{ \"code\": \"A\", \"description\": \"A\" },\r\n    \t{ \"code\": \"B\", \"description\": \"B\" },\r\n    \t{ \"code\": \"C\", \"description\": \"C\" },\r\n    \t{ \"code\": \"D\", \"description\": \"D\" },\r\n    \t{ \"code\": \"E\", \"description\": \"E\" },\r\n    \t{ \"code\": \"F\", \"description\": \"F\" },\r\n    \t{ \"code\": \"G\", \"description\": \"G\" },\r\n    \t{ \"code\": \"H\", \"description\": \"H\" }\r\n    ],\r\n    \"initStatus\": \"A\",\r\n    \"transition\": [\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"B\", \"description\": \"T1\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\"},\r\n    \t\t{ \"fromStatus\": \"B\", \"toStatus\": \"C\", \"description\": \"T2\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"C\", \"toStatus\": \"D\", \"description\": \"T3\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"D\", \"toStatus\": \"E\", \"description\": \"T4\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"E\", \"toStatus\": \"F\", \"description\": \"T5\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" }\r\n    \t\r\n    \t\t\r\n    \r\n    \r\n    \r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Workflow Job|WF_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4bfece5-d762-4ccd-8d5d-292859f295de",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"active\": \"false\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Customer Workflow Job\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"gwfJob_generic_wf\",\r\n                \"entityReferenceValue\": { \"code\" : \"{{request.label.1}}\", \"classname\": \"org.meveo.model.generic.wf.GenericWorkflow\" }\r\n            }\r\n        ]\r\n    },\r\n    \"timerCode\": \"Daily-midnight\",\r\n    \"jobCategory\": \"MISC\",\r\n    \"jobTemplate\": \"GenericWorkflowJob\"\r\n    \r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Job|WF_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb6a82df-56d6-4bb5-bc5a-d160092b4406",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7274c56c-5a79-433f-b4d8-7d196df07e4b",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report|WF_TEST_1|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b6cf25b-6b68-439d-be87-cee550f7b1eb",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8bc6730f-bb55-41ad-9dbe-49435431ff4f",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb4c10e9-0fca-4acd-9ab1-11844dfa0623",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"    pm.expect(jsonData.workflowHistory[1].transitionName).to.eql(\"T2\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=test_1&workflowCode=WF_TEST_1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "test_1"
												},
												{
													"key": "workflowCode",
													"value": "WF_TEST_1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_TEST_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "702b412d-0388-4f5d-a997-7aedc8cbf920",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory.length).to.eql(0);\r",
													"\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=test_2&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "test_2"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "31e91367-2296-4b1d-9e27-340e01c82880",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c90f40dc-3915-4ec2-9a59-a5c220346c6c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "T1-T3-T8",
							"item": [
								{
									"name": "Create Workflow|WF_T1_T3_T8",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"targetEntityClass\": \"org.meveo.model.crm.Customer\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"workflow Customer\",\r\n    \"status\": [ \r\n    \t{ \"code\": \"A\", \"description\": \"A\" },\r\n    \t{ \"code\": \"B\", \"description\": \"B\" },\r\n    \t{ \"code\": \"C\", \"description\": \"C\" },\r\n    \t{ \"code\": \"D\", \"description\": \"D\" },\r\n    \t{ \"code\": \"E\", \"description\": \"E\" },\r\n    \t{ \"code\": \"F\", \"description\": \"F\" },\r\n    \t{ \"code\": \"G\", \"description\": \"G\" },\r\n    \t{ \"code\": \"H\", \"description\": \"H\" }\r\n    ],\r\n    \"initStatus\": \"A\",\r\n    \"transition\": [\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"B\", \"description\": \"T1\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\"},\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"C\", \"description\": \"T2\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"com.opencellsoft.script.ActionScriptExample1\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"F\", \"description\": \"T3\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"E\", \"description\": \"T4\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"C\", \"toStatus\": \"D\", \"description\": \"T5\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"D\", \"toStatus\": \"G\", \"description\": \"T7\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"E\", \"toStatus\": \"G\", \"description\": \"T6\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"F\", \"toStatus\": \"H\", \"description\": \"T8\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"G\", \"toStatus\": \"H\", \"description\": \"T9\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" }\r\n    \t\r\n    \t\r\n    \t\t\r\n    \r\n    \r\n    \r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Workflow Job|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2b9dcb9-da2d-41c9-b661-e07486c24d32",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"active\": \"false\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Customer Workflow Job\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"gwfJob_generic_wf\",\r\n                \"entityReferenceValue\": { \"code\" : \"{{request.label.1}}\", \"classname\": \"org.meveo.model.generic.wf.GenericWorkflow\" }\r\n            }\r\n        ]\r\n    },\r\n    \"timerCode\": \"Daily-midnight\",\r\n    \"jobCategory\": \"MISC\",\r\n    \"jobTemplate\": \"GenericWorkflowJob\"\r\n    \r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Job|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b76e076-8f9b-4ce8-8957-d96246b86813",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9ad37f08-779e-427b-8ad2-d962118369a7",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report|WF_T1_T3_T8|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9740630-07e8-43d9-9670-1758738e22cc",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "dd17a448-bd79-4785-845b-6eba9dc8dd1c",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fd4a6c57-ac01-4a8c-a0e8-3e549d1eeaef",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode={{account.code}}&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "{{account.code}}"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Job - Again|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f2eec8b-95dd-4d8f-b832-cea4d2a0a335",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "dddf7eed-962f-4a01-b090-eadde754e1b3",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report  - Again|WF_T1_T3_T8|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41b4f61d-7f3d-48c8-a700-8eca60786853",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8dafc864-ef18-4066-9c25-1527f5f25e13",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow - Again|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb35ba4f-f39b-4314-85b6-761549a31259",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode={{account.code}}&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "{{account.code}}"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update Workflow|WF_T1_T3_T8",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"targetEntityClass\": \"org.meveo.model.crm.Customer\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"workflow Customer\",\r\n    \"status\": [ \r\n    \t{ \"code\": \"A\", \"description\": \"A\" },\r\n    \t{ \"code\": \"B\", \"description\": \"B\" },\r\n    \t{ \"code\": \"C\", \"description\": \"C\" },\r\n    \t{ \"code\": \"D\", \"description\": \"D\" },\r\n    \t{ \"code\": \"E\", \"description\": \"E\" },\r\n    \t{ \"code\": \"F\", \"description\": \"F\" },\r\n    \t{ \"code\": \"G\", \"description\": \"G\" },\r\n    \t{ \"code\": \"H\", \"description\": \"H\" }\r\n    ],\r\n    \"initStatus\": \"A\",\r\n    \"transition\": [\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"B\", \"description\": \"T1\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\"},\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"C\", \"description\": \"T2\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"com.opencellsoft.script.ActionScriptExample1\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"F\", \"description\": \"T3\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"E\", \"description\": \"T4\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"C\", \"toStatus\": \"D\", \"description\": \"T5\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"D\", \"toStatus\": \"G\", \"description\": \"T7\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"E\", \"toStatus\": \"G\", \"description\": \"T6\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"F\", \"toStatus\": \"H\", \"description\": \"T8\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"G\", \"toStatus\": \"H\", \"description\": \"T9\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" }\r\n    \t\r\n    \t\r\n    \t\t\r\n    \r\n    \r\n    \r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ff1b34b-d6b8-4ddd-9f10-1feab21f8560",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4060b759-356d-4b0a-8390-e78e2f4bd82b",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report|WF_T1_T3_T8|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2fc0e61f-4622-41cc-b383-26ddaee80fea",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "29e4d28c-c08d-40b0-87e6-6aba30ed1bab",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "421bf273-6d6d-4e61-85a7-2a1aa534df63",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"    pm.expect(jsonData.workflowHistory[1].transitionName).to.eql(\"T3\");\r",
													"    pm.expect(jsonData.workflowHistory[2].transitionName).to.eql(\"T8\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode={{account.code}}&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "{{account.code}}"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{opencell.password}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{opencell.username}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c2d608fb-7d4f-47c6-92b8-527b3cdf9933",
						"type": "text/javascript",
						"exec": [
							"var now = new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for (let i = 0; i < parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\" + i, parts[i]);",
							"",
							"    if (parts[i].indexOf(\"=\") != -1) {",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "53a3efb2-2567-4525-90cb-ff0cdc1b94b4",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"",
							"if (wait > 0) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5291 - [API] Missing List APIs",
			"item": [
				{
					"name": "Filter on UsageChargeTemplate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87693ad5-9aad-4e73-9454-16237d7ff670",
								"exec": [
									"pm.test(\"Check total Number Of Records\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 1rst template\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[0].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 2nd template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[1].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 3rd template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[2].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 4rd template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[3].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 5th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[4].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 6th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[5].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 7th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[6].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 8th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[7].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 9th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[8].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 10th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[9].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fullTextFilter\" : null,\r\n\t\"filters\" : {\r\n\t\t\"invoiceSubCategory.code\": \"CLASSIC_USAGE_TIER\"\r\n\t},\r\n\t\"fields\" : null,\r\n\t\"offset\" : null,\r\n\t\"limit\" : null,\r\n\t\"sortBy\" : \"code\",\r\n\t\"sortOrder\" : \"DESCENDING\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/catalog/usageChargeTemplate/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"catalog",
								"usageChargeTemplate",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter on InvoiceSubCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f88d8ce-65e4-4d0d-acde-10a91884de18",
								"exec": [
									"pm.test(\"Check total Number Of Records\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check invoiceSubCategory's description\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoiceSubCategories.invoiceSubCategory[0].description).to.eql(\"Commission\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fullTextFilter\" : null,\r\n\t\"filters\" : {\r\n\t\t\"invoiceCategory.description\": \"Commission\"\r\n\t},\r\n\t\"fields\" : null,\r\n\t\"offset\" : null,\r\n\t\"limit\" : null,\r\n\t\"sortBy\" : \"code\",\r\n\t\"sortOrder\" : \"DESCENDING\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoiceSubCategory/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoiceSubCategory",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter on InvoiceCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7d4ba6a-44f2-42e6-abbd-533ffeef0a62",
								"exec": [
									"pm.test(\"Check total Number Of Records\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check invoiceSubCategory's description\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoiceCategories.invoiceCategory[0].code).to.eql(\"CLASSIC_COMMISSION\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fullTextFilter\" : null,\r\n\t\"filters\" : {\r\n\t\t\"code\": \"CLASSIC_COMMISSION\"\r\n\t},\r\n\t\"fields\" : null,\r\n\t\"offset\" : null,\r\n\t\"limit\" : null,\r\n\t\"sortBy\" : \"code\",\r\n\t\"sortOrder\" : \"DESCENDING\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoiceCategory/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoiceCategory",
								"list"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5307 - Improve db contraint error message",
			"item": [
				{
					"name": "Create CT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91c9aae6-9503-4af6-94ab-ed13ab3a15e0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"CT_TEST_C\",\r\n    \"description\": \"CT_TEST_C\",\r\n    \"disabled\": false,\r\n    \"name\": \"CT_TEST_C\",\r\n    \"storeAsTable\": true,\r\n    \"field\": [\r\n        {\r\n            \"code\": \"CF_TEST\",\r\n            \"description\": \"CF_TEST\",\r\n            \"disabled\": false,\r\n            \"languageDescriptions\": [],\r\n            \"fieldType\": \"LONG\",\r\n            \"accountLevel\": \"CT_TEST_C\",\r\n            \"appliesTo\": \"CT_TEST_C\",\r\n            \"defaultValue\": \"0\",\r\n            \"useInheritedAsDefaultValue\": false,\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"versionable\": false,\r\n            \"triggerEndPeriodEvent\": false,\r\n            \"allowEdit\": true,\r\n            \"hideOnNew\": false,\r\n            \"guiPosition\": \"tab:Test:0;field:1\",\r\n            \"uniqueConstraint\": true,\r\n            \"indexType\": \"INDEX_NOT_ANALYZE\"\r\n        },\r\n        {\r\n            \"code\": \"CF_TEST_1\",\r\n            \"description\": \"CF_TEST_1\",\r\n            \"disabled\": false,\r\n            \"languageDescriptions\": [],\r\n            \"fieldType\": \"LONG\",\r\n            \"accountLevel\": \"CT_TEST_C\",\r\n            \"appliesTo\": \"CT_TEST_C\",\r\n            \"useInheritedAsDefaultValue\": false,\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"versionable\": false,\r\n            \"triggerEndPeriodEvent\": false,\r\n            \"allowEdit\": true,\r\n            \"hideOnNew\": false,\r\n            \"uniqueConstraint\": true,\r\n            \"guiPosition\": \"tab:Test:0;field:2\",\r\n            \"indexType\": \"INDEX_NOT_ANALYZE\"\r\n        },\r\n        {\r\n            \"code\": \"CF_TEST_2\",\r\n            \"description\": \"CF_TEST_2\",\r\n            \"disabled\": false,\r\n            \"languageDescriptions\": [],\r\n            \"fieldType\": \"DOUBLE\",\r\n            \"accountLevel\": \"CT_TEST\",\r\n            \"appliesTo\": \"CT_TEST_C\",\r\n            \"useInheritedAsDefaultValue\": false,\r\n            \"storageType\": \"SINGLE\",\r\n            \"valueRequired\": false,\r\n            \"versionable\": false,\r\n            \"triggerEndPeriodEvent\": false,\r\n            \"allowEdit\": true,\r\n            \"hideOnNew\": false,\r\n            \"uniqueConstraint\": true,\r\n            \"guiPosition\": \"tab:Test:0;field:3\",\r\n            \"indexType\": \"INDEX_NOT_ANALYZE\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/entityCustomization/entity/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"entityCustomization",
								"entity",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CT instance 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64fda317-d0fa-4447-9fda-083317322528",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"customTableCode\":\"CT_TEST_C\",\r\n \r\n\"record\":[\r\n \r\n{\"id\":1,\"values\":{\"CF_TEST\":\"11\",\"CF_TEST_1\":\"11\",\"CF_TEST_2\":\"11\"}}\r\n]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/customTable/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"customTable",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CT instance 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2a743c2-5276-48dd-9f12-9c64a18701fc",
								"exec": [
									"pm.test(\"Test FAIL Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"FAIL\");\r",
									"});\r",
									"pm.test(\"Test Error Code\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");\r",
									"});\r",
									"pm.test(\"Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"cf_test, cf_test_1, cf_test_2 field(s) must be unique. A record with value(s) '11, 11, 11.000000000000' already exists\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"customTableCode\":\"CT_TEST_C\",\r\n \r\n\"record\":[\r\n \r\n{\"id\":2,\"values\":{\"CF_TEST\":\"11\",\"CF_TEST_1\":\"11\",\"CF_TEST_2\":\"11\"}}\r\n]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/customTable/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"customTable",
								"createOrUpdate"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5315 - [API] POST /invoice ratedTransactionsToLink",
			"item": [
				{
					"name": "ratedTransactionsToLink   ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cea2be14-d649-4083-bdd9-bb96ebbef306",
								"exec": [
									"pm.test(\"Check that the  API response is  200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ratedTransactionsToLink\": [168],\r\n    \"returnXml\": true,\r\n    \"invoiceType\": \"ADJ\",\r\n    \"billingAccountCode\": \"DEMO.CLASSIC\",\r\n    \"dueDate\": \"2020-10-13\",\r\n    \"invoiceDate\": \"2020-10-13\",\r\n    \"invoiceMode\": \"DETAILLED\",\r\n    \"categoryInvoiceAgregate\": [\r\n        {\r\n            \"categoryInvoiceCode\": \"SUBSCRIPTION\",\r\n            \"description\": \"SUBSCRIPTION\",\r\n            \"subCategoryInvoiceAgregateDto\": [\r\n                {\r\n                    \"description\": \"SUB_DATA\",\r\n                    \"invoiceSubCategoryCode\": \"SUB_DATA\",\r\n                    \"amountWithoutTax\": \"100\",\r\n                    \"amountTax\": \"20\",\r\n                    \"amountWithTax\": \"120\",\r\n                    \"ratedTransaction\": [\r\n                        {\r\n                            \"code\": \"WS_BASE_OS_OTHER\",\r\n                            \"unitAmountWithoutTax\": \"100\",\r\n                            \"amountWithoutTax\": \"100\",\r\n                            \"quantity\": \"1\",\r\n                            \"description\": \"API\",\r\n                            \"usageDate\": \"2020-10-13\",\r\n                            \"taxCode\": \"TAX_00\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5388 - Invoice notifications",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0b1b4b7-ef09-428f-9161-0167a4aacb45",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5388_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create calendar for Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "267ed7b0-1f6e-4780-9424-99ff760a86cc",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_CAL_5388_REC\",\n    \"description\": \"1 day period\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97dcc0f5-dd1c-4b32-a7aa-1aa9118d040c",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5388_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5388_BC\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f8a3393-2648-466e-8193-76ae01e8d359",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5388\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Class",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0482bb84-09fc-4475-be67-3c17d5120e3f",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_taxClass_5388\",\r\n    \"description\": \"Tax class\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/taxClass/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxClass",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed501e0a-4cf9-426e-95fd-2ead16cd2c7f",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5388\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "tax|{{testCode}}_TAX_5388_20|VAT 20%|20|445710000",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "18251001-88bb-49cd-b2be-dc1eddc33c91",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{request.label.1}}\",\n  \"description\": \"{{request.label.2}}\",\n  \"percent\": \"{{request.label.3}}\",\n  \"accountingCode\": \"{{request.label.4}}\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/tax/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"tax",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Mapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0d00234-9544-46f1-9a14-d17f12f0745b",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountTaxCategoryCode\": \"{{testCode}}_taxCategory_5388\",\r\n    \"chargeTaxClassCode\": \"{{testCode}}_taxClass_5388\",\r\n    \"taxCode\": \"{{testCode}}_TAX_5388_20\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/taxMapping/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxMapping",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "INV_CATEGORY|{{testCode}}_INV_CAT_5388",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af7c32c8-4ada-4bf4-8960-9cbf7cdc4ba2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\": \"{{request.label.1}}\",\n\t\"description\": \"Invoice category\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoiceCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "INV_CATEGORY|{{testCode}}_INV_CAT_5388|{{testCode}}_INV_SUBCAT_5388",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dff3de3e-9862-4743-b089-61182ead7c97",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\": \"{{request.label.2}}\",\n\t\"invoiceCategory\": \"{{request.label.1}}\",\n\t\"accountingCode\": \"701000000\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoiceSubCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa5f85d9-9c19-4341-8c3a-8b3131a92a62",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_REC_5388\",\r\n\t\"invoiceSubCategory\": \"{{testCode}}_INV_SUBCAT_5388\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5388_REC\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n\t\"taxClassCode\" : \"{{testCode}}_taxClass_5388\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"recurringChargeTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Service",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0300efe4-3ef9-4df4-85ed-7f678d6bf231",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_SERVICE_5388\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{testCode}}_REC_5388\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"serviceTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Offer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44ac0310-8687-4d0b-acd9-889348407027",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_OFFER_5388\",\n    \"name\": \"{{testCode}}_OFFER_5388\",\n    \"disabled\": \"false\",\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"{{testCode}}_SERVICE_5388\"\n            }\n        }\n    ],\n    \"lifeCycleStatus\": \"ACTIVE\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"offerTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Price Plan  Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b1b825f-c6d5-4f74-b345-0b8902b50d48",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_REC_5388\",\r\n\t\"eventCode\": \"{{testCode}}_REC_5388\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"pricePlan",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2d0e301-ce4c-42bf-ae1f-e1d9441c29c8",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5388_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5388\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5388_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5388\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10708698-96da-45ac-a549-6308e57c8b26",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1bf8e15b-5b55-4601-a001-b2b4d715760d",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus2Month = moment().startOf('month').add(-2, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus2Month\", todayMinus2Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_SUB_5388_1\",\r\n    \"userAccount\": \"UA_{{testCode}}_CH_5388_1\",\r\n    \"offerTemplate\": \"{{testCode}}_OFFER_5388\",\r\n    \"subscriptionDate\": \"{{todayMinus2Month}}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate services 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c285e969-2d1d-4559-aaf0-df94f40ef7b0",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "168845c8-f352-46b4-8d4b-02f66c180a32",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus2Month = moment().startOf('month').add(-2, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus2Month\", todayMinus2Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscription\": \"{{testCode}}_SUB_5388_1\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{testCode}}_SERVICE_5388\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{todayMinus2Month}}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/activateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"activateServices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create script",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df986687-0fc6-4027-8a2e-dd0bda69180f",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql();",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "         \t\n\n<ScriptInstance code=\"org.meveo.test.InvoiceNotifications{{testCode}}Script\">\n    <type>JAVA</type>\n    <script>\n        <![CDATA[\n\t\t\tpackage org.meveo.test;\t\t\t\n\t\t\timport java.util.Map;\n\t\t\timport java.math.BigDecimal;\n\t\t\timport org.meveo.admin.exception.BusinessException;\n\t\t\timport org.meveo.model.admin.User;\n\t\t\timport org.meveo.model.crm.Provider;\n\t\t\timport org.slf4j.Logger;\n\t\t\timport org.slf4j.LoggerFactory;\n\t\t\timport org.meveo.service.script.Script;\n\t\t\timport org.meveo.model.billing.Invoice;\n\t\t\t\n\t\t\tpublic class InvoiceNotifications{{testCode}}Script extends Script {\n\t\t\t  \t\n\t\t\t\tpublic void execute(Map<String,Object> context) throws BusinessException{\n\t\t\t\t\tInvoice invoice = (Invoice)context.get(Script.CONTEXT_ENTITY_OR_EVENT);\n\t\t\t\t\tinvoice.setComment((invoice.getComment()==null?\"\":invoice.getComment())+\" \"+context.get(\"comment\"));\n\t\t\t\t}\n\t\t\t}\n\t\t   ]]>\n            \n    \n    </script>\n</ScriptInstance>"
								},
								"url": {
									"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Invoice number assigned notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f31448d-749c-4ba6-9325-2d0d0d4ad5b6",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_NOTIF_5388_INVOICE_NUMBER_ASSIGNED\",\n    \"disabled\": false,\n    \"classNameFilter\": \"org.meveo.model.billing.Invoice\",\n    \"eventTypeFilter\": \"INVOICE_NUMBER_ASSIGNED\",\n    \"scriptInstanceCode\": \"org.meveo.test.InvoiceNotifications{{testCode}}Script\",\n    \"scriptParams\": {\n        \"comment\": \"invoice_number_assigned\"\n    },\n    \"priority\": 1,\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/notification/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Invoice xml generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a711cd3-0d70-4a12-8829-ca73856010da",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_NOTIF_5388_INVOICE_XML_GENERATED\",\n    \"disabled\": false,\n    \"classNameFilter\": \"org.meveo.model.billing.Invoice\",\n    \"eventTypeFilter\": \"XML_GENERATED\",\n    \"scriptInstanceCode\": \"org.meveo.test.InvoiceNotifications{{testCode}}Script\",\n    \"scriptParams\": {\n        \"comment\": \"xml_generated\"\n    },\n    \"priority\": 1,\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/notification/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Invoice pdf generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7651c38-6e28-415e-be1e-bce32e4047d0",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_NOTIF_5388_INVOICE_PDF_GENERATED\",\n    \"disabled\": false,\n    \"classNameFilter\": \"org.meveo.model.billing.Invoice\",\n    \"eventTypeFilter\": \"PDF_GENERATED\",\n    \"scriptInstanceCode\": \"org.meveo.test.InvoiceNotifications{{testCode}}Script\",\n    \"scriptParams\": {\n        \"comment\": \"pdf_generated\"\n    },\n    \"priority\": 1,\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/notification/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"createOrUpdate"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Check wallet operations for account 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed822888-c3cd-4f2d-a7b3-9eb740de8193",
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    var expected = moment().zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\");\r",
											"    pm.expect(expected).is.to.equal(moment(jsonData.data[0].operationDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"subscription.code\": \"{{testCode}}_SUB_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"operationDate\",\n    \"sortOrder\":\"DESCENDING\",\n    \"genericFields\":[\"id\",\"code\", \"description\", \"operationDate\", \"startDate\", \"endDate\", \"amountWithoutTax\", \"quantity\", \"status\"]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/WalletOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"WalletOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute RT job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "671f331f-57f0-4768-9b03-1a6a331eb62c",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){",
											"          console.log(\"Sleeping for 5 seconds before next request.\");",
											"  }, 5000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"RT_Job\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check rated transactions status Open",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cc51049-0dfd-4424-808d-b9050045df1c",
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    var expected = moment().zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\");\r",
											"    pm.expect(expected).is.to.equal(moment(jsonData.data[0].usageDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"subscription.code\": \"{{testCode}}_SUB_5388_1\",\n        \"status\":\"OPEN\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"usageDate\",\n    \"sortOrder\":\"DESCENDING\",\n    \"genericFields\":[\"id\",\"code\", \"description\", \"usageDate\", \"startDate\", \"endDate\", \"amountWithoutTax\", \"quantity\", \"status\"]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/RatedTransaction",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"RatedTransaction"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Billing run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd407895-9c75-478c-b16a-2567c794573c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billingCycleCode\": \"{{testCode}}_BC_5388_1\",\n    \"billingRunTypeEnum\": \"FULL_AUTOMATIC\",\n    \"referenceDate\": \"NEXT_INVOICE_DATE\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/invoicing/createBillingRun",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"invoicing",
										"createBillingRun"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute Invoicing job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62674e29-1a84-4af6-b779-660918d4aa2e",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"INV_JOB\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "926bd676-9801-4c3f-8366-f2a20c345010",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\" invoice_number_assigned\").is.to.equal(jsonData.data[0].comment);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"billingAccount.code\": \"BA_{{testCode}}_CH_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"id\",\n    \"sortOrder\":\"DESCENDING\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/Invoice",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"Invoice"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute XML job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b531075b-51cf-4ede-959e-f02f5f751783",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"XML_JOB\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Invoice after XML",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd1b4594-ada6-4175-b2a5-e0187c2e477d",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\" invoice_number_assigned xml_generated\").is.to.equal(jsonData.data[0].comment);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"billingAccount.code\": \"BA_{{testCode}}_CH_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"id\",\n    \"sortOrder\":\"DESCENDING\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/Invoice",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"Invoice"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute PDF job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c2f9672-3f24-4090-a9e4-12914a5ddb53",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"PDF_JOB\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Invoice after PDF",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0b652a7-10a2-4824-91ea-0ae466535b53",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\" invoice_number_assigned xml_generated pdf_generated\").is.to.equal(jsonData.data[0].comment);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"billingAccount.code\": \"BA_{{testCode}}_CH_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"id\",\n    \"sortOrder\":\"DESCENDING\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/Invoice",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"Invoice"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cleanup",
					"item": [
						{
							"name": "Delete Invoice number assigned notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ca9eea8-a7ac-4721-9eef-c08b24318bd3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{opencell.url}}/notification/{{testCode}}_NOTIF_5388_INVOICE_NUMBER_ASSIGNED",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"{{testCode}}_NOTIF_5388_INVOICE_NUMBER_ASSIGNED"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Invoice XML generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c29e1719-6541-47de-90fb-157e83f4aa08",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{opencell.url}}/notification/{{testCode}}_NOTIF_5388_INVOICE_XML_GENERATED",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"{{testCode}}_NOTIF_5388_INVOICE_XML_GENERATED"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Invoice PDF generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78a9ca6c-f526-48d5-8214-ebc5fd8f1ab1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{opencell.url}}/notification/{{testCode}}_NOTIF_5388_INVOICE_PDF_GENERATED",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"{{testCode}}_NOTIF_5388_INVOICE_PDF_GENERATED"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e117c42d-400b-4378-80cc-b59e16d45635",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"timestamp.iso\", (new Date()).toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cbf6cda8-99a0-45c7-8ea2-0d697fdeb0aa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5389 - [API] Get /invoice : missing invoice status",
			"item": [
				{
					"name": "POST /invoice/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c755726-c090-4572-a4a6-e7a7f57c3aa3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test Field Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoices[0].status).to.eql(\"GENERATED\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /invoice/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3b2da36-6c1e-4f09-83d1-ca8f7b00e6bf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test Field Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoices[0].status).to.eql(\"GENERATED\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83648072-cb73-4a2e-9355-679c4771fdab",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test Field Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoice.status).to.eql(\"GENERATED\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.superadmin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.superadmin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice?invoiceNumber=000000001",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice"
							],
							"query": [
								{
									"key": "invoiceNumber",
									"value": "000000001"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5398 - ServiceTemplate update API should not require any fields",
			"item": [
				{
					"name": "Update service template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"4_SE_CLASSIC_COMMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/catalog/serviceTemplate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"catalog",
								"serviceTemplate"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5402 - BA update API",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d500e061-387e-48ff-a917-6a4c722ace5a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5402_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63f70380-2b0d-412a-899e-115111a1bfc7",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5402_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5402_BC\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9908226d-0211-4bce-b2cb-5c175a0c7306",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5402\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3faac15-af72-4664-bf63-6b0cc294bd88",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5402\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a042ebe-1efc-4de2-a81a-f3d8c2684be8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5402_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5402\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5402_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5402\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Check BA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7054fb42-5163-4e9a-b19b-ddc860b62bd0",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"MR\").is.to.equal(jsonData.billingAccount.name.title);\r",
											"    pm.expect(\"created\").is.to.equal(jsonData.billingAccount.name.firstName);\r",
											"    pm.expect(\"TEST\").is.to.equal(jsonData.billingAccount.name.lastName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA - last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53730a32-e232-4528-bc29-b5f7a93e6bdb",
										"exec": [
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5402_1\",\n    \"name\": {\n        \"lastName\": \"Changed\"\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check BA after update - last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50a01d95-32b1-456d-aa50-680546f0db43",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"MR\").is.to.equal(jsonData.billingAccount.name.title);\r",
											"    pm.expect(\"created\").is.to.equal(jsonData.billingAccount.name.firstName);\r",
											"    pm.expect(\"Changed\").is.to.equal(jsonData.billingAccount.name.lastName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA - title",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c714c549-2e7b-4f6b-837c-8c7b59965322",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5402_1\",\n    \"name\": {\n    \t\"title\":\"\"\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check BA after update - title",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1459fdde-f6f4-41b7-bcf5-1840b0545134",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(null).is.to.equal(jsonData.billingAccount.name.title);\r",
											"    pm.expect(\"created\").is.to.equal(jsonData.billingAccount.name.firstName);\r",
											"    pm.expect(\"Changed\").is.to.equal(jsonData.billingAccount.name.lastName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA - delete name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95b66ad4-6260-4d4d-8cc3-892e711463c1",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5402_1\",\n    \"name\": {\n        \"title\": \"\",\n        \"firstName\": \"\",\n        \"lastName\": \"\"\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check BA after update",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30f6ac97-4abd-4ac7-93ca-ba720eb96160",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(undefined).is.to.equal(jsonData.billingAccount.name);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6c903716-375c-42ee-bd46-0f78627da7d4",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"timestamp.iso\", (new Date()).toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3cb83ead-c6cf-44a3-962d-325acaa2105a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5404 - Order WO by startDate before aggregation",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Settings",
							"item": [
								{
									"name": "Provider & Seller",
									"item": [
										{
											"name": "Seller hierarchy",
											"item": [
												{
													"name": "S|MAIN_SELLER|Opencell",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"code\" : \"{{request.label.1}}\",\r\n\t\"description\" : \"{{request.label.2}}\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"countryCode\": \"FR\",\r\n    \"languageCode\": \"ENG\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": \"Esc. A\",\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": null\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"billing@opencellsoft.com\",\r\n        \"phone\": \"0123456789\",\r\n        \"mobile\": \"0678912345\",\r\n        \"fax\": null\r\n    }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "S|S_LVL1|Seller level 1|MAIN_SELLER",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Proxy-Authorization",
																"value": "{{proxy.auth}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"code\" : \"{{request.label.1}}\",\n\t\"description\" : \"{{request.label.2}}\",\n\t\"parentSeller\" : \"{{request.label.3}}\",\n\t\"currencyCode\" : \"EUR\",\n\t\"countryCode\" : \"FR\",\n\t\"languageCode\" : \"FRA\",\n    \"contactInformation\": null,\n    \"address\": {\n        \"address1\": \"52 rue KlÃ©ber\",\n        \"address2\": null,\n        \"address3\": null,\n        \"zipCode\": \"92300\",\n        \"city\": \"Levallois-Perret\",\n        \"country\": \"FR\",\n        \"state\": null\n    },\n    \"invoiceTypeSequences\": {\n        \"COM\": {\n            \"prefixEL\": \"{{request.label.1}}\",\n            \"sequenceSize\": 6\n        }\n    },\n    \"customFields\": { \"customField\": []}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "S|S_LVL2|Seller level 2|S_LVL1",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"code\" : \"{{request.label.1}}\",\n\t\"description\" : \"{{request.label.2}}\",\n\t\"parentSeller\" : \"{{request.label.3}}\",\n\t\"currencyCode\" : \"EUR\",\n\t\"countryCode\" : \"FR\",\n\t\"languageCode\" : \"FRA\",\n    \"contactInformation\": null,\n    \"registrationNo\": \"REG999999999\",\n    \"vatNo\": \"VAT999999999\",\n    \"address\": {\n        \"address1\": \"52 rue KlÃ©ber\",\n        \"address2\": null,\n        \"address3\": null,\n        \"zipCode\": \"92300\",\n        \"city\": \"Levallois-Perret\",\n        \"country\": \"FR\",\n        \"state\": null\n    },\n    \"customFields\": { \"customField\": []}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "CFT|code=CF_PROV_MATRIX_MULTI|target=Provider|type=MULTI_VALUE|storage=MATRIX",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{testCode}}\",\n    \"description\": \"Custom field {{storage}} of {{inputType}} on {{target}}\",\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"[fr] Champ personnalisÃ© {{storage}} de {{inputType}} sur {{target}}\"\n        },\n        {\n            \"languageCode\": \"ENG\",\n            \"description\": \"[en] Custom field {{storage}} of {{inputType}} on {{target}}\"\n        }\n    ],\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"useInheritedAsDefaultValue\": false,\n    \"storageType\": \"{{storage}}\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n\t\"guiPosition\": \"tab:CustomTab|ENG=CustomTab(en)|FRA=CustomTab(fr):0;fieldGroup:CustomGroup|ENG=CustomGroup(en)|FRA=CustomGroup(fr):0;field:0\",\n    \"applicableOnEl\": \"#{ true }\",\n    \"matrixColumn\": [\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 1,\n            \"code\": \"inputString\",\n            \"label\": \"Input string\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 2,\n            \"code\": \"inputRON\",\n            \"label\": \"Input RON\",\n            \"keyType\": \"RON\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 1,\n            \"code\": \"outputLong\",\n            \"label\": \"Output long\",\n            \"keyType\": \"LONG\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 2,\n            \"code\": \"outputDouble\",\n            \"label\": \"Output double\",\n            \"keyType\": \"DOUBLE\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 3,\n            \"code\": \"outputString\",\n            \"label\": \"Output string\",\n            \"keyType\": \"STRING\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "providerCF|code=CF_PROV_MATRIX_MULTI",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customFields\": {\n        \"customField\": [\n                {\n                    \"code\": \"{{testCode}}\",\n                    \"mapValue\": {\n                        \"AAA|<0.0\": {\n                            \"value\": \"0|0.0|Zero\"\n                        },\n                        \"AAA|0.0<111.1\": {\n                            \"value\": \"1|1.1|One\"\n                        },\n                        \"AAA|111.1<\": {\n                            \"value\": \"2|2.2|Two\"\n                        },\n                        \"BBB|0.0<111.1\": {\n                            \"value\": \"3|3.3|Three\"\n                        },\n                        \"BBB|111.1<\": {\n                            \"value\": \"4|4.4|Four\"\n                        }\n                    }\n                }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/updateProviderCF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"updateProviderCF"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{provider.code}}\",\n    \"description\": \"{{template.label}}\",\n    \"enterprise\": \"true\",\n    \"rounding\": 6,\n    \"roundingMode\": \"NEAREST\",\n    \"invoiceRounding\": 2,\n    \"invoiceRoundingMode\": \"NEAREST\",\n    \"invoiceConfiguration\": {\n        \"displaySubscriptions\": \"true\",\n        \"displayServices\": \"true\",\n        \"displayOffers\": \"true\",\n        \"displayEdrs\": \"true\",\n        \"displayProvider\": \"true\",\n        \"displayCfAsXML\": \"true\",\n        \"displayPricePlans\": \"true\",\n        \"displayDetail\": \"true\",\n        \"displayChargesPeriods\": \"true\",\n        \"displayFreeTransacInInvoice\": \"true\",\n        \"displayBillingCycle\": \"true\",\n        \"displayOrders\": \"true\"\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CF_PROV_PROJECT_VERSION",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "01ef244b-ea7a-48e0-b81e-e79611eab833",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label}}_{{$timestamp}}\",\r\n    \"description\": \"{{project.code}} {{project.type}} {{project.version}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"Provider\",\r\n    \"defaultValue\": \"{{timestamp.iso}}\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false,\r\n    \"guiPosition\": \"tab:Project versions:999\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Calendars",
									"item": [
										{
											"name": "CAL_PERIOD_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_YEARLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 12,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_DAILY_ONCE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 1\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 5,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 2,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_MONTHLY_1ST",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "d1adc960-bce8-4d4a-9a01-dce49bcd3d31",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"1st of the month\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n  {\n    \"day\": \"1\",\n    \"month\": \"JANUARY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"FEBRUARY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"MARCH\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"APRIL\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"MAY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"JUNE\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"JULY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"AUGUST\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"SEPTEMBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"OCTOBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"NOVEMBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"DECEMBER\"\n  }\n  ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 5,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 2,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Billing cycles",
									"item": [
										{
											"name": "BC_PERIOD_DAILY_ONCE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"One day period, only once\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"0\",\n  \"invoicingThreshold\": 0.01,\n  \"calendar\": \"CAL_PERIOD_DAILY_ONCE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_MONTHLY_1ST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"Monthly 1st\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"1\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"CAL_MONTHLY_1ST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_MONTHLY_PERIOD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"Monthly period\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"2\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"CAL_PERIOD_MONTHLY\",\n  \"referenceDate\": \"NEXT_INVOICE_DATE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Taxes",
									"item": [
										{
											"name": "Tax rates",
											"item": [
												{
													"name": "tax|code=TAX_20|desc=VAT 20%|percentage=20|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "107c07cd-bacf-4be7-ad9e-eaf1a0324067",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=TAX_10|desc=VAT 10%|percentage=10|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "f55a1d50-5103-44a5-848a-f430d0402eda",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=NO_TAX|desc=No tax|percentage=0|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "84b098f2-06b7-4a70-b577-477e1d902eea",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax categories (account)",
											"item": [
												{
													"name": "taxCat|code=REGULAR|desc=Regular accounts",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "2f82c554-0aa9-4f27-b8f7-97c8fec7d250",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxCat|code=EXEMPTED|desc=Exempted accounts",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "ee2a2a7e-f677-492e-a87b-2b51cc29210a",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax classes (charge)",
											"item": [
												{
													"name": "taxClass|code=NORMAL|desc=Product with normal tax",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "0e7768d3-8581-428a-9f50-1130b6ed84e3",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=REDUCED|desc=Products with reduced tax",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "860a5c48-3fb1-49c8-b7b3-d73457115345",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=NO_TAX|desc=Products with no VAT",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "3f6b4d16-90f0-4c56-ae92-76200d45e1f3",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax mapping",
											"item": [
												{
													"name": "taxMapping|priority=100|taxCat=EXEMPTED|taxClass=|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "9e67ed9a-4969-40b9-96f8-1d6b1969d16a",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=REGULAR|taxClass=NO_TAX|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "13fff67d-26c8-4385-a32a-c60e3ed66fd9",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=1|taxCat=REGULAR|taxClass=NORMAL|buyer=|tax=TAX_20",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "f51634ba-d919-4993-a461-d18f6b1c1807",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=2|taxCat=REGULAR|taxClass=REDUCED|buyer=|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "013c1bed-6d4c-4e5b-aa97-582f4b4f8741",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=10|taxCat=REGULAR|taxClass=NORMAL|buyer=US|tax=TAX_10",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "fd1885be-9c24-447e-bd02-c8eafc17cb6c",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account",
									"item": [
										{
											"name": "title|code=MR|desc=Mr",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"isCompany\": \"false\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "custCat|code=CLIENT|taxCat=REGULAR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"Client\",\r\n    \"taxCategoryCode\": \"{{taxCat}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice",
									"item": [
										{
											"name": "Invoice Categories",
											"item": [
												{
													"name": "ICAT_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_PRD\",\n  \"description\": \"Product category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_PRD\",\n  \"description\": \"Product sub-category\",\n  \"invoiceCategory\": \"ICAT_PRD\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_REC",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_REC\",\n  \"description\": \"Recurring category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_REC",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_REC\",\n  \"description\": \"Recurring default sub-category\",\n  \"invoiceCategory\": \"ICAT_REC\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_OSH",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_OSH\",\n  \"description\": \"One shot category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OSS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OSS\",\n  \"description\": \"Oneshot Subscription sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OST",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OST\",\n  \"description\": \"Oneshot Termination sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OSO",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OSO\",\n  \"description\": \"Oneshot Other sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_USG",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_USG\",\n  \"description\": \"Usage category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_USG",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_USG\",\n  \"description\": \"Usage default sub-category\",\n  \"invoiceCategory\": \"ICAT_USG\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "invoiceType|code=COM|desc=Invoice",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{code}}\",\r\n  \"description\": \"{{desc}}\",\r\n  \"occTemplateCode\": \"INV_STD\",\r\n  \"occTemplateNegativeCode\": null,\r\n  \"billingTemplateName\": \"default\",\r\n  \"sequenceDto\": {\r\n    \"prefixEL\": \"#{invoice.invoiceType.code}-{{template.code}}-#{invoice.seller.code}-#{mv:formatDate(invoice.getInvoiceDate(),'yyyyMMdd')}-\",\r\n    \"sequenceSize\": 4,\r\n    \"currentInvoiceNb\":null\r\n  },\r\n  \"xmlFilenameEL\": \"XML_#{invoice.billingAccount.code}_#{invoice.invoiceNumber}\",\r\n  \"pdfFilenameEL\": \"PDF_#{invoice.billingAccount.code}_#{invoice.invoiceNumber}\",\r\n  \"sellerSequence\": null,\r\n  \"appliesTo\": [\r\n    \"COM\",\r\n    \"ADJ\"\r\n  ],\r\n  \"matchingAuto\": false,\r\n  \"useSelfSequence\": true\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Termination reasons",
									"item": [
										{
											"name": "TR_NONE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"TR_NONE\",\n\t\"description\": \"Termination with no action (no fees, no reimbursment)\",\n\t\"applyAgreement\": false,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": false,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_AGREEMENT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"TR_AGREEMENT\",\n\t\"description\": \"Termination with Charge Agreement\",\n\t\"applyAgreement\": true,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": false,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_REIMBURSE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Termination with Reimbursment\",\n    \"applyAgreement\": false,\n    \"applyReimbursment\": true,\n    \"applyTerminationCharges\": false,\n    \"reimburseOneshots\": true,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_FEE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{request.label}}\",\n\t\"description\": \"Termination fee\",\n\t\"applyAgreement\": false,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": true,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Notifications",
									"item": [
										{
											"name": "SCRIPT|CreateAccess|Creates an access on Subscription creation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac9c45dd-7476-4606-80f6-20b7a20f5ce7",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Date;\r\nimport java.util.Map;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.admin.User;\r\nimport org.meveo.model.billing.Subscription;\r\nimport org.meveo.model.mediation.Access;\r\n\r\nimport org.meveo.service.medina.impl.AccessService;\r\nimport org.meveo.service.script.Script;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class CreateAccess extends Script {    \r\n    private static final Logger log = LoggerFactory.getLogger(CreateAccess.class);        \r\n\r\n    private AccessService accessService = (AccessService) getServiceInterface(\"AccessService\");\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context={}\", context);\r\n\r\n        Subscription subscription = (Subscription) context.get(\"entity\");\r\n        if(subscription == null){\r\n            throw new BusinessException(\"subscription is null\");\r\n        }\r\n        log.debug(\"subscription={}\", subscription);\r\n\r\n        Access access = new Access();\r\n        access.setSubscription(subscription);\r\n        access.setAccessUserId(subscription.getCode());\r\n        access.setStartDate(null);\r\n        access.setEndDate(null);\r\n        accessService.create(access);\r\n    }\r\n}]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "notifSubscriptionCreate",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"updatedCode\": null,\r\n    \"code\": \"subscriptionCreate\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.CreateAccess\",\r\n    \"scriptParams\": {\r\n      \"entity\": \"#{event}\"\r\n    },\r\n    \"counterTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Channels",
									"item": [
										{
											"name": "chan|code=PHONE|desc=Telephone",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=EMAIL|desc=E-mail",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=WEB|desc=Online store",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=RETAIL|desc=Retail store",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "aggregationMatrix",
									"item": [
										{
											"name": "CF WalletOperation",
											"item": [
												{
													"name": "cf_wo_option_tarifaire_fournisseur",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "056d1701-bc20-4a10-963e-18e1ca5edc7f",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label}}\",\r\n    \"description\": \"option tarifaire fournisseur\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_id_operation_de_traitement",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "b42c3abd-fb5a-47d1-9879-3c68700157bf",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label}}\",\r\n    \"description\": \"operation de traitement\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_niveau_elec_verte|niveau elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "a9ed0860-3c98-441c-ab42-919c61fef91b",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_origine_elec_verte|origine elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "49a2abe5-f639-42e5-a05c-9fb8f5bb8119",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_techno_elec_verte|Techno elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "74b7ff76-f885-47ed-8234-eb4409ef7b16",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "CF RatedTransaction",
											"item": [
												{
													"name": "cf_rt_niveau_elec_verte|niveau elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4bd52333-3964-4ff1-b02e-4323a6c336d9",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"RatedTransaction\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_rt_origine_elec_verte|origine elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "a72be8db-0709-4734-9e87-50fdc6187f7f",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"RatedTransaction\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_rt_techno_elec_verte|Techno elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "8f086855-4add-49d9-b3f8-32b4a30ec938",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"RatedTransaction\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "aggregation ABO ENErGIE",
											"item": [
												{
													"name": "Create|WalletOperationAggregationSettings|code=aggreg_abo_energie",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "aff49275-bbb6-4c12-ae92-1de1abed8798",
																"exec": [
																	"\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.globals.set(\"aggregationId\", jsonData.id);\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\":\"{{code}}\",\r\n    \"globalAggregation\":false,\r\n    \"periodAggregation\":true,\r\n    \"periodEndDateIncluded\":false,\r\n    \"aggregationRounding\":1,\r\n    \"aggregationRoundingMode\":\"NEAREST\",\r\n    \"additionalOrderBy\":\"id\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=invoiceSubCategory|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=tax|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=taxClass|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=amountWithoutTax|action=SUM|value=|alias=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"groupBy\":\"SIGN\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=amountWithTax|action=SUM|value=|alias=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"groupBy\":\"SIGN\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=amountTax|action=SUM|value=|alias=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"groupBy\":\"SIGN\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=edr|action=EMPTY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=unitAmountWithoutTax|action=AVG|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=unitAmountWithTax|action=AVG|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=unitAmountTax|action=AVG|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=code|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=cf_wo_option_tarifaire_fournisseur|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"customField\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=cf_wo_id_operation_de_traitement|action=KEY|value=|alias=parameter1",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"customField\":true,\r\n    \"alias\":\"parameter1\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=endDate|action=MAX|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=startDate|action=MIN|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=operationDate|action=MIN|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=seller|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=subscription.userAccount.billingAccount|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Filters",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Catalog",
							"item": [
								{
									"name": "Rating scripts",
									"item": [
										{
											"name": "SCRIPT|LogContext|Logs the context",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "534c2238-c49d-4af9-ab3b-ebee7cee1bb3",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class LogContext extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogContext.class);\r\n    \r\n    @Override\r\n    public void execute(Map<String, Object> context) {\r\n        log.trace(\"EXECUTE context {}\", context);\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|code=ThrowException|desc=Throws an exception with WO content",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e4c0cc9-5fd7-4bf6-90c0-9890bf7aa478",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{code}}</code>\r\n        <description>{{desc}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\n\r\n/**\r\n * A Rating Script that throws an exception with WO content\r\n * @author schambrin\r\n */\r\npublic class ThrowException extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(ThrowException.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context {}\", context);\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n\t\tString msg = \"WalletOperation {\"\r\n\t\t\t+\"code:\"+wo.getCode()+\", \"\r\n\t\t\t+\"description:\"+wo.getDescription()+\", \"\r\n\t\t\t+\"operationDate:\"+wo.getOperationDate()+\", \"\r\n\t\t\t+\"amountWithoutTax:\"+wo.getAmountWithoutTax()+\", \"\r\n\t\t\t+\"tax:\"+wo.getTax()+\", \"\r\n\t\t\t+\"tax_percent:\"+wo.getTaxPercent()\r\n\t\t\t+\"}\";\r\n        log.error(msg);\r\n        throw new BusinessException(msg);\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|InfiniteLoop|Locks into an infinite loop",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "710e1a72-d77d-4e11-ab32-96681c8c7ba8",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class InfiniteLoop extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(InfiniteLoop.class);\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) {\r\n        log.debug(\"EXECUTE context {}\", context);\r\n        log.info(\"CONTEXT_ENTITY={}\", context.get(Script.CONTEXT_ENTITY));\r\n        try {\r\n            while (true) {\r\n                log.trace(\"[RATING] Sleeping 5s...\");\r\n                Thread.sleep(5000);\r\n            }\r\n        } catch (java.lang.InterruptedException e) {\r\n            log.warn(\"Interrupted !!!\");\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.RatingSetTax|Forces tax on WO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3072f300-16bf-4b9a-9905-f16fb87f3bcc",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * A Rating Script to force a tax\r\n * @author schambrin\r\n */\r\npublic class RatingSetTax extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(RatingSetTax.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context {}\", context);\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"edr.taxCode={}\",wo.getEdr().getParameter5());\r\n            Tax tax = taxService.findByCode(wo.getEdr().getParameter5());\r\n            \r\n            if( tax != null){\r\n                log.info(\"override tax={}\", tax);\r\n                wo.setTax(tax);\r\n                wo.setTaxPercent(tax.getPercent());\r\n                ratingService.calculateAmounts(wo,wo.getUnitAmountWithoutTax(),null);\r\n            }\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.LogWalletOperation|Logs the WalletOperation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5eab3986-f702-4da7-931e-0e205dcc027c",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class LogWalletOperation extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogWalletOperation.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"wo={}\",new WalletOperationDto(wo));\r\n        \tlog.info(\"wo.tax={}\", wo.getTax());\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.RatingError|Throws an error if parameter2 is ERROR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c0dfcb16-211a-49cd-8072-154dbface592",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\n\r\n/**\r\n * A Rating Script that throws an exception if param2 is ERROR\r\n * takes param3 as error message\r\n * @author schambrin\r\n */\r\npublic class RatingError extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(RatingError.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        // log.info(\"EXECUTE context {}\", context);\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        if( \"ERROR\".equals(wo.getParameter2()) ){\r\n            // log.error(\"message: {}\",wo.getParameter3());\r\n            throw new BusinessException(wo.getParameter3());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "OfferTemplateCategory",
									"item": [
										{
											"name": "ocat|code=OCAT_ROOT|parent=",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Offer category {{code}}\",\n    \"disabled\": false,\n    \"name\": \"OCat {{code}}\",\n    \"offerTemplateCategoryCode\": \"{{parent}}\",\n    \"active\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "ocat|code=OCAT_CHILD|parent=OCAT_ROOT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Offer category {{code}}\",\n    \"disabled\": false,\n    \"name\": \"OCat {{code}}\",\n    \"offerTemplateCategoryCode\": \"{{parent}}\",\n    \"active\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Custom Fields",
									"item": [
										{
											"name": "Service",
											"item": [
												{
													"name": "CF_SE_DOUBLE (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE\",\n    \"description\": \"A double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE\",\n    \"description\": \"A double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": false,\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE_VERSION (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE_VERSION\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE_VERSION (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE_VERSION\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": true,\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING_TEMPLATE_ONLY (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING_TEMPLATE_ONLY\",\n    \"description\": \"A String on service template only\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"from service template\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING_INSTANCE_ONLY (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING_INSTANCE_ONLY\",\n    \"description\": \"A String on service instance only\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"from service instance\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING\",\n    \"description\": \"A String from service template\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"from service template\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING\",\n    \"description\": \"A String from service instance\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"from service instance\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_TIER_PRICE (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_TIER_PRICE\",\n    \"description\": \"Tiered pricing\",\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"Tarif par tranches\"\n        },\n        {\n            \"languageCode\": \"ENG\",\n            \"description\": \"Tiered pricing\"\n        }\n    ],\n    \"fieldType\": \"MULTI_VALUE\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"useInheritedAsDefaultValue\": true,\n    \"storageType\": \"MATRIX\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n\t\"guiPosition\": \"tab:Pricing|ENG=Pricing|FRA=Tarification:0;fieldGroup:Price|ENG=Price|FRA=Prix:0;field:40\",\n    \"applicableOnEl\": \"#{ true }\",\n    \"matrixColumn\": [\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 1,\n            \"code\": \"tier\",\n            \"label\": \"Tier\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 1,\n            \"code\": \"volume\",\n            \"label\": \"Volume\",\n            \"keyType\": \"LONG\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 2,\n            \"code\": \"price\",\n            \"label\": \"Price\",\n            \"keyType\": \"DOUBLE\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 3,\n            \"code\": \"label\",\n            \"label\": \"Label\",\n            \"keyType\": \"STRING\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CFT|code=CF_SE_MAP_RON_DOUBLE|target=ServiceTemplate|type=DOUBLE|storage=MAP|desc=Map [RON]=Double",
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"fieldType\": \"{{type}}\",\r\n    \"appliesTo\": \"{{target}}\",\r\n    \"defaultValue\": 1.0,\r\n    \"storageType\": \"{{storage}}\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"triggerEndPeriodEvent\": false,\r\n    \"calendar\": null,\r\n    \"cacheValueTimeperiod\": null,\r\n    \"entityClazz\": null,\r\n    \"listValues\": null,\r\n    \"allowEdit\": true,\r\n    \"hideOnNew\": false,\r\n    \"maxValue\": null,\r\n    \"minValue\": null,\r\n    \"regExp\": null,\r\n    \"cacheValue\": false,\r\n    \"mapKeyType\": \"RON\",\r\n    \"applicableOnEl\": null,\r\n    \"indexType\": null,\r\n    \"matrixColumn\": null,\r\n    \"fieldCode\": null,\r\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\r\n  }"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CFT|code=CF_SE_MAP_RON_DOUBLE|target=ServiceInstance|type=DOUBLE|storage=MAP|desc=Map [RON]=Double",
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"fieldType\": \"{{type}}\",\r\n    \"appliesTo\": \"{{target}}\",\r\n    \"defaultValue\": null,\r\n    \"storageType\": \"{{storage}}\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"triggerEndPeriodEvent\": false,\r\n    \"calendar\": null,\r\n    \"cacheValueTimeperiod\": null,\r\n    \"entityClazz\": null,\r\n    \"listValues\": null,\r\n    \"allowEdit\": true,\r\n    \"hideOnNew\": false,\r\n    \"maxValue\": null,\r\n    \"minValue\": null,\r\n    \"regExp\": null,\r\n    \"cacheValue\": false,\r\n    \"mapKeyType\": \"RON\",\r\n    \"applicableOnEl\": null,\r\n    \"indexType\": null,\r\n    \"matrixColumn\": null,\r\n    \"fieldCode\": null,\r\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\r\n  }"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "OfferTemplate",
											"item": [
												{
													"name": "CF|code=CF_OF_STRING|target=OfferTemplate|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "ProductTemplate",
											"item": [
												{
													"name": "CF|code=CF_PR_STRING|target=ProductTemplate|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Counters",
									"item": [
										{
											"name": "counter|CN_USG_COUNTER_3|Counter 3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"CAL_MONTHLY_1ST\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|CN_USG_COUNTER_4|Counter 4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"CAL_MONTHLY_1ST\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_USG_ACCUM_C|type=USAGE|target=CUST|calendar=CAL_MONTHLY_1ST|desc=Accumulates quantities on the Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_EUR_ACCUM_C|type=USAGE_AMOUNT|target=CUST|calendar=CAL_MONTHLY_1ST|desc=Accumulates amounts on the Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_MULTI_ACCUM_C|type=MULTI_VALUE|target=CUST|calendar=MONTHLY|desc=Accumulates quantity for Param2 on Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"USAGE\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true,\n    \"accumulatorType\": \"{{type}}\",\n    \"filterEl\": \"#{ true }\",\n    \"keyEl\": \"#{ op.parameter2 }\",\n    \"valueEl\": \"#{ op.quantity }\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Charges",
									"item": [
										{
											"name": "CH_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_PRD\",\n    \"description\": \"Product\",\n    \"invoiceSubCategory\": \"ISCAT_PRD\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_2MONTHS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_DAILY\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_MONTHLY\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ARR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_REC_ARR\",\n    \"description\": \"Recurring charge ARREAR\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": false,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_2DAYS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT|Charge unit 1",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{request.label.2}}\",\n    \"invoiceSubCategory\": \"ISCAT_USG\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"UNIT\",\n    \"priority\": 10\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_2|Charge unit 2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit2\",\r\n    \"ratingUnitDescription\": \"unit2\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT2\",\r\n    \"triggerNextCharge\": true,\r\n    \"priority\": 20\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_2_bis|Charge unit 2 bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit2\",\r\n    \"ratingUnitDescription\": \"unit2\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT2\",\r\n    \"triggerNextCharge\": true,\r\n    \"priority\": 21\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_3|Charge unit 3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit3\",\r\n    \"ratingUnitDescription\": \"unit3\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT3\",\r\n    \"priority\": 30\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_3_bis|Charge unit 3 bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit3\",\r\n    \"ratingUnitDescription\": \"unit3\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT3\",\r\n    \"priority\": 31\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_4|Charge unit 4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit4\",\r\n    \"ratingUnitDescription\": \"unit4\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT4\",\r\n    \"priority\": 40\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH|code=USG_RON|desc=Charge RON",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.0}}_{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"invoiceSubCategory\": \"ISCAT_USG\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"RON\",\n    \"priority\": 10\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_5MONTHS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_5DAYS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OSS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Subscription\",\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OSS\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Termination\",\n    \"oneShotChargeTemplateType\": \"TERMINATION\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OST\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OSO",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Other\",\n    \"oneShotChargeTemplateType\": \"OTHER\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OSO\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_REC_ADV\",\n    \"description\": \"Recurring charge ADVANCE\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "recurringCharge|CH_REC_ADV|true",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"Recurring charge ADVANCE\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ {{request.label.2}} }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Price Plans",
									"item": [
										{
											"name": "PP_REC_ADV",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_REC_ADV\",\n    \"eventCode\": \"CH_REC_ADV\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_OSS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_OSS\",\n    \"eventCode\": \"CH_OSS\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\",\n    \"scriptInstance\": null\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_OST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_OST\",\n    \"eventCode\": \"CH_OST\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\",\n    \"scriptInstance\": null\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_2MONTHS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_PRD\",\n    \"eventCode\": \"CH_PRD\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_5DAYS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_MONTHLY\",\n    \"amountWithoutTax\": 100.123456789\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_DAILY\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ARR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_REC_ARR\",\n    \"eventCode\": \"CH_REC_ARR\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT\",\n    \"eventCode\": \"CH_USG_UNIT\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT 2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_2\",\n    \"eventCode\": \"CH_USG_UNIT_2\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 2 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_2_bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_2_bis\",\n    \"eventCode\": \"CH_USG_UNIT_2_bis\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 2.5 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_3\",\n    \"eventCode\": \"CH_USG_UNIT_3\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 3 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_3_bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_3_bis\",\n    \"eventCode\": \"CH_USG_UNIT_3_bis\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 3.5 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_4\",\n    \"eventCode\": \"CH_USG_UNIT_4\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 4 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP|code=USG_RON",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.0}}_{{code}}\",\n    \"eventCode\": \"CH_{{code}}\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueByKey(serviceInstance, 'CF_SE_MAP_RON_DOUBLE', op.quantity) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_5MONTHS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_2DAYS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Services",
									"item": [
										{
											"name": "RESET SERVICE LIST (DO NOT EDIT)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "d2d32e3f-fb72-4d18-8551-f90ef9ded569",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "HEAD",
												"header": [],
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_OSS|desc=One-shot subscription service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "8433f029-49bf-49a6-af3f-869b7b0c8ee0",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": {\r\n      \"serviceChargeTemplateSubscription\": [\r\n        { \"code\": \"CH_OSS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												},
												"description": "Should stay first of the list (see script)"
											},
											"response": []
										},
										{
											"name": "SE|code=SE_OST|desc=One-shot termination service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "3a8a109c-048a-44b9-a92f-274cc9f3a014",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 15.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": {\r\n      \"serviceChargeTemplateSubscription\": [\r\n        { \"code\": \"CH_OST\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												},
												"description": "Should stay first of the list (see script)"
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV|desc=Recurring service ADVANCE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "544d758f-f57e-476a-9e67-57928670e136",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT|desc=Unit usage service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "ebc71e42-c01e-4033-860b-2d78a7879b50",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_DOUBLE\",\n                \"doubleValue\": 3\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": null,\n                \"counterTemplate\": null,\n                \"accumulatorCounterTemplates\": {\n                \t\"counterTemplate\": [\n                \t\t\"CN_USG_ACCUM_C\",\n                \t\t\"CN_EUR_ACCUM_C\",\n                \t\t\"CN_MULTI_ACCUM_C\"\n                \t]\n                }\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT_2_3_4|desc=Unit usage service 2, 3, 4",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "d189d722-143f-45bd-90f5-74e36d3003f3",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": {\r\n      \"serviceChargeTemplateUsage\": [\r\n        { \"code\": \"CH_USG_UNIT_2\" },\r\n        { \"code\": \"CH_USG_UNIT_2_bis\" },\r\n        { \"code\": \"CH_USG_UNIT_3\", \"counterTemplate\":\"CN_USG_COUNTER_3\" },\r\n        { \"code\": \"CH_USG_UNIT_3_bis\" },\r\n        { \"code\": \"CH_USG_UNIT_4\", \"counterTemplate\":\"CN_USG_COUNTER_4\" }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_RON|desc=RON usage service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "23e67fa7-b618-4b46-a8d1-f4afaa532e2d",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_MAP_RON_DOUBLE\",\n                \"mapValue\": {\n\"0<10\":   { \"value\": 2.0 },\n\"10<100\": { \"value\": 3.0 },\n\"100<\":   { \"value\": 4.0 }\n                }\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_RON\",\n                \"wallets\": null,\n                \"counterTemplate\": null\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ARR|desc=Recurring service ARREAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "fca7b3dd-28d1-4bc9-a77c-d7bb35b57018",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ARR\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIODS_DAY|desc=Recurring service ADVANCE DAY PERIODS",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "2dc12d97-b36f-4e21-9c2c-b7558a0f72bb",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_DAILY\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_2DAYS\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_5DAYS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIODS_MONTH|desc=Recurring service ADVANCE MONTH PERIODS",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "189dfe66-db88-4fdf-98d3-2f13308a39c8",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_MONTHLY\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_2MONTHS\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_5MONTHS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIOD_DAILY|desc=Recurring service ADVANCE DAILY",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "dc78c9f9-eadc-4d57-8dae-b4b9c08c682c",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_DAILY\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "0be4b9bd-5038-4158-b65d-5b42944f5e12",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"id": "a60cef1d-afeb-4add-866f-bacc6f1307c3",
												"exec": [
													"var services;",
													"var serviceCode;",
													"if(pm.info.requestName==='RESET SERVICE LIST (DO NOT EDIT)') {",
													"    services = \"\";",
													"} else {",
													"    services = pm.globals.get(\"offer.services\");",
													"    serviceCode = pm.globals.get(\"code\");",
													"    if(services === \"\") {",
													"        services = '{\"serviceTemplate\":{\"code\":\"'+serviceCode+'\",\"customFields\":null},\"mandatory\":false,\"incompatibleServiceTemplate\":[]}';",
													"    } else {",
													"        services += '\\n,{\"serviceTemplate\":{\"code\":\"'+serviceCode+'\",\"customFields\":null},\"mandatory\":false,\"incompatibleServiceTemplate\":[]}';",
													"    }",
													"}",
													"",
													"pm.globals.set(\"offer.services\", services);",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Products and Bundles",
									"item": [
										{
											"name": "PR_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"PR_PRD\",\r\n  \"description\": \"Product\",\r\n  \"name\": \"A product has no name (or has it)\",\r\n  \"validFrom\": null,\r\n  \"validTo\": null,\r\n  \"lifeCycleStatus\": \"ACTIVE\",\r\n  \"customFields\": null,\r\n  \"imageBase64\": null,\r\n  \"businessProductModel\": null,\r\n  \"offerTemplateCategory\": null,\r\n  \"productChargeTemplate\": [ { \"code\": \"CH_PRD\" } ],\r\n  \"walletTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Offers",
									"item": [
										{
											"name": "OF|code=OF",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{template.label}} offer {{$timestamp}}\",\n    \"disabled\": false,\n    \"lifeCycleStatus\": \"ACTIVE\",\n    \"bomCode\": null,\n    \"offerTemplateCategoryCode\": null,\n    \"offerProductTemplate\": [\n        {\n            \"productTemplate\": {\n                \"code\": \"PR_PRD\"\n            }\n        }\n    ],\n    \"offerServiceTemplate\": [\n{{offer.services}}\n    ],\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_OF_STRING\",\n                \"stringValue\": \"From OfferTemplate {{code}}\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "OF|code=OF_EMPTY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\":\"{{code}}\",\r\n    \"description\":\"{{template.label}} empty offer {{$timestamp}}\",\r\n    \"disabled\":false,\r\n    \"lifeCycleStatus\":\"ACTIVE\",\r\n    \"bomCode\":null,\r\n    \"offerTemplateCategoryCode\":null,\r\n    \"offerProductTemplate\": null,\r\n    \"offerServiceTemplate\":null,\r\n    \"customFields\": {\r\n    \t\"customField\": [\r\n    \t\t{\r\n    \t\t\t\"code\": \"CF_OF_STRING\",\r\n    \t\t\t\"stringValue\": \"From OfferTemplate {{code}}\"\r\n    \t\t}\r\n    \t]\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "BxM",
									"item": [
										{
											"name": "BSM",
											"item": [
												{
													"name": "BSM_OSS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"BSM_OSS\",\r\n    \"description\": \"BSM Subscription fee\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"SE_OSS\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "BSM_REC_ADV",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"BSM_REC_ADV\",\r\n    \"description\": \"BSM Recurring Advance\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"SE_REC_ADV\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bsm|code=BSM_USG_UNIT|desc=BSM unit usage|service=SE_USG_UNIT",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"{{service}}\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "BPM",
											"item": [
												{
													"name": "bpm|code=BPM_PRD|desc=BPM product|target=PR_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"license\": \"COM\",\r\n    \"productTemplate\": { \"code\": \"{{target}}\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessProductModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessProductModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "BOM",
											"item": [
												{
													"name": "bom|code=BOM_SERVICE|desc=BOM based on offer OF|offer=OF",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": { \"code\": \"{{offer}}\" },\n\t\"moduleItems\": null\n}\n\n"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|install|code=BOM_SERVICE",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|code=BOM_BSM|desc=BOM with BSMs|offer=OF_EMPTY",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": {\n        \"code\": \"{{offer}}\"\n    },\n    \"moduleItems\": [\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_REC_ADV\"\n            }\n        },\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_USG_UNIT\"\n            }\n        },\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_OSS\"\n            }\n        },\n        {\n            \"businessProductModel\": {\n                \"code\": \"BPM_PRD\"\n            }\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|install|code=BOM_BSM",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|code=BOM_EMPTY|desc=BOM on an empty offer|offer=OF_EMPTY",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": {\n        \"code\": \"{{offer}}\"\n    },\n    \"moduleItems\": []\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "installBOM|code=BOM_EMPTY",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Discount plan",
									"item": [
										{
											"name": "Discount plan",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DP_DISCOUNT_PLAN\",\r\n    \"description\": \"Discount plan description\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Discount plan item (percent 50%)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DPI_DISCOUNT_PLAN_50P\",\r\n    \"discountPlanCode\": \"DP_DISCOUNT_PLAN\",\r\n    \"invoiceCategoryCode\": \"ICAT_OSH\",\r\n    \"invoiceSubCategoryCode\": \"ISCAT_OSO\",\r\n    \"accountingCode\": \"ACCT_CODE\",\r\n    \"expressionEl\": \"#{ true }\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"PERCENTAGE\",\r\n    \"discountValue\": 50,\r\n    \"discountValueEL\": \"#{ 50 }\",\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Discount plan item (fixed 10)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DPI_DISCOUNT_PLAN_10F\",\r\n    \"discountPlanCode\": \"DP_DISCOUNT_PLAN\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"FIXED\",\r\n    \"discountValue\": 10,\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlan|DP_FIXED_200",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Discount plan {{request.label.1}}\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlanItem|DP_FIXED_200|DPI_FIXED_200|FIXED|200",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.2}}\",\r\n    \"discountPlanCode\": \"{{request.label.1}}\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"{{request.label.3}}\",\r\n    \"discountValue\": {{request.label.4}},\r\n    \"discountValueEL\": \"#{amount}\",\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlan|DP_GLOBAL_10P",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Discount plan {{request.label.1}}\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlanItem|DP_GLOBAL_10P|DPI_GLOBAL_10P|PERCENTAGE|10",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.2}}\",\r\n    \"discountPlanCode\": \"{{request.label.1}}\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"{{request.label.3}}\",\r\n    \"discountValue\": {{request.label.4}},\r\n    \"discountValueEL\": null,\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "Default",
							"item": [
								{
									"name": "C|Jean|Bonnot",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "03094886-3642-4261-8ea7-22bf16c295a3",
												"exec": [
													"var parts = pm.variables.get(\"request.label\").split(\"|\");",
													"var index = pm.globals.get(\"index\");",
													"",
													"if (typeof index === 'undefined') {",
													"    console.log(\"index global variable is undefined -> setting to \\\"00\\\"\");",
													"    pm.globals.set(\"index\", \"00\");",
													"    index = \"00\";",
													"}",
													"",
													"var prefix = pm.variables.get(\"template.code\") + \"-\";",
													"var suffix = \" \" + prefix + index;",
													"",
													"switch (parts.length) {",
													"    case 1:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[0] + suffix);",
													"        pm.globals.set(\"account.firstname\", \"\");",
													"        pm.globals.set(\"account.lastname\", \"\");",
													"        break;",
													"    case 2:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[1] + suffix);",
													"        pm.globals.set(\"account.firstname\", \"\");",
													"        pm.globals.set(\"account.lastname\", \"\");",
													"        break;",
													"    case 3:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[1] + \" \" + parts[2] + suffix);",
													"        pm.globals.set(\"account.firstname\", parts[1]);",
													"        pm.globals.set(\"account.lastname\", parts[2]);",
													"        break;",
													"    case 4:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[1] + suffix);",
													"        pm.globals.set(\"account.firstname\", parts[2]);",
													"        pm.globals.set(\"account.lastname\", parts[3]);",
													"        break;",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"crmAccountType\" : \"C_UA\",\r\n  \"crmParentCode\" : \"{{seller.code}}\",\r\n  \"code\" : \"{{account.code}}\",\r\n  \"description\": \"{{account.description}}\",\r\n  \"name\" : {\r\n    \"title\" : \"MR\",\r\n    \"firstName\" : \"{{account.firstname}}\",\r\n    \"lastName\" : \"{{account.lastname}}\"\r\n  },\r\n  \"subscriptionDate\": \"2018-01-10\",\r\n  \"jobTitle\": \"Ruler of the known Universe\",\r\n  \"vatNo\": \"FR12345678901234\",\r\n  \"registrationNo\": \"12354678901234\",\r\n  \"address\" : {\r\n    \"address1\" : \"3 rue passante\",\r\n    \"address2\" : \"BÃ¢timent A\",\r\n    \"address3\" : \"Bureau D42\",\r\n    \"zipCode\" : \"99999\",\r\n    \"city\" : \"METROVILLE\",\r\n    \"country\" : \"FR\"\r\n  },\r\n  \"contactInformation\" : {\r\n    \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n    \"mobile\" : \"+33123546789\"\r\n  },\r\n  \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n  \"language\" : \"FRA\",\r\n  \"paymentMethod\" : \"CHECK\",\r\n  \"customerCategory\" : \"CLIENT\",\r\n  \"currency\" : \"EUR\",\r\n  \"billingCycle\" : \"BC_MONTHLY_1ST\",\r\n  \"country\" : \"FR\",\r\n  \"electronicBilling\" : \"true\",\r\n  \"customFields\": null\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdateCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createOrUpdateCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "SU|OF|MAIN_SELLER|2019-12-15T01:23:45.678Z",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "697f69c4-4628-4a9f-88f0-b292c0044075",
												"exec": [
													"pm.globals.set(\"subscription.code\", pm.globals.get(\"account.code\")+\"-\"+pm.globals.get(\"request.label.0\"));",
													"pm.globals.set(\"subscription.date\", pm.globals.get(\"request.label.3\"));",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{subscription.code}}\",\r\n    \"description\": \"Souscription {{subscription.code}}\",\r\n    \"userAccount\": \"{{account.code}}\",\r\n    \"offerTemplate\": \"{{request.label.1}}\",\r\n    \"seller\": \"{{request.label.2}}\",\r\n    \"subscriptionDate\": \"{{request.label.3}}\",\r\n    \"terminationDate\": null,\r\n    \"endAgreementDate\": \"2019-01-01\",\r\n    \"status\": null,\r\n    \"terminationReason\": null,\r\n    \"customFields\": null\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "SU|OF|S_LVL2|2020-03-15T01:23:45.678Z",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "d7645b7f-7b37-4111-baac-aa4ac88ecec1",
												"exec": [
													"pm.globals.set(\"subscription.code\", pm.globals.get(\"account.code\")+\"-\"+pm.globals.get(\"request.label.0\"));",
													"pm.globals.set(\"subscription.date\", pm.globals.get(\"request.label.3\"));",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{subscription.code}}\",\r\n    \"description\": \"Souscription {{subscription.code}}\",\r\n    \"userAccount\": \"{{account.code}}\",\r\n    \"offerTemplate\": \"{{request.label.1}}\",\r\n    \"seller\": \"{{request.label.2}}\",\r\n    \"subscriptionDate\": \"{{request.label.3}}\",\r\n    \"terminationDate\": null,\r\n    \"endAgreementDate\": \"2019-01-01\",\r\n    \"status\": null,\r\n    \"terminationReason\": null,\r\n    \"customFields\": null\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_OSS|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_OST|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_REC_ADV|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"description\": \"SE_REC_ADV OVERRIDE\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100.123456789\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_USG_UNIT|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 0.30\r\n                },\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 1,\r\n                    \"doubleValue\": 10\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "updatesServices|SE_USG_UNIT|{{subscription.date}}",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscriptionCode\" : \"{{subscription.code}}\",\r\n  \"serviceToUpdate\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 2,\r\n                    \"valuePeriodStartDate\": \"2020-04-19\",\r\n                    \"doubleValue\": 5\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/updateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"updateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|code=SE_USG_RON|date={{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{code}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{date}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n\t            {\r\n\t                \"code\": \"CF_SE_MAP_RON_DOUBLE\",\r\n\t                \"mapValue\": {\r\n\"0<10\":   { \"value\": 20.0 },\r\n\"10<100\": { \"value\": 30.0 },\r\n\"100<\":   { \"value\": 40.0 }\r\n\t                }\r\n\t            }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices REC ARR",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"SE_REC_ARR\",\r\n        \"description\": \"SE_REC_ARR OVERRIDE\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{subscription.date}}\",\r\n        \"rateUntilDate\": \"2019-03-16\",\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 10\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices REC PERIODS",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"SE_REC_ADV_PERIODS_MONTH\",\r\n        \"description\": \"SE_REC_ADV_PERIODS_MONTH OVERRIDE\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{subscription.date}}\",\r\n        \"rateUntilDate\": \"2018-01-31\",\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100.00\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_USG_UNIT_2_3_4",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{subscription.date}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 0.33\r\n                },\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 1,\r\n                    \"doubleValue\": 1\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "setBillingAccountDiscountPlan|{{account.code}}|DP_FIXED_200",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{account.description}} [{{$timestamp}}]\",\n\t\"billingCycle\" : \"BC_MONTHLY_1ST\",\n\t\"language\" : \"FRA\",\n\t\"country\" : \"FR\",\n    \"discountPlanForInstantiation\": [\n        {\n            \"code\": \"{{request.label.2}}\",\n            \"startDate\": null,\n            \"endDate\": null,\n            \"defaultDuration\": null,\n            \"durationUnit\": null\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "setBillingAccountDiscountPlan|{{account.code}}|DP_GLOBAL_10P",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{account.description}} [{{$timestamp}}]\",\n\t\"billingCycle\" : \"BC_MONTHLY_1ST\",\n\t\"language\" : \"FRA\",\n\t\"country\" : \"FR\",\n    \"discountPlanForInstantiation\": [\n        {\n            \"code\": \"{{request.label.2}}\",\n            \"startDate\": null,\n            \"endDate\": null,\n            \"defaultDuration\": null,\n            \"durationUnit\": null\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "terminateService|SE_REC_ADV|{{subscription.date}}|TR_REIMBURSE",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscriptionCode\" : \"{{subscription.code}}\",\r\n  \"terminationDate\" : \"{{request.label.2}}\",\r\n  \"terminationReason\" : \"{{request.label.3}}\",\r\n  \"services\" : [\"{{request.label.1}}\"]\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "terminateService|SE_OSS|{{subscription.date}}|TR_NONE",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscriptionCode\" : \"{{subscription.code}}\",\r\n  \"terminationDate\" : \"{{request.label.2}}\",\r\n  \"terminationReason\" : \"{{request.label.3}}\",\r\n  \"services\" : [\"{{request.label.1}}\"]\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "chargeCDR|p1=UNIT|p2=AAA|p3=100|qtt=10|isVirtual=false",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}};{{p3}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "applyOneshotCharge|CH_OSO|{{subscription.code}}|100.123456789",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"subscription\": \"{{request.label.2}}\",\r\n  \"oneShotCharge\": \"{{request.label.1}}\",\r\n  \"amountWithoutTax\": {{request.label.3}},\r\n  \"operationDate\": \"{{$timestamp}}000\",\r\n  \"description\": null,\r\n  \"criteria1\": null,\r\n  \"criteria2\": null,\r\n  \"criteria3\": null\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/applyOneShotChargeInstance",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"applyOneShotChargeInstance"
									]
								}
							},
							"response": []
						},
						{
							"name": "RT_Job_aboEnergie",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09c35595-5e4b-4cbd-9102-dc87e1851725",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"code\": \"RT_Job_aboEnergie\",\n        \"disabled\": false,\n        \"jobCategory\": \"INVOICING\",\n        \"jobTemplate\": \"RatedTransactionsJob\",\n        \"active\": true,\n        \"customFields\": {\n            \"customField\": [\n                {\n                    \"code\": \"waitingMillis\",\n                    \"description\": \"Waiting before next launch (ms\",\n                    \"fieldType\": \"LONG\",\n                    \"longValue\": 0,\n                    \"guiPosition\": \"tab:Configuration:0;fieldGroup:Configuration:0;field:1\"\n                },\n                {\n                    \"code\": \"nbRuns\",\n                    \"description\": \"Number of parallel execution\",\n                    \"fieldType\": \"LONG\",\n                    \"longValue\": -1,\n                    \"guiPosition\": \"tab:Configuration:0;fieldGroup:Configuration:0;field:0\"\n                },\n                {\n                    \"code\": \"woAggregationSettings\",\n                    \"description\": \"Activate aggregation\",\n                    \"fieldType\": \"ENTITY\",\n                    \"entityReferenceValue\": {\n                        \"classname\": \"org.meveo.model.billing.WalletOperationAggregationSettings\",\n                        \"classnameCode\": null,\n                        \"code\": \"aggreg_abo_energie\"\n                    },\n                    \"guiPosition\": \"tab:Configuration:0;fieldGroup:Aggregation Settings:1;field:0\"\n                }\n            ]\n        },\n        \"limitToSingleNode\": true,\n        \"verboseReport\": true\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"jobInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get WO before  RT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6af0572-b54e-420a-9d43-ef23ad6dea9e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Is sucsess\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"Total WO\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(14);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "opencell.admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "opencell.admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/billing/wallet/operation/list",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"wallet",
										"operation",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "run RT_Job_aboEnergie",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7352b75-3871-41f8-be9c-d4ec3f93ea08",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\":\"RT_Job_aboEnergie\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Job Report|RT|wait=5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "696793c4-5953-40e8-b48d-10382059bbd8",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"var task=pm.variables.get(\"task.code\");",
											"",
											"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
											"    tests[\"is.done.\"+task] = true;",
											"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
											"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
											"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
											"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
											"    }",
											"} else {",
											"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
											"    tests[\"is.not.done.yet.\"+task] = true;",
											"    console.log(\"Not done yet (\"+task+\").\");",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "74d53cf0-c07f-42cd-89a3-4f9037eb6cd2",
										"exec": [
											"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"url": {
									"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"jobReport"
									],
									"query": [
										{
											"key": "id",
											"value": "{{jobRun.id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RT OPEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00cd7c2d-90e0-49f4-9f91-a5fec394b805",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Is sucsess\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"Total before removing Zero WO\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(6);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "opencell.admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "opencell.admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filters\":{\n\t\t\"status\":\"OPEN\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/billing/ratedTransaction/list?query=status:OPEN",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"ratedTransaction",
										"list"
									],
									"query": [
										{
											"key": "query",
											"value": "status:OPEN"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "17432285-881e-424d-9b7a-99a96950d8c2",
						"type": "text/javascript",
						"exec": [
							"var now=new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"",
							"    if(parts[i].indexOf(\"=\") != -1 ){",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							"// Token auth",
							"var token = pm.variables.get(\"access_token\");",
							"//console.log(\"token=\"+token);",
							"",
							"if(!token || token === \"\" ) {",
							"    console.log(\"token is not defined\");",
							"    // Set some environment variables to use in the access token request. ",
							"    var client_id = pm.environment.get(\"client.id\") || \"opencell-web\";",
							"    var client_secret = pm.environment.get(\"client.secret\") || \"afe07e5a-68cb-4fb0-8b75-5b6053b07dc3\";",
							"    var opencell_url = pm.environment.get(\"opencell.base\");",
							"    var username = pm.environment.get(\"opencell.username\") || \"opencell.admin\";",
							"    var password = pm.environment.get(\"opencell.password\") || \"opencell.admin\";",
							"    var CryptoJS = require(\"crypto-js\")",
							"    // Encrypt the Client ID and Secret in base64 ",
							"    var rawStr = CryptoJS.enc.Utf8.parse(client_id + ':' + client_secret)",
							"    var client_cred = CryptoJS.enc.Base64.stringify(rawStr)",
							"    // Now let's get a new oauth2 access_token and set it in a variable ",
							"    pm.sendRequest(",
							"        { ",
							"            url: opencell_url + '/auth/realms/opencell/protocol/openid-connect/token', ",
							"            method: 'POST', ",
							"            header: ",
							"            { ",
							"                //'Authorization': 'Basic ' + client_cred, ",
							"                'Cache-Control': 'no-cache', ",
							"                'Content-Type': 'application/x-www-form-urlencoded' ",
							"            }, body: ",
							"            { ",
							"                mode: 'urlencoded', ",
							"                urlencoded: ",
							"                [",
							"                    { ",
							"                        key: \"client_id\", ",
							"                        value: client_id ",
							"                    }, ",
							"                    { ",
							"                        key: \"username\", ",
							"                        value: username ",
							"                    },",
							"                    { ",
							"                        key: \"password\", ",
							"                        value: password ",
							"                    },",
							"                    { ",
							"                        key: \"grant_type\", ",
							"                        value: \"password\" ",
							"                    },",
							"                    { ",
							"                        key: \"client_secret\", ",
							"                        value: client_secret",
							"                    },",
							"                ] ",
							"            } ",
							"        }, ",
							"        function (err, response) { ",
							"            //console.log(\"AUTH_RETURN_CODE\", err);",
							"            //console.log(\"AUTH_RESPONSE\", response);",
							"            const jsonResponse = response.json();",
							"            console.log(\"Saving token to variables\")",
							"            pm.variables.set(\"access_token\", jsonResponse.access_token); ",
							"        }",
							"        );",
							"} else{",
							"    console.log(\"token already exists\");",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5c0a3a0b-3f6c-4326-9534-ea4041879a5b",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"",
							"if (wait > 0) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5411 - Customer account balance",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdf0e80e-6976-4a63-80ea-fceca3a0bff1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5411_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d775ab7-ea42-46f1-af60-42766f89021e",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5411_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5411_BC\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24ec05cf-b13c-455a-b0e7-2977887940e8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5411\",\r\n\t\t\"description\":\"Seller 5411\",\r\n    \t\"countryCode\": \"{{counrty_code}}\",\r\n    \t\"languageCode\": \"{{language}}\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec72cb2c-b687-4522-97f3-f99e2f980ca6",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5411\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d602d91-4694-4372-b943-aab18f1668c7",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"{{test_email}}\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5411_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5411\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"{{currency}}\",\r\n\t\"countryCode\": \"{{counrty_code}}\",\r\n\t\"languageCode\": \"{{language}}\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5411_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"{{first_name}}\",\r\n\t\"lastName\": \"{{last_name}}\",\r\n\t\"phoneNumber\": \"{{phone}}\",\r\n\t\"address1\": \"{{address}}\",\r\n\t\"address2\": \"{{address}}\",\r\n\t\"zipCode\": \"{{zip_code}}\",\r\n\t\"city\": \"{{city}}\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5411\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create accounting code 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bf62c53-ebd6-43ff-8cd2-1f614b3627c7",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_AccountingCode_1\",\n    \"description\": \"Accounting code 1\",\n    \"chartOfAccountTypeEnum\": \"EXPENSE\",\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\",\n    \"reportingAccount\": \"sales\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/accountingCode",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"accountingCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create accounting code 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11c974f5-501d-4e31-9455-419dadcffd04",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_AccountingCode_2\",\n    \"description\": \"Accounting code 2\",\n    \"chartOfAccountTypeEnum\": \"EXPENSE\",\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\",\n    \"reportingAccount\": \"sales\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/accountingCode",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"accountingCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 1 - 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95f6a8aa-d35b-4221-b70e-8f907aa5883d",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C1</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>1</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>1</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_2</code>\n    <description>{{testCode}}_AccountingCode_2</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create debit account op 1 - 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3eb17af0-eeb2-4802-aea1-e803dfd5f90f",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>DEBIT</transactionCategory>\n    <reference>D1</reference>\n    <accountCode>{{testCode}}_AccountingCode_1</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_1</accountCodeClientSide>\n    <amount>2</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>2</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_1</code>\n    <description>Fact test</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 2 - 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "32549b1e-532e-462e-ba49-6e792618d6f8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.environment.set('creditOP',jsonData.message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C2</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>3</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>3</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>FOR_MATCH_20</code>\n    <description>FOR_MATCH_20</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create debit account op 2 - 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb0082ce-2055-4a55-9ba7-f4f4a619d611",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.environment.set('debitOP',jsonData.message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>DEBIT</transactionCategory>\n    <reference>D2</reference>\n    <accountCode>{{testCode}}_AccountingCode_1</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_1</accountCodeClientSide>\n    <amount>3</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>3</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_1</code>\n    <description>Fact test</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create debit account op 3 - 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b87dc8f7-9ddd-44aa-8617-0aa146f09519",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>DEBIT</transactionCategory>\n    <reference>D3</reference>\n    <accountCode>{{testCode}}_AccountingCode_1</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_1</accountCodeClientSide>\n    <amount>5</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>5</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_1</code>\n    <description>Fact test</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 4 - 10 Litigation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c27f18c0-b044-4d78-bcc4-819180c49ce5",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>10</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>10</unMatchingAmount>\n    <matchingStatus>I</matchingStatus>\n    <code>LITIGATION1</code>\n    <description>LITIGATION1</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 5 - 15 future date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6529d74-4d00-46ef-a03d-66de4bd58c59",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>3017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>3017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>15</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>15</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>FUTURE_DATE</code>\n    <description>Future Date</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <otherCreditAndCharge>\n        <operationDate>3017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 6 - 20  past date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c55973d-13a7-486e-8901-7292b20be067",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>1017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>1017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>20</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>20</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>PAST_DATE</code>\n    <description>Past Date</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <otherCreditAndCharge>\n        <operationDate>1017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 7 - 25 future due date, past tx date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5dc0cfcd-d9ee-4dab-9434-c093f75691fe",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>3017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>1017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>25</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>25</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>X1234</code>\n    <description>Future due date, past tx date</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Match operations debit and credit 2-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98388efa-c025-4ca6-864a-29a788946562",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<MatchOperationRequest>\n    <customerAccountCode>CA_{{testCode}}_CH_5411_1</customerAccountCode>\n    <accountOperations>\n        <accountOperation>\n            <id>{{creditOP}}</id>\n        </accountOperation>\n        <accountOperation>\n            <id>{{debitOP}}</id>\n        </accountOperation>\n    </accountOperations>\n</MatchOperationRequest>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation/matchOperations",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation",
										"matchOperations"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Check CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba48ffc-595a-4512-97da-228c6a221061",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(-24).is.to.equal(jsonData.customerAccount.balance);\r",
											"    pm.expect(-14).is.to.equal(jsonData.customerAccount.totalInvoiceBalance);\r",
											"    pm.expect(-49).is.to.equal(jsonData.customerAccount.accountBalance);\r",
											"    pm.expect(-56).is.to.equal(jsonData.customerAccount.creditBalance);\r",
											"    pm.expect(-64).is.to.equal(jsonData.customerAccount.totalBalance);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode=CA_{{testCode}}_CH_5411_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"customerAccount"
									],
									"query": [
										{
											"key": "customerAccountCode",
											"value": "CA_{{testCode}}_CH_5411_1"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5419 - [api] Make sure PaymentScheduleTemplate can be configure using API",
			"item": [],
			"description": "# Introduction\r\n\r\nThis configuration file is designed to be a basis for all configurations provided by Opencell.\r\nIt merely contains most common general settings and a catalog of services implementing various rating models.\r\n\r\n# Configuring Opencell\r\n\r\nThere are 2 main ways for configuring ***Opencell***:\r\n* GUI (*Administration GUI* and *Marketing Manager*)\r\n* API (all Opencell configuration and operations can be performed using our extensive API library)\r\n\r\nThe most flexible way is using APIs which currently are available as **Rest** and **Soap**.\r\nThe **Soap** API are deprecated, so will won't mention them anymore.\r\n\r\n## Tools\r\n\r\nAny tools able to send HTTP requests will do.\r\nOne could even just script *curl* calls using shell script.\r\nBut of course, a more user friendly tool will make things easier.\r\n\r\nHere at ***Opencell***, we prefer **Postman** (https://getpostman.com):\r\n* it has a modern, friendly interface\r\n* Sets of API request can be organized into collections, themselves structured into a folder tree.\r\n* Collections can be exported as _JSON_ files or shared with other team members using collaboration features (payed version)\r\n* it allows to uses variables at different levels (collection, environement, global) and to execute *Javascript* scripts before and after executing API calls which allows great flexibility and API response testing.\r\n\r\n\r\n\r\n# Configuration documentation guidelines\r\n\r\nIn order to document our configuration, we make full used of the internal documentation capabilities of the Markdown fields on Postman Objects\r\n\r\n## Default template for *Collection* documentation\r\n\r\n## Default template for *Folder* documentation\r\n\r\n## Default template for *Request* documentation\r\n\r\n\r\n\r\n# Tips & guidelines\r\n\r\nHere follow a few tips for understanding this collection.\r\n\r\n## Collection pre-request script\r\n\r\n```javascript\r\npm.globals.set(\"timestamp.iso\", (new Date()).toISOString());\r\npm.globals.set(\"request.label\", pm.info.requestName);\r\n\r\nvar parts = pm.info.requestName.split(\"|\");\r\n\r\nfor(let i=0; i<parts.length; i++) {\r\n    pm.globals.set(\"request.label.\"+i, parts[i]);\r\n}\r\n```\r\n\r\n## Configuration guidelines\r\n\r\n## Entities\r\n\r\n<entity>_<project_code>_XXX\r\n\r\n### Custom Fields\r\n\r\nCF_<entity>_<project_code>_ XXX\r\n\r\n<entity> will be discarded for inherited\r\n\r\n#### Custom field visibility\r\n\r\nSE_<entity>_<project_code>_<markers>_XXX\r\n\r\n<markers> are used in CFT.applicableOnEl to show CFT on entities\r\n\r\n\r\n## Entity abbreviation\r\n\r\n| code  | entity                        |\r\n|:-----:|:------------------------------|\r\n|   P   | Provider                      |\r\n|   S   | Seller                        |\r\n|   C   | Customer                      |\r\n|  CA   | Customer Account              |\r\n|  BA   | Billing Account               |\r\n|  UA   | User Account                  |\r\n|  SU   | Subscription                  |\r\n|  AP   | Access Point                  |\r\n|  OF   | Offer Template                |\r\n|  SE   | Service Template and Instance |\r\n|  CH   | Charge Template               |\r\n|  PP   | Price Plan                    |\r\n|  CN   | Counter                       |\r\n| ICAT  | Invoice Category              |\r\n| ISCAT | Invoice SubCategory           |\r\n|  CAL  | Calendar                      |\r\n|  BC   | Billing Cycle                 |\r\n",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "{{access_token}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8b77a846-f41b-49c3-9f1e-a77d7cd265eb",
						"type": "text/javascript",
						"exec": [
							"var now=new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"",
							"    if(parts[i].indexOf(\"=\") != -1 ){",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							"// Token auth",
							"var token = pm.variables.get(\"access_token\");",
							"//console.log(\"token=\"+token);",
							"",
							"if(!token || token === \"\" ) {",
							"    console.log(\"token is not defined\");",
							"    // Set some environment variables to use in the access token request. ",
							"    var client_id = pm.environment.get(\"client.id\") || \"opencell-web\";",
							"    var client_secret = pm.environment.get(\"client.secret\") || \"afe07e5a-68cb-4fb0-8b75-5b6053b07dc3\";",
							"    var opencell_url = pm.environment.get(\"opencell.base\");",
							"    var username = pm.environment.get(\"opencell.username\") || \"opencell.admin\";",
							"    var password = pm.environment.get(\"opencell.password\") || \"opencell.admin\";",
							"    var CryptoJS = require(\"crypto-js\")",
							"    // Encrypt the Client ID and Secret in base64 ",
							"    var rawStr = CryptoJS.enc.Utf8.parse(client_id + ':' + client_secret)",
							"    var client_cred = CryptoJS.enc.Base64.stringify(rawStr)",
							"    // Now let's get a new oauth2 access_token and set it in a variable ",
							"    pm.sendRequest(",
							"        { ",
							"            url: opencell_url + '/auth/realms/opencell/protocol/openid-connect/token', ",
							"            method: 'POST', ",
							"            header: ",
							"            { ",
							"                //'Authorization': 'Basic ' + client_cred, ",
							"                'Cache-Control': 'no-cache', ",
							"                'Content-Type': 'application/x-www-form-urlencoded' ",
							"            }, body: ",
							"            { ",
							"                mode: 'urlencoded', ",
							"                urlencoded: ",
							"                [",
							"                    { ",
							"                        key: \"client_id\", ",
							"                        value: client_id ",
							"                    }, ",
							"                    { ",
							"                        key: \"username\", ",
							"                        value: username ",
							"                    },",
							"                    { ",
							"                        key: \"password\", ",
							"                        value: password ",
							"                    },",
							"                    { ",
							"                        key: \"grant_type\", ",
							"                        value: \"password\" ",
							"                    },",
							"                    { ",
							"                        key: \"client_secret\", ",
							"                        value: client_secret",
							"                    },",
							"                ] ",
							"            } ",
							"        }, ",
							"        function (err, response) { ",
							"            //console.log(\"AUTH_RETURN_CODE\", err);",
							"            //console.log(\"AUTH_RESPONSE\", response);",
							"            const jsonResponse = response.json();",
							"            console.log(\"Saving token to variables\")",
							"            pm.variables.set(\"access_token\", jsonResponse.access_token); ",
							"        }",
							"        );",
							"} else{",
							"    console.log(\"token already exists\");",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ea63d518-cb4b-4380-a2cc-25c3faeddb18",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"",
							"if (wait > 0) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5423 - [catalog] createOfferFromBOM removes counter from service",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Settings",
							"item": [
								{
									"name": "Provider & Seller",
									"item": [
										{
											"name": "Seller hierarchy",
											"item": [
												{
													"name": "S|MAIN_SELLER|Opencell",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"code\" : \"{{request.label.1}}\",\r\n\t\"description\" : \"{{request.label.2}}\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"countryCode\": \"FR\",\r\n    \"languageCode\": \"ENG\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": \"Esc. A\",\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": null\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"billing@opencellsoft.com\",\r\n        \"phone\": \"0123456789\",\r\n        \"mobile\": \"0678912345\",\r\n        \"fax\": null\r\n    }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "S|S_LVL1|Seller level 1|MAIN_SELLER",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Proxy-Authorization",
																"value": "{{proxy.auth}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"code\" : \"{{request.label.1}}\",\n\t\"description\" : \"{{request.label.2}}\",\n\t\"parentSeller\" : \"{{request.label.3}}\",\n\t\"currencyCode\" : \"EUR\",\n\t\"countryCode\" : \"FR\",\n\t\"languageCode\" : \"FRA\",\n    \"contactInformation\": null,\n    \"address\": {\n        \"address1\": \"52 rue KlÃ©ber\",\n        \"address2\": null,\n        \"address3\": null,\n        \"zipCode\": \"92300\",\n        \"city\": \"Levallois-Perret\",\n        \"country\": \"FR\",\n        \"state\": null\n    },\n    \"invoiceTypeSequences\": {\n        \"COM\": {\n            \"prefixEL\": \"{{request.label.1}}\",\n            \"sequenceSize\": 6\n        }\n    },\n    \"customFields\": { \"customField\": []}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "S|S_LVL2|Seller level 2|S_LVL1",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"code\" : \"{{request.label.1}}\",\n\t\"description\" : \"{{request.label.2}}\",\n\t\"parentSeller\" : \"{{request.label.3}}\",\n\t\"currencyCode\" : \"EUR\",\n\t\"countryCode\" : \"FR\",\n\t\"languageCode\" : \"FRA\",\n    \"contactInformation\": null,\n    \"registrationNo\": \"REG999999999\",\n    \"vatNo\": \"VAT999999999\",\n    \"address\": {\n        \"address1\": \"52 rue KlÃ©ber\",\n        \"address2\": null,\n        \"address3\": null,\n        \"zipCode\": \"92300\",\n        \"city\": \"Levallois-Perret\",\n        \"country\": \"FR\",\n        \"state\": null\n    },\n    \"customFields\": { \"customField\": []}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "CFT|code=CF_PROV_MATRIX_MULTI|target=Provider|type=MULTI_VALUE|storage=MATRIX",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Custom field {{storage}} of {{type}} on {{target}}\",\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"[fr] Champ personnalisÃ© {{storage}} de {{type}} sur {{target}}\"\n        },\n        {\n            \"languageCode\": \"ENG\",\n            \"description\": \"[en] Custom field {{storage}} of {{type}} on {{target}}\"\n        }\n    ],\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"useInheritedAsDefaultValue\": false,\n    \"storageType\": \"{{storage}}\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n\t\"guiPosition\": \"tab:CustomTab|ENG=CustomTab(en)|FRA=CustomTab(fr):0;fieldGroup:CustomGroup|ENG=CustomGroup(en)|FRA=CustomGroup(fr):0;field:0\",\n    \"applicableOnEl\": \"#{ true }\",\n    \"matrixColumn\": [\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 1,\n            \"code\": \"inputString\",\n            \"label\": \"Input string\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 2,\n            \"code\": \"inputRON\",\n            \"label\": \"Input RON\",\n            \"keyType\": \"RON\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 1,\n            \"code\": \"outputLong\",\n            \"label\": \"Output long\",\n            \"keyType\": \"LONG\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 2,\n            \"code\": \"outputDouble\",\n            \"label\": \"Output double\",\n            \"keyType\": \"DOUBLE\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 3,\n            \"code\": \"outputString\",\n            \"label\": \"Output string\",\n            \"keyType\": \"STRING\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "providerCF|code=CF_PROV_MATRIX_MULTI",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customFields\": {\n        \"customField\": [\n                {\n                    \"code\": \"{{code}}\",\n                    \"mapValue\": {\n                        \"AAA|<0.0\": {\n                            \"value\": \"0|0.0|Zero\"\n                        },\n                        \"AAA|0.0<111.1\": {\n                            \"value\": \"1|1.1|One\"\n                        },\n                        \"AAA|111.1<\": {\n                            \"value\": \"2|2.2|Two\"\n                        },\n                        \"BBB|0.0<111.1\": {\n                            \"value\": \"3|3.3|Three\"\n                        },\n                        \"BBB|111.1<\": {\n                            \"value\": \"4|4.4|Four\"\n                        }\n                    }\n                }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/updateProviderCF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"updateProviderCF"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{provider.code}}\",\n    \"description\": \"{{template.label}}\",\n    \"enterprise\": \"true\",\n    \"rounding\": 6,\n    \"roundingMode\": \"NEAREST\",\n    \"invoiceRounding\": 2,\n    \"invoiceRoundingMode\": \"NEAREST\",\n    \"invoiceConfiguration\": {\n        \"displaySubscriptions\": \"true\",\n        \"displayServices\": \"true\",\n        \"displayOffers\": \"true\",\n        \"displayEdrs\": \"true\",\n        \"displayProvider\": \"true\",\n        \"displayCfAsXML\": \"true\",\n        \"displayPricePlans\": \"true\",\n        \"displayDetail\": \"true\",\n        \"displayChargesPeriods\": \"true\",\n        \"displayFreeTransacInInvoice\": \"true\",\n        \"displayBillingCycle\": \"true\",\n        \"displayOrders\": \"true\"\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CF_PROV_PROJECT_VERSION",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "7b929852-828f-48ea-9881-55972ad1fd85",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label}}_{{$timestamp}}\",\r\n    \"description\": \"{{project.code}} {{project.type}} {{project.version}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"Provider\",\r\n    \"defaultValue\": \"{{timestamp.iso}}\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false,\r\n    \"guiPosition\": \"tab:Project versions:999\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Calendars",
									"item": [
										{
											"name": "CAL_PERIOD_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_YEARLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 12,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_DAILY_ONCE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 1\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 5,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 2,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_MONTHLY_1ST",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "69dd9c5b-4a96-4cfb-a6bf-a1ef53e9a03b",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"1st of the month\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n  {\n    \"day\": \"1\",\n    \"month\": \"JANUARY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"FEBRUARY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"MARCH\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"APRIL\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"MAY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"JUNE\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"JULY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"AUGUST\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"SEPTEMBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"OCTOBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"NOVEMBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"DECEMBER\"\n  }\n  ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 5,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 2,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Billing cycles",
									"item": [
										{
											"name": "script|invoicing.SplitInvoice|Splits invoice by RT.parameter2",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/xml",
														"type": "text",
														"name": "Content-Type",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.invoicing;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.List;\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.lang.String;\r\nimport java.util.Arrays;\r\nimport java.math.BigInteger;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.apache.commons.collections4.MapUtils;\r\nimport org.meveo.commons.utils.StringUtils;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.admin.util.pagination.PaginationConfiguration;\r\n\r\nimport org.meveo.model.admin.Seller;\r\nimport org.meveo.model.billing.BillingRun;\r\nimport org.meveo.model.billing.BillingAccount;\r\nimport org.meveo.model.billing.RatedTransaction;\r\nimport org.meveo.model.billing.InvoiceType;\r\nimport org.meveo.model.billing.RatedTransactionGroup;\r\nimport org.meveo.model.billing.BillingCycle;\r\nimport org.meveo.model.payments.PaymentMethod;\r\n\r\nimport org.meveo.service.admin.impl.SellerService;\r\nimport org.meveo.service.billing.impl.BillingAccountService;\r\nimport org.meveo.service.billing.impl.InvoiceTypeService;\r\n\r\n/**\r\n * Dispatch RTs per invoicingGroup on RTparameter2 A different invoice will be\r\n * produced for each value of RT.parameter2\r\n * \r\n * @author schambrin\r\n */\r\npublic class SplitInvoice extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(SplitInvoice.class);\r\n\r\n    SellerService sellerService = (SellerService) getServiceInterface(\"SellerService\");\r\n    BillingAccountService billingAccountService = (BillingAccountService) getServiceInterface(\"BillingAccountService\");\r\n    InvoiceTypeService invoiceTypeService = (InvoiceTypeService) getServiceInterface(\"InvoiceTypeService\");\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.trace(\"EXECUTE context {}\", context);\r\n        context.entrySet().stream().forEach(entry -> {\r\n            log.info(\"{}={}\", entry.getKey(), entry.getValue());\r\n        });\r\n\r\n        InvoiceType invoiceType = (InvoiceType) context.get(\"invoiceType\");\r\n        PaymentMethod paymentMethod = (PaymentMethod) context.get(\"paymentMethod\");\r\n        BillingAccount billingAccount = billingAccountService\r\n                .refreshOrRetrieve((BillingAccount) context.get(\"CONTEXT_ENTITY\"));\r\n        BillingRun billingRun = (BillingRun) context.get(\"br\");\r\n\r\n        Seller seller = billingAccount.getCustomerAccount().getCustomer().getSeller() != null\r\n                ? billingAccount.getCustomerAccount().getCustomer().getSeller()\r\n                : sellerService.findByCode(\"MAIN_SELLER\");\r\n\r\n        BillingCycle billingCycle = billingAccount.getBillingCycle();\r\n        PaymentMethod defaultPaymentMethod = billingAccount.getCustomerAccount().getPreferredPaymentMethod();\r\n\r\n        List<RatedTransaction> allRT = (List<RatedTransaction>) context.get(\"ratedTransactions\");\r\n        Map<String, RatedTransactionGroup> invoices = new HashMap<String, RatedTransactionGroup>();\r\n\r\n        // Dispatch RTs\r\n        allRT.stream().forEach(rt -> {\r\n            String invoicingGroup = rt.getParameter2();\r\n\r\n            // Add new invoicingGroup if missing\r\n            if (!invoices.containsKey(invoicingGroup)) {\r\n                RatedTransactionGroup rtGroup = new RatedTransactionGroup(billingAccount, seller, billingCycle,\r\n                        invoiceType, false/* prepaid */ );\r\n                rtGroup.setPaymentMethod(paymentMethod);\r\n                rtGroup.setInvoiceKey(rtGroup.getInvoiceKey() + \"_\" + invoicingGroup);\r\n                invoices.put(invoicingGroup, rtGroup);\r\n            }\r\n\r\n            invoices.get(invoicingGroup).getRatedTransactions().add(rt);\r\n        });\r\n\r\n        invoices.entrySet().stream().forEach(invoice -> {\r\n            log.info(\"BillingAccount[{}], InvoiceType[{}], InvoicingGroup[{}] => {} RTs\",\r\n                    invoice.getValue().getBillingAccount().getCode(), invoiceType.getCode(), invoice.getKey(),\r\n                    invoice.getValue().getRatedTransactions().size());\r\n        });\r\n\r\n        // Returns the list to the invoicing process\r\n        context.put(Script.RESULT_VALUE, new ArrayList(invoices.values()));\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_PERIOD_DAILY_ONCE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"One day period, only once\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"0\",\n  \"invoicingThreshold\": 0.01,\n  \"calendar\": \"CAL_PERIOD_DAILY_ONCE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_MONTHLY_1ST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"Monthly 1st\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"1\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"CAL_MONTHLY_1ST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_MONTHLY_PERIOD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"Monthly period\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"2\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"CAL_PERIOD_MONTHLY\",\n  \"referenceDate\": \"NEXT_INVOICE_DATE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Taxes",
									"item": [
										{
											"name": "Tax rates",
											"item": [
												{
													"name": "tax|code=TAX_20|desc=VAT 20%|percentage=20|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "0a5967bd-e423-446a-af9f-da6aba0f31ab",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=TAX_10|desc=VAT 10%|percentage=10|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "80e86a86-d364-402c-bdb9-181087eccfdd",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=NO_TAX|desc=No tax|percentage=0|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "db600521-2633-40a3-aa13-bd20ed6f251e",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax categories (account)",
											"item": [
												{
													"name": "taxCat|code=REGULAR|desc=Regular accounts",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "bc28a405-997b-4767-a620-a7578b4c16fa",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxCat|code=EXEMPTED|desc=Exempted accounts",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "a078caed-b53f-4f03-9caf-ab4463d98309",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax classes (charge)",
											"item": [
												{
													"name": "taxClass|code=NORMAL|desc=Product with normal tax",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "7e2274fe-9390-4b65-8ea7-2a9726b6db93",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=REDUCED|desc=Products with reduced tax",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "55324fea-feea-4d0b-9bd3-f56e271ad188",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=NO_TAX|desc=Products with no VAT",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "ec1f26ed-dd08-470e-9801-5c879acdb45f",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax mapping",
											"item": [
												{
													"name": "taxMapping|priority=100|taxCat=EXEMPTED|taxClass=|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f905ca34-6c46-457e-8c36-b75a48a4209b",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=REGULAR|taxClass=NO_TAX|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "e2dfe76b-7809-4f1b-a6e3-99459430dbed",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=1|taxCat=REGULAR|taxClass=NORMAL|buyer=|tax=TAX_20",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "d92e2de0-e775-4a1e-81fc-e731038cfd1c",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=2|taxCat=REGULAR|taxClass=REDUCED|buyer=|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "d4bdab2b-eebe-43eb-9a53-1a42c2b81735",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=10|taxCat=REGULAR|taxClass=NORMAL|buyer=US|tax=TAX_10",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "7a7a9149-72a0-429b-9a10-141e25018b00",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account",
									"item": [
										{
											"name": "title|code=MR|desc=Mr",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"isCompany\": \"false\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "custCat|code=CLIENT|taxCat=REGULAR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"Client\",\r\n    \"taxCategoryCode\": \"{{taxCat}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice",
									"item": [
										{
											"name": "Invoice Categories",
											"item": [
												{
													"name": "ICAT_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_PRD\",\n  \"description\": \"Product category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_PRD\",\n  \"description\": \"Product sub-category\",\n  \"invoiceCategory\": \"ICAT_PRD\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_REC",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_REC\",\n  \"description\": \"Recurring category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_REC",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_REC\",\n  \"description\": \"Recurring default sub-category\",\n  \"invoiceCategory\": \"ICAT_REC\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_OSH",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_OSH\",\n  \"description\": \"One shot category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OSS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OSS\",\n  \"description\": \"Oneshot Subscription sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OST",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OST\",\n  \"description\": \"Oneshot Termination sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OSO",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OSO\",\n  \"description\": \"Oneshot Other sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_USG",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_USG\",\n  \"description\": \"Usage category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_USG",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_USG\",\n  \"description\": \"Usage default sub-category\",\n  \"invoiceCategory\": \"ICAT_USG\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "invoiceType|code=COM|desc=Invoice",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{code}}\",\r\n  \"description\": \"{{desc}}\",\r\n  \"occTemplateCode\": \"INV_STD\",\r\n  \"occTemplateNegativeCode\": null,\r\n  \"billingTemplateName\": \"default\",\r\n  \"sequenceDto\": {\r\n    \"prefixEL\": \"#{invoice.invoiceType.code}-{{template.code}}-#{invoice.seller.code}-#{mv:formatDate(invoice.getInvoiceDate(),'yyyyMMdd')}-\",\r\n    \"sequenceSize\": 4,\r\n    \"currentInvoiceNb\":null\r\n  },\r\n  \"xmlFilenameEL\": \"XML_#{invoice.billingAccount.code}_#{invoice.invoiceNumber}\",\r\n  \"pdfFilenameEL\": \"PDF_#{invoice.billingAccount.code}_#{invoice.invoiceNumber}\",\r\n  \"sellerSequence\": null,\r\n  \"appliesTo\": [\r\n    \"COM\",\r\n    \"ADJ\"\r\n  ],\r\n  \"matchingAuto\": false,\r\n  \"useSelfSequence\": true\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Termination reasons",
									"item": [
										{
											"name": "TR_NONE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"TR_NONE\",\n\t\"description\": \"Termination with no action (no fees, no reimbursment)\",\n\t\"applyAgreement\": false,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": false,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_AGREEMENT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"TR_AGREEMENT\",\n\t\"description\": \"Termination with Charge Agreement\",\n\t\"applyAgreement\": true,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": false,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_REIMBURSE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Termination with Reimbursment\",\n    \"applyAgreement\": false,\n    \"applyReimbursment\": true,\n    \"applyTerminationCharges\": false,\n    \"reimburseOneshots\": true,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_FEE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{request.label}}\",\n\t\"description\": \"Termination fee\",\n\t\"applyAgreement\": false,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": true,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Notifications",
									"item": [
										{
											"name": "SCRIPT|CreateAccess|Creates an access on Subscription creation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f68d525-a771-4300-808f-8359861d1ae6",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Date;\r\nimport java.util.Map;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.admin.User;\r\nimport org.meveo.model.billing.Subscription;\r\nimport org.meveo.model.mediation.Access;\r\n\r\nimport org.meveo.service.medina.impl.AccessService;\r\nimport org.meveo.service.script.Script;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class CreateAccess extends Script {    \r\n    private static final Logger log = LoggerFactory.getLogger(CreateAccess.class);        \r\n\r\n    private AccessService accessService = (AccessService) getServiceInterface(\"AccessService\");\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context={}\", context);\r\n\r\n        Subscription subscription = (Subscription) context.get(\"entity\");\r\n        if(subscription == null){\r\n            throw new BusinessException(\"subscription is null\");\r\n        }\r\n        log.debug(\"subscription={}\", subscription);\r\n\r\n        Access access = new Access();\r\n        access.setSubscription(subscription);\r\n        access.setAccessUserId(subscription.getCode());\r\n        access.setStartDate(null);\r\n        access.setEndDate(null);\r\n        accessService.create(access);\r\n    }\r\n}]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "notifSubscriptionCreate",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"updatedCode\": null,\r\n    \"code\": \"subscriptionCreate\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.CreateAccess\",\r\n    \"scriptParams\": {\r\n      \"entity\": \"#{event}\"\r\n    },\r\n    \"counterTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Channels",
									"item": [
										{
											"name": "chan|code=PHONE|desc=Telephone",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=EMAIL|desc=E-mail",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=WEB|desc=Online store",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=RETAIL|desc=Retail store",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Catalog",
							"item": [
								{
									"name": "Rating scripts",
									"item": [
										{
											"name": "SCRIPT|LogContext|Logs the context",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "07982d1b-337d-4d62-8442-f88c87edd53f",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class LogContext extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogContext.class);\r\n    \r\n    @Override\r\n    public void execute(Map<String, Object> context) {\r\n        log.trace(\"EXECUTE context {}\", context);\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|code=ThrowException|desc=Throws an exception with WO content",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9358181-3419-4023-875e-fbd1ec513313",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{code}}</code>\r\n        <description>{{desc}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\n\r\n/**\r\n * A Rating Script that throws an exception with WO content\r\n * @author schambrin\r\n */\r\npublic class ThrowException extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(ThrowException.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context {}\", context);\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n\t\tString msg = \"WalletOperation {\"\r\n\t\t\t+\"code:\"+wo.getCode()+\", \"\r\n\t\t\t+\"description:\"+wo.getDescription()+\", \"\r\n\t\t\t+\"operationDate:\"+wo.getOperationDate()+\", \"\r\n\t\t\t+\"amountWithoutTax:\"+wo.getAmountWithoutTax()+\", \"\r\n\t\t\t+\"tax:\"+wo.getTax()+\", \"\r\n\t\t\t+\"tax_percent:\"+wo.getTaxPercent()\r\n\t\t\t+\"}\";\r\n        log.error(msg);\r\n        throw new BusinessException(msg);\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|InfiniteLoop|Locks into an infinite loop",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04764b5c-f8f4-45e6-8c77-31d77e91f642",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class InfiniteLoop extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(InfiniteLoop.class);\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) {\r\n        log.debug(\"EXECUTE context {}\", context);\r\n        log.info(\"CONTEXT_ENTITY={}\", context.get(Script.CONTEXT_ENTITY));\r\n        try {\r\n            while (true) {\r\n                log.trace(\"[RATING] Sleeping 5s...\");\r\n                Thread.sleep(5000);\r\n            }\r\n        } catch (java.lang.InterruptedException e) {\r\n            log.warn(\"Interrupted !!!\");\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.RatingSetTax|Forces tax on WO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "062c8870-eeb0-49d2-bee8-77eab6cf56e0",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * A Rating Script to force a tax\r\n * @author schambrin\r\n */\r\npublic class RatingSetTax extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(RatingSetTax.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context {}\", context);\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"edr.taxCode={}\",wo.getEdr().getParameter5());\r\n            Tax tax = taxService.findByCode(wo.getEdr().getParameter5());\r\n            \r\n            if( tax != null){\r\n                log.info(\"override tax={}\", tax);\r\n                wo.setTax(tax);\r\n                wo.setTaxPercent(tax.getPercent());\r\n                ratingService.calculateAmounts(wo,wo.getUnitAmountWithoutTax(),null);\r\n            }\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.LogWalletOperation|Logs the WalletOperation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46b06297-3608-47e3-bd42-2dfa46899bf6",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class LogWalletOperation extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogWalletOperation.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"wo={}\",new WalletOperationDto(wo));\r\n        \tlog.info(\"wo.tax={}\", wo.getTax());\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.RatingError|Throws an error if parameter2 is ERROR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "880c2772-0c3a-4f6c-aa47-18903ee9188a",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\n\r\n/**\r\n * A Rating Script that throws an exception if param2 is ERROR\r\n * takes param3 as error message\r\n * @author schambrin\r\n */\r\npublic class RatingError extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(RatingError.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        // log.info(\"EXECUTE context {}\", context);\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        if( \"ERROR\".equals(wo.getParameter2()) ){\r\n            // log.error(\"message: {}\",wo.getParameter3());\r\n            throw new BusinessException(wo.getParameter3());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.WalletOperationWithCF|Copies EDR param4-6 to cfParam4-6",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bdadd2cb-6176-474f-b0fa-12c84e7bf9db",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\nimport org.meveo.model.rating.EDR;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\nimport org.meveo.service.billing.impl.WalletOperationService;\r\nimport org.meveo.service.crm.impl.CustomFieldInstanceService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class WalletOperationWithCF extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(WalletOperationWithCF.class);\r\n\r\n    private RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n    private TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n    private WalletOperationService walletOperationService = (WalletOperationService)getServiceInterface(\"WalletOperationService\");\r\n    CustomFieldInstanceService customFieldInstanceService = (CustomFieldInstanceService)getServiceInterface(\"CustomFieldInstanceService\");\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\", entry.getKey(), entry.getValue()); });\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n        EDR edr = wo.getEdr();\r\n        if( edr == null ) {\r\n            log.error(\"This script is to be used for usage rating only (EDR is required)\");\r\n            throw new BusinessException(\"This script is to be used for usage rating only (EDR is required)\");\r\n        }\r\n\r\n        try {\r\n            log.info(\"wo={}\", new WalletOperationDto(wo));\r\n            log.info(\"wo.quantity={}\", wo.getQuantity());\r\n            log.info(\"wo.tax={}\", wo.getTax());\r\n\r\n            wo.setCfValue(\"cfParam4\", edr.getParameter4());\r\n            wo.setCfValue(\"cfParam5\", edr.getParameter5());\r\n            wo.setCfValue(\"cfParam6\", edr.getParameter6());\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "OfferTemplateCategory",
									"item": [
										{
											"name": "ocat|code=OCAT_ROOT|parent=",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Offer category {{code}}\",\n    \"disabled\": false,\n    \"name\": \"OCat {{code}}\",\n    \"offerTemplateCategoryCode\": \"{{parent}}\",\n    \"active\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "ocat|code=OCAT_CHILD|parent=OCAT_ROOT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Offer category {{code}}\",\n    \"disabled\": false,\n    \"name\": \"OCat {{code}}\",\n    \"offerTemplateCategoryCode\": \"{{parent}}\",\n    \"active\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Custom Fields",
									"item": [
										{
											"name": "Service",
											"item": [
												{
													"name": "CF_SE_DOUBLE (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE\",\n    \"description\": \"A double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE\",\n    \"description\": \"A double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": false,\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE_VERSION (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE_VERSION\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE_VERSION (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE_VERSION\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": true,\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING_TEMPLATE_ONLY (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING_TEMPLATE_ONLY\",\n    \"description\": \"A String on service template only\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"from service template\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING_INSTANCE_ONLY (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING_INSTANCE_ONLY\",\n    \"description\": \"A String on service instance only\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"from service instance\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING\",\n    \"description\": \"A String from service template\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"from service template\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING\",\n    \"description\": \"A String from service instance\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"from service instance\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_TIER_PRICE (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_TIER_PRICE\",\n    \"description\": \"Tiered pricing\",\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"Tarif par tranches\"\n        },\n        {\n            \"languageCode\": \"ENG\",\n            \"description\": \"Tiered pricing\"\n        }\n    ],\n    \"fieldType\": \"MULTI_VALUE\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"useInheritedAsDefaultValue\": true,\n    \"storageType\": \"MATRIX\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n\t\"guiPosition\": \"tab:Pricing|ENG=Pricing|FRA=Tarification:0;fieldGroup:Price|ENG=Price|FRA=Prix:0;field:40\",\n    \"applicableOnEl\": \"#{ true }\",\n    \"matrixColumn\": [\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 1,\n            \"code\": \"tier\",\n            \"label\": \"Tier\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 1,\n            \"code\": \"volume\",\n            \"label\": \"Volume\",\n            \"keyType\": \"LONG\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 2,\n            \"code\": \"price\",\n            \"label\": \"Price\",\n            \"keyType\": \"DOUBLE\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 3,\n            \"code\": \"label\",\n            \"label\": \"Label\",\n            \"keyType\": \"STRING\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CFT|code=CF_SE_MAP_RON_DOUBLE|target=ServiceTemplate|type=DOUBLE|storage=MAP|desc=Map [RON]=Double",
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"fieldType\": \"{{type}}\",\r\n    \"appliesTo\": \"{{target}}\",\r\n    \"defaultValue\": 1.0,\r\n    \"storageType\": \"{{storage}}\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"triggerEndPeriodEvent\": false,\r\n    \"calendar\": null,\r\n    \"cacheValueTimeperiod\": null,\r\n    \"entityClazz\": null,\r\n    \"listValues\": null,\r\n    \"allowEdit\": true,\r\n    \"hideOnNew\": false,\r\n    \"maxValue\": null,\r\n    \"minValue\": null,\r\n    \"regExp\": null,\r\n    \"cacheValue\": false,\r\n    \"mapKeyType\": \"RON\",\r\n    \"applicableOnEl\": null,\r\n    \"indexType\": null,\r\n    \"matrixColumn\": null,\r\n    \"fieldCode\": null,\r\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\r\n  }"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CFT|code=CF_SE_MAP_RON_DOUBLE|target=ServiceInstance|type=DOUBLE|storage=MAP|desc=Map [RON]=Double",
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"fieldType\": \"{{type}}\",\r\n    \"appliesTo\": \"{{target}}\",\r\n    \"defaultValue\": null,\r\n    \"storageType\": \"{{storage}}\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"triggerEndPeriodEvent\": false,\r\n    \"calendar\": null,\r\n    \"cacheValueTimeperiod\": null,\r\n    \"entityClazz\": null,\r\n    \"listValues\": null,\r\n    \"allowEdit\": true,\r\n    \"hideOnNew\": false,\r\n    \"maxValue\": null,\r\n    \"minValue\": null,\r\n    \"regExp\": null,\r\n    \"cacheValue\": false,\r\n    \"mapKeyType\": \"RON\",\r\n    \"applicableOnEl\": null,\r\n    \"indexType\": null,\r\n    \"matrixColumn\": null,\r\n    \"fieldCode\": null,\r\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\r\n  }"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "OfferTemplate",
											"item": [
												{
													"name": "CF|code=CF_OF_STRING|target=OfferTemplate|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "ProductTemplate",
											"item": [
												{
													"name": "CF|code=CF_PR_STRING|target=ProductTemplate|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{code}}: a {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "WalletOperation",
											"item": [
												{
													"name": "CF|code=cfParam4|target=WalletOperation|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{code}}: a {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF|code=cfParam5|target=WalletOperation|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{code}}: a {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF|code=cfParam6|target=WalletOperation|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{code}}: a {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Counters",
									"item": [
										{
											"name": "counter|CN_USG_COUNTER_3|Counter 3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"CAL_MONTHLY_1ST\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|CN_USG_COUNTER_4|Counter 4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"CAL_MONTHLY_1ST\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_USG_ACCUM_C|type=USAGE|target=CUST|calendar=CAL_MONTHLY_1ST|desc=Accumulates quantities on the Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_EUR_ACCUM_C|type=USAGE_AMOUNT|target=CUST|calendar=CAL_MONTHLY_1ST|desc=Accumulates amounts on the Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_MULTI_ACCUM_C|type=MULTI_VALUE|target=CUST|calendar=MONTHLY|desc=Accumulates quantity for Param2 on Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"USAGE\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true,\n    \"accumulatorType\": \"{{type}}\",\n    \"filterEl\": \"#{ true }\",\n    \"keyEl\": \"#{ op.parameter2 }\",\n    \"valueEl\": \"#{ op.quantity }\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Prepaid wallets",
									"item": [
										{
											"name": "wallet|code=PREPAID|desc=Prepaid wallet",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"walletType\": \"PREPAID\",\r\n    \"consumptionAlertSet\": null,\r\n    \"fastRatingLevel\": null,\r\n    \"lowBalanceLevel\": 100.000000000000,\r\n    \"rejectLevel\": 50.000000000000\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/template",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"template"
													]
												}
											},
											"response": []
										},
										{
											"name": "notif|code=prepaidLowBalance|event=LOW_BALANCE|class=org.meveo.model.billing.WalletInstance",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"disabled\": false,\n    \"classNameFilter\": \"{{class}}\",\n    \"eventTypeFilter\": \"{{event}}\",\n    \"elFilter\": \"#{ true }\",\n    \"scriptInstanceCode\": \"org.meveo.service.script.LogContext\",\n    \"scriptParams\": {},\n    \"priority\": 1,\n    \"active\": true,\n    \"runAsync\": false,\n    \"saveSuccessfulNotifications\": true\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Charges",
									"item": [
										{
											"name": "CH_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_PRD\",\n    \"description\": \"Product\",\n    \"invoiceSubCategory\": \"ISCAT_PRD\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_2MONTHS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_DAILY\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|code=CH_REC_ADV_MONTHLY|desc=Monthly recurring fee (1st of the month)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_MONTHLY\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ARR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_REC_ARR\",\n    \"description\": \"Recurring charge ARREAR\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": false,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_2DAYS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT|Charge unit 1",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{request.label.2}}\",\n    \"invoiceSubCategory\": \"ISCAT_USG\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"UNIT\",\n    \"priority\": 10\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_2|Charge unit 2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit2\",\r\n    \"ratingUnitDescription\": \"unit2\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT2\",\r\n    \"triggerNextCharge\": true,\r\n    \"priority\": 20\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_2_bis|Charge unit 2 bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit2\",\r\n    \"ratingUnitDescription\": \"unit2\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT2\",\r\n    \"triggerNextCharge\": true,\r\n    \"priority\": 21\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_3|Charge unit 3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit3\",\r\n    \"ratingUnitDescription\": \"unit3\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT3\",\r\n    \"priority\": 30\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_3_bis|Charge unit 3 bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit3\",\r\n    \"ratingUnitDescription\": \"unit3\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT3\",\r\n    \"priority\": 31\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_4|Charge unit 4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit4\",\r\n    \"ratingUnitDescription\": \"unit4\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT4\",\r\n    \"priority\": 40\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH|code=USG_RON|desc=Charge RON",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.0}}_{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"invoiceSubCategory\": \"ISCAT_USG\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"RON\",\n    \"priority\": 10\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_5MONTHS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_5DAYS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OSS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Subscription\",\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OSS\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Termination\",\n    \"oneShotChargeTemplateType\": \"TERMINATION\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OST\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OSO",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Other\",\n    \"oneShotChargeTemplateType\": \"OTHER\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OSO\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_REC_ADV\",\n    \"description\": \"Recurring charge ADVANCE\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "recurringCharge|CH_REC_ADV|true",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"Recurring charge ADVANCE\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ {{request.label.2}} }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Price Plans",
									"item": [
										{
											"name": "PP_REC_ADV",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_REC_ADV\",\n    \"eventCode\": \"CH_REC_ADV\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_OSS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_OSS\",\n    \"eventCode\": \"CH_OSS\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\",\n    \"scriptInstance\": null\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_OST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_OST\",\n    \"eventCode\": \"CH_OST\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\",\n    \"scriptInstance\": null\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_2MONTHS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_PRD\",\n    \"eventCode\": \"CH_PRD\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_5DAYS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "pp|code=REC_ADV_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"eventCode\": \"CH_{{code}}\",\n    \"amountWithoutTax\": 100.123456789\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_DAILY\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ARR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_REC_ARR\",\n    \"eventCode\": \"CH_REC_ARR\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT\",\n    \"eventCode\": \"CH_USG_UNIT\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT 2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_2\",\n    \"eventCode\": \"CH_USG_UNIT_2\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 2 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_2_bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_2_bis\",\n    \"eventCode\": \"CH_USG_UNIT_2_bis\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 2.5 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_3\",\n    \"eventCode\": \"CH_USG_UNIT_3\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 3 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_3_bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_3_bis\",\n    \"eventCode\": \"CH_USG_UNIT_3_bis\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 3.5 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_4\",\n    \"eventCode\": \"CH_USG_UNIT_4\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 4 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "pp|code=USG_RON",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_{{code}}\",\n    \"eventCode\": \"CH_{{code}}\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueByKey(serviceInstance, 'CF_SE_MAP_RON_DOUBLE', op.quantity) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_5MONTHS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_2DAYS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Services",
									"item": [
										{
											"name": "RESET SERVICE LIST (DO NOT EDIT)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "af213ca1-9921-41a9-bfdb-3ba48e857a63",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "HEAD",
												"header": [],
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_OSS|desc=One-shot subscription service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "37ac71e7-b840-47a0-83cd-a7760094981d",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": {\r\n      \"serviceChargeTemplateSubscription\": [\r\n        { \"code\": \"CH_OSS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												},
												"description": "Should stay first of the list (see script)"
											},
											"response": []
										},
										{
											"name": "SE|code=SE_OST|desc=One-shot termination service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "c86441d3-b436-4a4d-859b-a811434fa857",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 15.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": {\r\n      \"serviceChargeTemplateSubscription\": [\r\n        { \"code\": \"CH_OST\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												},
												"description": "Should stay first of the list (see script)"
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV|desc=Recurring service ADVANCE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "33caa7d4-b607-471a-923a-f339df203ee6",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT|desc=Unit usage service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6ac63ed5-8cf9-4712-b939-50dc7a77f258",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_DOUBLE\",\n                \"doubleValue\": 3\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": null,\n                \"counterTemplate\": null,\n                \"accumulatorCounterTemplates\": {\n                \t\"counterTemplate\": [\n                \t\t\"CN_USG_ACCUM_C\",\n                \t\t\"CN_EUR_ACCUM_C\",\n                \t\t\"CN_MULTI_ACCUM_C\"\n                \t]\n                }\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT_2_3_4|desc=Unit usage service 2, 3, 4",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "f8099daf-8dba-4fe1-9838-ddbcff511cab",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": {\r\n      \"serviceChargeTemplateUsage\": [\r\n        { \"code\": \"CH_USG_UNIT_2\" },\r\n        { \"code\": \"CH_USG_UNIT_2_bis\" },\r\n        { \"code\": \"CH_USG_UNIT_3\", \"counterTemplate\":\"CN_USG_COUNTER_3\" },\r\n        { \"code\": \"CH_USG_UNIT_3_bis\" },\r\n        { \"code\": \"CH_USG_UNIT_4\", \"counterTemplate\":\"CN_USG_COUNTER_4\" }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_RON|desc=RON usage service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "9aeb2040-03f0-4c6b-800f-3ef1188fed55",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_MAP_RON_DOUBLE\",\n                \"mapValue\": {\n\"0<10\":   { \"value\": 2.0 },\n\"10<100\": { \"value\": 3.0 },\n\"100<\":   { \"value\": 4.0 }\n                }\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_RON\",\n                \"wallets\": null,\n                \"counterTemplate\": null\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT_PREPAID|desc=Unit usage service with a prepaid wallet",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "087b0967-9b24-4760-a4f3-1983d8588e4d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_DOUBLE\",\n                \"doubleValue\": 3\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": {\n                    \"wallet\": [\n                        \"PREPAID\"\n                    ]\n                },\n                \"counterTemplate\": null,\n                \"accumulatorCounterTemplates\": null\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ARR|desc=Recurring service ARREAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "a807e80b-60b9-4aea-8922-7bdfc9160c58",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ARR\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIODS_DAY|desc=Recurring service ADVANCE DAY PERIODS",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "eda38724-08e1-4dda-af56-7ba54508467f",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_DAILY\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_2DAYS\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_5DAYS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIODS_MONTH|desc=Recurring service ADVANCE MONTH PERIODS",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "21d2c408-99c4-46cb-8039-4a4c4be5b9da",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_MONTHLY\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_2MONTHS\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_5MONTHS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIOD_DAILY|desc=Recurring service ADVANCE DAILY",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "9cd75465-33fa-41d1-bf2e-96d3a5763bf8",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_DAILY\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "1150fe53-6818-49e9-bfab-ad422335d99c",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"id": "77e292e7-0a48-469d-9b74-aee120f3b5e4",
												"exec": [
													"var services;",
													"var serviceCode;",
													"if(pm.info.requestName==='RESET SERVICE LIST (DO NOT EDIT)') {",
													"    services = \"\";",
													"} else {",
													"    services = pm.globals.get(\"offer.services\");",
													"    serviceCode = pm.globals.get(\"code\");",
													"    if(services === \"\") {",
													"        services = '{\"serviceTemplate\":{\"code\":\"'+serviceCode+'\",\"customFields\":null},\"mandatory\":false,\"incompatibleServiceTemplate\":[]}';",
													"    } else {",
													"        services += '\\n,{\"serviceTemplate\":{\"code\":\"'+serviceCode+'\",\"customFields\":null},\"mandatory\":false,\"incompatibleServiceTemplate\":[]}';",
													"    }",
													"}",
													"",
													"pm.globals.set(\"offer.services\", services);",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Products and Bundles",
									"item": [
										{
											"name": "PR_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"PR_PRD\",\r\n  \"description\": \"Product\",\r\n  \"name\": \"A product has no name (or has it)\",\r\n  \"validFrom\": null,\r\n  \"validTo\": null,\r\n  \"lifeCycleStatus\": \"ACTIVE\",\r\n  \"customFields\": null,\r\n  \"imageBase64\": null,\r\n  \"businessProductModel\": null,\r\n  \"offerTemplateCategory\": null,\r\n  \"productChargeTemplate\": [ { \"code\": \"CH_PRD\" } ],\r\n  \"walletTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Offers",
									"item": [
										{
											"name": "OF|code=OF",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{template.label}} offer {{$timestamp}}\",\n    \"disabled\": false,\n    \"lifeCycleStatus\": \"ACTIVE\",\n    \"bomCode\": null,\n    \"offerTemplateCategoryCode\": null,\n    \"offerProductTemplate\": [\n        {\n            \"productTemplate\": {\n                \"code\": \"PR_PRD\"\n            }\n        }\n    ],\n    \"offerServiceTemplate\": [\n{{offer.services}}\n    ],\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_OF_STRING\",\n                \"stringValue\": \"From OfferTemplate {{code}}\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "OF|code=OF_EMPTY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\":\"{{code}}\",\r\n    \"description\":\"{{template.label}} empty offer {{$timestamp}}\",\r\n    \"disabled\":false,\r\n    \"lifeCycleStatus\":\"ACTIVE\",\r\n    \"bomCode\":null,\r\n    \"offerTemplateCategoryCode\":null,\r\n    \"offerProductTemplate\": null,\r\n    \"offerServiceTemplate\":null,\r\n    \"customFields\": {\r\n    \t\"customField\": [\r\n    \t\t{\r\n    \t\t\t\"code\": \"CF_OF_STRING\",\r\n    \t\t\t\"stringValue\": \"From OfferTemplate {{code}}\"\r\n    \t\t}\r\n    \t]\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "BxM",
									"item": [
										{
											"name": "BSM",
											"item": [
												{
													"name": "BSM_OSS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"BSM_OSS\",\r\n    \"description\": \"BSM Subscription fee\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"SE_OSS\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "BSM_REC_ADV",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"BSM_REC_ADV\",\r\n    \"description\": \"BSM Recurring Advance\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"SE_REC_ADV\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bsm|code=BSM_USG_UNIT|desc=BSM unit usage|service=SE_USG_UNIT",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"{{service}}\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "BPM",
											"item": [
												{
													"name": "bpm|code=BPM_PRD|desc=BPM product|target=PR_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"license\": \"COM\",\r\n    \"productTemplate\": { \"code\": \"{{target}}\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessProductModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessProductModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "BOM",
											"item": [
												{
													"name": "bom|code=BOM_SERVICE|desc=BOM based on offer OF|offer=OF",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": { \"code\": \"{{offer}}\" },\n\t\"moduleItems\": null\n}\n\n"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|install|code=BOM_SERVICE",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|code=BOM_BSM|desc=BOM with BSMs|offer=OF_EMPTY",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": {\n        \"code\": \"{{offer}}\"\n    },\n    \"moduleItems\": [\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_REC_ADV\"\n            }\n        },\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_USG_UNIT\"\n            }\n        },\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_OSS\"\n            }\n        },\n        {\n            \"businessProductModel\": {\n                \"code\": \"BPM_PRD\"\n            }\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|install|code=BOM_BSM",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|code=BOM_EMPTY|desc=BOM on an empty offer|offer=OF_EMPTY",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": {\n        \"code\": \"{{offer}}\"\n    },\n    \"moduleItems\": []\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "installBOM|code=BOM_EMPTY",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Discount plan",
									"item": [
										{
											"name": "Discount plan",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DP_DISCOUNT_PLAN\",\r\n    \"description\": \"Discount plan description\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Discount plan item (percent 50%)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DPI_DISCOUNT_PLAN_50P\",\r\n    \"discountPlanCode\": \"DP_DISCOUNT_PLAN\",\r\n    \"invoiceCategoryCode\": \"ICAT_OSH\",\r\n    \"invoiceSubCategoryCode\": \"ISCAT_OSO\",\r\n    \"accountingCode\": \"ACCT_CODE\",\r\n    \"expressionEl\": \"#{ true }\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"PERCENTAGE\",\r\n    \"discountValue\": 50,\r\n    \"discountValueEL\": \"#{ 50 }\",\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Discount plan item (fixed 10)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DPI_DISCOUNT_PLAN_10F\",\r\n    \"discountPlanCode\": \"DP_DISCOUNT_PLAN\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"FIXED\",\r\n    \"discountValue\": 10,\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlan|DP_FIXED_200",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Discount plan {{request.label.1}}\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlanItem|DP_FIXED_200|DPI_FIXED_200|FIXED|200",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.2}}\",\r\n    \"discountPlanCode\": \"{{request.label.1}}\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"{{request.label.3}}\",\r\n    \"discountValue\": {{request.label.4}},\r\n    \"discountValueEL\": \"#{amount}\",\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlan|DP_GLOBAL_10P",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Discount plan {{request.label.1}}\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlanItem|DP_GLOBAL_10P|DPI_GLOBAL_10P|PERCENTAGE|10",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.2}}\",\r\n    \"discountPlanCode\": \"{{request.label.1}}\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"{{request.label.3}}\",\r\n    \"discountValue\": {{request.label.4}},\r\n    \"discountValueEL\": null,\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "From BOM/BSM/BPM",
					"item": [
						{
							"name": "fromBOM|bom=BOM_BSM|code=OF_USG_1|name=Offer USG 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "264e02dd-772c-480e-891b-2654391cefcc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3103db13-432e-413f-8160-289fde928add",
										"exec": [
											"pm.globals.set(\"offer.id\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bomCode\": \"{{bom}}\",\n    \"code\": \"{{code}}\",\n    \"name\": \"{{name}}\",\n    \"description\": \"{{name}} {{$timestamp}}\",\n    \"businessServiceModel\": [\n        {\n            \"code\": \"BSM_USG_UNIT\",\n            \"service\": {\n                \"code\": \"SE_USG_UNIT\",\n                \"description\": \"Unit usage rating 1\",\n                \"mandatory\": true,\n                \"parameter\": []\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalogManagement/createOfferFromBOM",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalogManagement",
										"createOfferFromBOM"
									]
								}
							},
							"response": []
						},
						{
							"name": "fromBOM|bom=BOM_BSM|code=OF_USG_2|name=Offer USG 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7ba158c9-64a5-49f1-b21c-967feca77694",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a057efa5-8974-4584-8d68-f69e7323cfb0",
										"exec": [
											"pm.globals.set(\"offer.id\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bomCode\": \"{{bom}}\",\n    \"code\": \"{{code}}\",\n    \"name\": \"{{name}}\",\n    \"description\": \"{{name}} {{$timestamp}}\",\n    \"businessServiceModel\": [\n        {\n            \"code\": \"BSM_USG_UNIT\",\n            \"service\": {\n                \"code\": \"SE_USG_UNIT\",\n                \"description\": \"Unit usage rating 2\",\n                \"mandatory\": true,\n                \"parameter\": []\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalogManagement/createOfferFromBOM",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalogManagement",
										"createOfferFromBOM"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "# Introduction\r\n\r\nThis configuration file is designed to be a basis for all configurations provided by Opencell.\r\nIt merely contains most common general settings and a catalog of services implementing various rating models.\r\n\r\n# Configuring Opencell\r\n\r\nThere are 2 main ways for configuring ***Opencell***:\r\n* GUI (*Administration GUI* and *Marketing Manager*)\r\n* API (all Opencell configuration and operations can be performed using our extensive API library)\r\n\r\nThe most flexible way is using APIs which currently are available as **Rest** and **Soap**.\r\nThe **Soap** API are deprecated, so will won't mention them anymore.\r\n\r\n## Tools\r\n\r\nAny tools able to send HTTP requests will do.\r\nOne could even just script *curl* calls using shell script.\r\nBut of course, a more user friendly tool will make things easier.\r\n\r\nHere at ***Opencell***, we prefer **Postman** (https://getpostman.com):\r\n* it has a modern, friendly interface\r\n* Sets of API request can be organized into collections, themselves structured into a folder tree.\r\n* Collections can be exported as _JSON_ files or shared with other team members using collaboration features (payed version)\r\n* it allows to uses variables at different levels (collection, environement, global) and to execute *Javascript* scripts before and after executing API calls which allows great flexibility and API response testing.\r\n\r\n\r\n\r\n# Configuration documentation guidelines\r\n\r\nIn order to document our configuration, we make full used of the internal documentation capabilities of the Markdown fields on Postman Objects\r\n\r\n## Default template for *Collection* documentation\r\n\r\n## Default template for *Folder* documentation\r\n\r\n## Default template for *Request* documentation\r\n\r\n\r\n\r\n# Tips & guidelines\r\n\r\nHere follow a few tips for understanding this collection.\r\n\r\n## Collection pre-request script\r\n\r\n```javascript\r\npm.globals.set(\"timestamp.iso\", (new Date()).toISOString());\r\npm.globals.set(\"request.label\", pm.info.requestName);\r\n\r\nvar parts = pm.info.requestName.split(\"|\");\r\n\r\nfor(let i=0; i<parts.length; i++) {\r\n    pm.globals.set(\"request.label.\"+i, parts[i]);\r\n}\r\n```\r\n\r\n## Configuration guidelines\r\n\r\n## Entities\r\n\r\n<entity>_<project_code>_XXX\r\n\r\n### Custom Fields\r\n\r\nCF_<entity>_<project_code>_ XXX\r\n\r\n<entity> will be discarded for inherited\r\n\r\n#### Custom field visibility\r\n\r\nSE_<entity>_<project_code>_<markers>_XXX\r\n\r\n<markers> are used in CFT.applicableOnEl to show CFT on entities\r\n\r\n\r\n## Entity abbreviation\r\n\r\n| code  | entity                        |\r\n|:-----:|:------------------------------|\r\n|   P   | Provider                      |\r\n|   S   | Seller                        |\r\n|   C   | Customer                      |\r\n|  CA   | Customer Account              |\r\n|  BA   | Billing Account               |\r\n|  UA   | User Account                  |\r\n|  SU   | Subscription                  |\r\n|  AP   | Access Point                  |\r\n|  OF   | Offer Template                |\r\n|  SE   | Service Template and Instance |\r\n|  CH   | Charge Template               |\r\n|  PP   | Price Plan                    |\r\n|  CN   | Counter                       |\r\n| ICAT  | Invoice Category              |\r\n| ISCAT | Invoice SubCategory           |\r\n|  CAL  | Calendar                      |\r\n|  BC   | Billing Cycle                 |\r\n",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "accessToken",
						"value": "{{access_token}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8e3bf5b2-92a8-478b-8e03-4f92adba1381",
						"type": "text/javascript",
						"exec": [
							"// Initialize variables",
							"var now=new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"",
							"    if(parts[i].indexOf(\"=\") != -1 ){",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							"// Manage token auth",
							"var token = pm.variables.get(\"access_token\");",
							"//console.log(\"token=\"+token);",
							"",
							"if(!token || token === \"\" ) {",
							"    console.log(\"token is not defined\");",
							"    // Set some environment variables to use in the access token request. ",
							"    var client_id = pm.environment.get(\"client.id\");",
							"    var client_secret = pm.environment.get(\"client.secret\");",
							"    var opencell_url = pm.environment.get(\"opencell.base\");",
							"    var username = pm.environment.get(\"opencell.username\");",
							"    var password = pm.environment.get(\"opencell.password\");",
							"    var CryptoJS = require(\"crypto-js\")",
							"    // Encrypt the Client ID and Secret in base64 ",
							"    var rawStr = CryptoJS.enc.Utf8.parse(client_id + ':' + client_secret)",
							"    var client_cred = CryptoJS.enc.Base64.stringify(rawStr)",
							"    // Now let's get a new oauth2 access_token and set it in a variable ",
							"    pm.sendRequest(",
							"        { ",
							"            url: opencell_url + '/auth/realms/opencell/protocol/openid-connect/token', ",
							"            method: 'POST', ",
							"            header: ",
							"            { ",
							"                //'Authorization': 'Basic ' + client_cred, ",
							"                'Cache-Control': 'no-cache', ",
							"                'Content-Type': 'application/x-www-form-urlencoded' ",
							"            }, body: ",
							"            { ",
							"                mode: 'urlencoded', ",
							"                urlencoded: ",
							"                [",
							"                    { ",
							"                        key: \"client_id\", ",
							"                        value: client_id ",
							"                    }, ",
							"                    { ",
							"                        key: \"username\", ",
							"                        value: username ",
							"                    },",
							"                    { ",
							"                        key: \"password\", ",
							"                        value: password ",
							"                    },",
							"                    { ",
							"                        key: \"grant_type\", ",
							"                        value: \"password\" ",
							"                    },",
							"                    { ",
							"                        key: \"client_secret\", ",
							"                        value: client_secret",
							"                    },",
							"                ] ",
							"            } ",
							"        }, ",
							"        function (err, response) { ",
							"            //console.log(\"AUTH_RETURN_CODE\", err);",
							"            //console.log(\"AUTH_RESPONSE\", response);",
							"            const jsonResponse = response.json();",
							"            console.log(\"Saving token to variables\")",
							"            pm.variables.set(\"access_token\", jsonResponse.access_token); ",
							"        }",
							"        );",
							"} else{",
							"    console.log(\"token already exists\");",
							"}",
							"",
							"// Setup Function library",
							"utils = {",
							"  sleep: function(seconds) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + seconds + \" seconds...\");",
							"    setTimeout(function () { }, seconds * 1000);",
							"  }",
							"};",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "13ea1fa3-5cb1-430e-88c0-4dd6e5cb1d43",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"if (wait > 0) {",
							"    // utils.sleep(wait); doesn't seem to work",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5489 - ChargeToDateOnTermination EL",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b2e5824-1809-4635-8e83-0600abd0a985",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5489_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create calendar for Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ed400c2-c82b-4f5e-8021-4fb09c006983",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_CAL_5489_REC\",\n    \"description\": \"Monthly (1st of the month)\",\n    \"calendarType\": \"YEARLY\",\n    \"days\": [\n        {\n            \"day\": \"1\",\n            \"month\": \"JANUARY\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"FEBRUARY\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"MARCH\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"APRIL\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"MAY\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"JUNE\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"JULY\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"AUGUST\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"SEPTEMBER\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"OCTOBER\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"NOVEMBER\"\n        },\n        {\n            \"day\": \"1\",\n            \"month\": \"DECEMBER\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "981d8556-4545-4de5-b219-ef2cc69b2847",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5489_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5489_BC\",\r\n\t\"lastTransactionDateEL\":\"#{mv:getStartOfMonth(mv:now())}\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "93a41bde-1a39-4f77-a82b-0f823beca798",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5489\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Class",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c8896dd-37b5-472b-a384-7c66cc65ea1f",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_taxClass_5489\",\r\n    \"description\": \"Tax class\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/taxClass/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxClass",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c65a2477-ccf1-477d-b804-ae0f84a05dcf",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5489\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "tax|{{testCode}}_TAX_5489_20|VAT 20%|20|445710000",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "af23a278-092c-483b-af28-40b3856bf656",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{request.label.1}}\",\n  \"description\": \"{{request.label.2}}\",\n  \"percent\": \"{{request.label.3}}\",\n  \"accountingCode\": \"{{request.label.4}}\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/tax/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"tax",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Mapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76b1e2a3-172b-4a21-80ef-4afff7bf7e7f",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountTaxCategoryCode\": \"{{testCode}}_taxCategory_5489\",\r\n    \"chargeTaxClassCode\": \"{{testCode}}_taxClass_5489\",\r\n    \"taxCode\": \"{{testCode}}_TAX_5489_20\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/taxMapping/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxMapping",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "INV_CATEGORY|{{testCode}}_INV_CAT_5489",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea44928f-b908-492c-8052-5e035462399c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\": \"{{request.label.1}}\",\n\t\"description\": \"Invoice category\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoiceCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "INV_CATEGORY|{{testCode}}_INV_CAT_5489|{{testCode}}_INV_SUBCAT_5489",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16150311-b90f-4f78-9305-8b6f0b663ea2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\": \"{{request.label.2}}\",\n\t\"invoiceCategory\": \"{{request.label.1}}\",\n\t\"accountingCode\": \"701000000\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoiceSubCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Termination reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13782473-84eb-47b3-b96b-4e09175e4ba3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46aFViNTJBTTNDZSEh"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_terminationReason_5489\",\n    \"description\": \"Termination reason\",\n    \"applyAgreement\": true,\n    \"applyReimbursment\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"terminationReason",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d98af7c8-71b8-467c-928c-5d02788b43e8",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_REC_5489\",\r\n\t\"invoiceSubCategory\": \"{{testCode}}_INV_SUBCAT_5489\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5489_REC\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n\t\"taxClassCode\" : \"{{testCode}}_taxClass_5489\",\r\n\t\"applyTerminatedChargeToDateEL\": \"#{ci.userAccount.billingAccount.getCfValue('5489_chargeToDate')}\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"recurringChargeTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Service",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0e07025-afb8-4dd9-998d-2d4497ebcc35",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_SERVICE_5489\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{testCode}}_REC_5489\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"serviceTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Offer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fecdfb86-70f6-4af8-99bd-4d8b2c9677f8",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_OFFER_5489\",\n    \"name\": \"{{testCode}}_OFFER_5489\",\n    \"disabled\": \"false\",\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"{{testCode}}_SERVICE_5489\"\n            }\n        }\n    ],\n    \"lifeCycleStatus\": \"ACTIVE\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"offerTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Price Plan  Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5993a8fc-96f4-45fc-99ea-294f7eb8c68a",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_REC_5489\",\r\n\t\"eventCode\": \"{{testCode}}_REC_5489\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"pricePlan",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c6ec9f1-a6e9-4f22-bad5-f59ff9c00146",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5489_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5489\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5489_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5489\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CF|BillingAccount|5489_chargeToDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ae9c5a3-66f9-4777-a75f-54dc76676859",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{request.label.2}}\",\n    \"description\": \"5489 charge to date on termination\",\n    \"fieldType\": \"DATE\",\n    \"appliesTo\": \"{{request.label.1}}\",\n    \"storageType\": \"SINGLE\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"customFieldTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5db5c51e-656c-4b3d-af77-ef8f1ae7af58",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aad2d0c7-dcda-4627-a9b8-399f92da83a4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_SUB_5489_1\",\r\n    \"userAccount\": \"UA_{{testCode}}_CH_5489_1\",\r\n    \"offerTemplate\": \"{{testCode}}_OFFER_5489\",\r\n    \"subscriptionDate\": \"2020-07-01\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate services 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6779d78-2980-4b38-9950-03da6736e283",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bbae6197-8374-462d-b50e-bd8c2031718d",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus3Month = moment().startOf('month').add(-3, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus3Month\", todayMinus3Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscription\": \"{{testCode}}_SUB_5489_1\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{testCode}}_SERVICE_5489\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2020-07-01\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/activateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"activateServices"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Terminate services 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb43b87b-cd07-4008-916f-03242ac34f8e",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "36730abc-cb6f-41d8-b99b-01fe47e3d2b8",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus2Month = moment().startOf('month').add(-2, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus2Month\", todayMinus2Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscriptionCode\": \"{{testCode}}_SUB_5489_1\",\n    \"services\": [\n        \"{{testCode}}_SERVICE_5489\"\n    ],\n    \"terminationDate\": \"2020-08-01\",\n    \"terminationReason\": \"{{testCode}}_terminationReason_5489\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/terminateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"terminateServices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check wallet operations for account 1 subscription 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "588c7101-1928-48b9-84c4-d78b89e620cc",
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"pm.test(\"Success\", function () {\r",
											"    pm.expect(jsonData.total).is.equal(5);\r",
											"});\r",
											"\r",
											"var recTotal = jsonData.data.length;\r",
											"\r",
											"var values = [];\r",
											"\r",
											"var compareTo =[\r",
											"\r",
											"\"2020-09-01 / 2020-09-01 / 2020-10-01 / 1 / 1 / OPEN\",\r",
											"\"2020-08-01 / 2020-09-01 / 2020-10-01 / -1 / -1 / OPEN\",\r",
											"\"2020-08-01 / 2020-08-01 / 2020-09-01 / 1 / 1 / OPEN\",\r",
											"\"2020-08-01 / 2020-08-01 / 2020-09-01 / -1 / -1 / OPEN\",\r",
											"\"2020-07-01 / 2020-07-01 / 2020-08-01 / 1 / 1 / OPEN\"];\r",
											"\r",
											"for (var i=0; i<recTotal; i++) {\r",
											"    values[i] =  moment.utc(jsonData.data[i].operationDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\") +\" / \"+ moment.utc(jsonData.data[i].startDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\") +\" / \"+ \r",
											"    moment(jsonData.data[i].endDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\") +\" / \"+ \r",
											"    jsonData.data[i].amountWithoutTax + \" / \"+ jsonData.data[i].quantity + \" / \"+ jsonData.data[i].status;\r",
											"    \r",
											"}\r",
											"\r",
											"console.log(\"Values retrieved:\");\r",
											"for (var i=0; i<recTotal; i++) {\r",
											"    console.log(values[i]);\r",
											"}\r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    for (var i=0; i<recTotal; i++) {\r",
											"        pm.expect(i+\"_\"+values[i]).is.to.equal(i+\"_\"+compareTo[i]);\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"subscription.code\": \"{{testCode}}_SUB_5489_1\",\n        \"toRangeInclusive endDate\":\"01/10/2020\"\n    },\n    \"sortBy\": \"endDate desc, id\",\n    \"sortOrder\":\"ASCENDING\",\n    \"genericFields\":[\"id\",\"code\", \"description\", \"operationDate\", \"startDate\", \"endDate\", \"amountWithoutTax\", \"quantity\", \"status\"]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/WalletOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"WalletOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28e31ff3-1a98-462d-8f3a-e1dd1ce702b2",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6f45451c-531f-4ebe-bbc6-207578cd738f",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus2Month = moment().startOf('month').add(-1, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus1Month\", todayMinus2Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5489_1\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"5489_chargeToDate\",\n                \"dateValue\": \"2020-09-01\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78276b31-3e1e-464e-8bfe-696748021975",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "685821f5-5294-44f0-95ac-127e40f8bb91",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_SUB_5489_2\",\r\n    \"userAccount\": \"UA_{{testCode}}_CH_5489_1\",\r\n    \"offerTemplate\": \"{{testCode}}_OFFER_5489\",\r\n    \"subscriptionDate\": \"2020-07-01\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate services 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec00032-efd3-434c-8114-d4179afb06be",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4b4de61-4440-4b88-980f-ac284533e0b3",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscription\": \"{{testCode}}_SUB_5489_2\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{testCode}}_SERVICE_5489\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2020-07-01\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/activateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"activateServices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Terminate services 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "861605a4-6e21-4945-ac24-6bccf2f2e6a1",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6cdfb26-4340-49f2-84e2-02bb96a31d29",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscriptionCode\": \"{{testCode}}_SUB_5489_2\",\n    \"services\": [\n        \"{{testCode}}_SERVICE_5489\"\n    ],\n    \"terminationDate\": \"2020-08-01\",\n    \"terminationReason\": \"{{testCode}}_terminationReason_5489\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/terminateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"terminateServices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check wallet operations for account 1 subscription 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a319e274-6b14-4a0b-ad8d-cbf02955338d",
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"pm.test(\"Success\", function () {\r",
											"    pm.expect(jsonData.total).is.equal(4);\r",
											"});\r",
											"\r",
											"var recTotal = jsonData.data.length;\r",
											"\r",
											"var values = [];\r",
											"\r",
											"var compareTo =[\r",
											"\r",
											"\"2020-09-01 / 2020-09-01 / 2020-10-01 / 1 / 1 / OPEN\",\r",
											"\"2020-08-01 / 2020-09-01 / 2020-10-01 / -1 / -1 / OPEN\",\r",
											"\"2020-08-01 / 2020-08-01 / 2020-09-01 / 1 / 1 / OPEN\",\r",
											"\"2020-07-01 / 2020-07-01 / 2020-08-01 / 1 / 1 / OPEN\"];\r",
											"\r",
											"for (var i=0; i<recTotal; i++) {\r",
											"    values[i] =  moment.utc(jsonData.data[i].operationDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\") +\" / \"+ moment.utc(jsonData.data[i].startDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\") +\" / \"+ \r",
											"    moment(jsonData.data[i].endDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\") +\" / \"+ \r",
											"    jsonData.data[i].amountWithoutTax + \" / \"+ jsonData.data[i].quantity + \" / \"+ jsonData.data[i].status;\r",
											"    \r",
											"}\r",
											"\r",
											"console.log(\"Values retrieved:\");\r",
											"for (var i=0; i<recTotal; i++) {\r",
											"    console.log(values[i]);\r",
											"}\r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    for (var i=0; i<recTotal; i++) {\r",
											"        pm.expect(i+\"_\"+values[i]).is.to.equal(i+\"_\"+compareTo[i]);\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"subscription.code\": \"{{testCode}}_SUB_5489_2\",\n        \"toRangeInclusive endDate\":\"01/10/2020\"\n    },\n    \"sortBy\": \"endDate desc, id\",\n    \"sortOrder\":\"ASCENDING\",\n    \"genericFields\":[\"id\",\"code\", \"description\", \"operationDate\", \"startDate\", \"endDate\", \"amountWithoutTax\", \"quantity\", \"status\"]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/WalletOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"WalletOperation"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cleanup",
					"item": [],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "23875b59-3493-4ba9-9aa6-815825040950",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"timestamp.iso\", (new Date()).toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3815c30c-e669-4d04-b20a-d203d2ad1ed9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4ff516ff-2fc6-431c-9b25-646b3561808f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "69d48b6d-c9f8-4acc-80a0-24b6cfc1e610",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b7e3f4c5-58bb-4f06-8cc6-bdcc3edbe45a",
			"key": "opencell.base",
			"value": "http://localhost:8080/opencell"
		},
		{
			"id": "3c44530a-7469-4763-8c7e-8e47f5f03838",
			"key": "opencell.url",
			"value": "{{opencell.base}}/api/rest"
		},
		{
			"id": "fe5c1c98-bbad-4c6d-a21d-b77345e37211",
			"key": "opencell.username",
			"value": "opencell.admin"
		},
		{
			"id": "c1fde69d-6a63-4a5f-8054-ea22b38583fe",
			"key": "opencell.password",
			"value": "opencell.admin"
		},
		{
			"id": "6706bf47-837b-4c6a-99e6-e9e744994b4b",
			"key": "opencell.superusername",
			"value": "opencell.superadmin"
		},
		{
			"id": "84ce8101-23a6-4d56-a128-50b5074168cf",
			"key": "opencell.superpassword",
			"value": "opencell.superadmin"
		},
		{
			"id": "76d63f24-9a3b-48c4-babe-49e4920fbb9b",
			"key": "testCode",
			"value": "TST_CODE"
		},
		{
			"id": "41be78a9-4173-4fb8-9e90-b34444042d10",
			"key": "currency",
			"value": "EUR"
		},
		{
			"id": "ab6ec571-b25b-4e4a-b7d6-8213f8bf10c4",
			"key": "language",
			"value": "FRA"
		},
		{
			"id": "d29e1a82-3e55-41a8-aded-0c697472ad70",
			"key": "counrty_code",
			"value": "FR"
		},
		{
			"id": "0423d80d-167f-4212-a038-ea92f726bc63",
			"key": "test_email",
			"value": "test@test.com"
		},
		{
			"id": "2819d366-9887-4c66-b52f-7cc9b20b0204",
			"key": "address",
			"value": "14 Rue Crespin du Gast"
		},
		{
			"id": "1508c82f-f530-4176-b97d-2c58776ea107",
			"key": "first_name",
			"value": "FNAME"
		},
		{
			"id": "dd176e1f-ae8d-49d0-b247-62e075320e49",
			"key": "last_name",
			"value": "LNAME"
		},
		{
			"id": "1b2947c9-2af0-4549-a705-060aa260ef69",
			"key": "city",
			"value": "PARIS"
		},
		{
			"id": "86796c94-87b7-44f5-8fbe-2f578fdd5842",
			"key": "zip_code",
			"value": "75011"
		},
		{
			"id": "3a5e20ee-4c7c-494f-8080-fc1e0512d5ee",
			"key": "state",
			"value": "Paris Area"
		},
		{
			"id": "543bfa1f-b515-425f-bd1f-950a7ed564e2",
			"key": "phone",
			"value": "+212587654321"
		},
		{
			"id": "b487a723-965d-4c7f-ac40-287a004c5ce8",
			"key": "storage",
			"value": "List of values"
		},
		{
			"id": "68e6c29b-d07d-4f37-bfa6-11ba10d77ba6",
			"key": "type",
			"value": "String"
		},
		{
			"id": "4a4e631f-343b-4179-83ee-a24875a898cb",
			"key": "provider.code",
			"value": "DEMO"
		},
		{
			"id": "66fe70bc-6e68-48cb-b107-b09a55acbde8",
			"key": "template.code",
			"value": "BASIC"
		},
		{
			"id": "bd55551e-b34a-4cf9-bfab-6a2b165c1c46",
			"key": "template.label",
			"value": "Basic"
		},
		{
			"id": "2fee9aba-7099-4e75-b5bd-2ccea9551f26",
			"key": "seller.code",
			"value": "MAIN_SELLER"
		},
		{
			"id": "396d8d7e-25af-4489-8227-57f68f3ab905",
			"key": "offer.code",
			"value": "OF"
		},
		{
			"id": "1da235ae-ce93-4f36-a707-148dba39f0b6",
			"key": "project.code",
			"value": "Basic-001"
		},
		{
			"id": "b75e21de-3a67-4f09-9fd2-1f7974a8378a",
			"key": "project.description",
			"value": "Basic offer project for tests"
		},
		{
			"id": "e31cc5a3-8187-4403-b25f-7a4c6bf0313d",
			"key": "project.type",
			"value": "Setup"
		},
		{
			"id": "d7d8d926-ff11-4b04-9252-e473a097f763",
			"key": "project.version",
			"value": "9.4+"
		}
	],
	"protocolProfileBehavior": {}
}