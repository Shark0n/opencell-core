{
	"info": {
		"_postman_id": "140dcc8a-57b6-4a43-adcf-6156640d4361",
		"name": "Workflow Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Dunning workflow",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "script|code=SimpleDunning|desc=handles simple dunning transitions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "869a55f7-e516-48ea-a738-9395edff4893",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"tests[\"is.compiled\"] = jsonData.compilationErrors.length === 0;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.SimpleDunning</code>\r\n        <description>{{script_desc}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\n            package org.meveo.service.script;\r\n\r\n            import org.meveo.model.generic.wf.WFStatus;\r\n            import org.meveo.model.generic.wf.WorkflowInstance;\r\n            import org.meveo.model.notification.NotificationEventTypeEnum;\r\n            import org.meveo.model.payments.CustomerAccount;\r\n            import org.meveo.model.payments.DunningLevelEnum;\r\n            import org.meveo.service.notification.DefaultNotificationService;\r\n            import org.meveo.service.notification.GenericNotificationService;\r\n            import org.meveo.service.payments.impl.CustomerAccountService;\r\n            import org.slf4j.Logger;\r\n            import org.slf4j.LoggerFactory;\r\n\r\n            import java.math.BigDecimal;\r\n            import java.math.RoundingMode;\r\n            import java.util.Date;\r\n            import java.util.Map;\r\n\r\n            import static org.meveo.admin.job.GenericWorkflowJob.*;\r\n\r\n            public class SimpleDunning extends org.meveo.service.script.Script {\r\n\r\n                private static final Logger log = LoggerFactory.getLogger(SimpleDunning.class);\r\n\r\n                private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\"CustomerAccountService\");\r\n                private DefaultNotificationService defaultNotificationService = (DefaultNotificationService) getServiceInterface(\"DefaultNotificationService\");\r\n                private GenericNotificationService genericNotificationService = (GenericNotificationService) getServiceInterface(\"GenericNotificationService\");\r\n\r\n                @Override\r\n                public void execute(Map<String, Object> context) {\r\n                    log.info(\">>> Method context >>>\");\r\n                    context.entrySet().stream().sorted(Map.Entry.comparingByKey()).forEach(entry -> {\r\n                        log.info(\"{}={}\", entry.getKey(), entry.getValue());\r\n                    });\r\n\r\n                    WorkflowInstance workflowInstance = (WorkflowInstance) context.get(WF_INS);\r\n                    CustomerAccount customerAccount = (CustomerAccount) context.get(IWF_ENTITY);\r\n                    WFStatus wfToStatus = (WFStatus) context.get(TO_STATUS);\r\n\r\n                    if (\"R0\".equals(workflowInstance.getCurrentStatus().getCode()) && \"R1\".equals(wfToStatus.getCode())) {\r\n                        sendEmailAndUpdateDunningLevel(customerAccount, DunningLevelEnum.R1);\r\n                    } else if (\"R0\".equals(wfToStatus.getCode())) {\r\n                        sendEmailAndUpdateDunningLevel(customerAccount, DunningLevelEnum.R0);\r\n                    }\r\n                }\r\n\r\n                private void sendEmailAndUpdateDunningLevel(CustomerAccount customerAccount, DunningLevelEnum dunningLevelEnum) {\r\n                    customerAccount = customerAccountService.refreshOrRetrieve(customerAccount);\r\n                    if (customerAccount.getDunningLevel() == dunningLevelEnum)\r\n                        return;\r\n                    customerAccount.setDunningLevel(dunningLevelEnum);\r\n                    customerAccount = customerAccountService.update(customerAccount);\r\n\r\n                    if (dunningLevelEnum == DunningLevelEnum.R0) {\r\n                        sendEmail(customerAccount, NotificationEventTypeEnum.TO_R0);\r\n                    } else if (dunningLevelEnum == DunningLevelEnum.R1) {\r\n                        BigDecimal dueBalance = customerAccountService.customerAccountBalanceDue(customerAccount, new Date());\r\n                        customerAccount.setDueBalance(String.format(\"%s %s\", dueBalance.setScale(2, RoundingMode.HALF_UP).toString(), customerAccount.getTradingCurrency().getCurrencyCode()));\r\n                        sendEmail(customerAccount, NotificationEventTypeEnum.TO_R1);\r\n                    }\r\n                }\r\n\r\n                private void sendEmail(CustomerAccount customerAccount, NotificationEventTypeEnum notificationEventType) {\r\n                    genericNotificationService.getApplicableNotifications(notificationEventType, customerAccount)\r\n                            .forEach(notif -> defaultNotificationService.fireNotification(notif, customerAccount));\r\n                }\r\n            }\r\n]]></script>\r\n</ScriptInstance>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "workflow|code=WF_DUNNING_SIMPLE|class=org.meveo.model.payments.CustomerAccount|desc=Simple dunning workflow",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "512ce57e-8215-426d-ac09-2daf8f5007ff",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "45c8e3ee-d5c5-4829-8d37-eb97b7d0f38e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"disabled\": false,\r\n    \"targetEntityClass\": \"{{class}}\",\r\n    \"initStatus\": \"R0\",\r\n    \"enableHistory\": true,\r\n    \"status\": [\r\n        {\r\n            \"code\": \"R0\",\r\n            \"description\": \"No dunning\"\r\n        },\r\n        {\r\n            \"code\": \"R1\",\r\n            \"description\": \"Reminder email sent\"\r\n        },\r\n        {\r\n            \"code\": \"R2\",\r\n            \"description\": \"Account suspended\"\r\n        },\r\n        {\r\n            \"code\": \"R3\",\r\n            \"description\": \"Dunning file sent to external company\"\r\n        }\r\n    ],\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R0\",\r\n            \"toStatus\": \"R1\",\r\n            \"conditionEl\": \"#{mv:getBean('CustomerAccountService').customerAccountBalanceDue(entity.id)  > 0}\",\r\n            \"priority\": 2,\r\n            \"description\": \"Some amount is due\",\r\n            \"actionScriptCode\": \"org.meveo.service.script.SimpleDunning\"\r\n        },\r\n        {\r\n            \"fromStatus\": \"R1\",\r\n            \"toStatus\": \"R0\",\r\n            \"conditionEl\": \"#{mv:getBean('CustomerAccountService').customerAccountBalanceDue(entity.id)  <= 0}\",\r\n            \"priority\": 1,\r\n            \"description\": \"All is fine again\",\r\n            \"actionScriptCode\": \"org.meveo.service.script.SimpleDunning\"\r\n        },\r\n        {\r\n            \"fromStatus\": \"R1\",\r\n            \"toStatus\": \"R2\",\r\n            \"conditionEl\": \"#{ false }\",\r\n            \"priority\": 3,\r\n            \"description\": \"Time is up\",\r\n            \"actionScriptCode\": \"org.meveo.service.script.SimpleDunning\"\r\n        },\r\n        {\r\n            \"fromStatus\": \"R2\",\r\n            \"toStatus\": \"R3\",\r\n            \"conditionEl\": \"#{ false }\",\r\n            \"priority\": 4,\r\n            \"description\": \"Debt collector is in\",\r\n            \"actionScriptCode\": \"org.meveo.service.script.SimpleDunning\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"admin",
										"genericWorkflow",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "job|Workflow|code=WF_DUNNING_SIMPLE",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"id": "b66ccc63-4f64-4965-afcd-57e9273e46d3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{code}}_JOB\",\r\n    \"disabled\": false,\r\n    \"jobCategory\": \"UTILS\",\r\n    \"jobTemplate\": \"GenericWorkflowJob\",\r\n    \"active\": true,\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"gwfJob_nbRuns\",\r\n                \"longValue\": 1\r\n            },\r\n            {\r\n                \"code\": \"gwfJob_waitingMillis\",\r\n                \"longValue\": 0\r\n            },\r\n            {\r\n                \"code\": \"gwfJob_generic_wf\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.generic.wf.GenericWorkflow\",\r\n                    \"classnameCode\": null,\r\n                    \"code\": \"{{code}}\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"limitToSingleNode\": true,\r\n    \"verboseReport\": true\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"createOrUpdate"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Run",
					"item": [
						{
							"name": "job/execute|code=WF_DUNNING_SIMPLE_JOB",
							"event": [
								{
									"script": {
										"id": "f499fcfe-6202-47aa-b4cd-e8b1df75acab",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"",
											"pm.globals.set(\"jobRun.id\", jsonData.actionStatus.message);"
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\":\"{{code}}_Job\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{opencell.password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{opencell.username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "56fc9b36-cded-4053-a866-460d1a7cda8e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a476dbd9-778e-4476-beda-4d176920d9d5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c2740646-4a89-4453-b041-0a4ff122d872",
			"key": "code",
			"value": "WF_Dunning"
		},
		{
			"id": "90f28c37-7027-4c22-ad95-383b88e83a38",
			"key": "description",
			"value": "dunning workflow"
		},
		{
			"id": "7ba9b5eb-e2b6-4af3-b4e7-fde02bff83b4",
			"key": "class",
			"value": "org.meveo.model.payments.CustomerAccount"
		},
		{
			"id": "a3e7dd55-c996-499f-8349-50c3efaa0ba5",
			"key": "desc",
			"value": "dunning workflow"
		},
		{
			"id": "08db7539-f43a-4631-a151-aa810b5eb9cf",
			"key": "script_desc",
			"value": "Simple Dunning script"
		}
	],
	"protocolProfileBehavior": {}
}